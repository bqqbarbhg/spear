#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Overview:

        Shader program 'DebugSkinnedMesh':
            Get shader desc: DebugSkinnedMesh_DebugSkinnedMesh_shader_desc()
            Vertex shader: vs
                Attribute slots:
                    ATTR_DebugSkinnedMesh_vs_a_position = 0
                    ATTR_DebugSkinnedMesh_vs_a_uv = 1
                    ATTR_DebugSkinnedMesh_vs_a_normal = 2
                    ATTR_DebugSkinnedMesh_vs_a_tangent = 3
                    ATTR_DebugSkinnedMesh_vs_a_indices = 4
                    ATTR_DebugSkinnedMesh_vs_a_weights = 5
                Uniform block 'Bones':
                    C struct: DebugSkinnedMesh_Bones_t
                    Bind slot: SLOT_DebugSkinnedMesh_Bones = 0
                Uniform block 'SkinTransform':
                    C struct: DebugSkinnedMesh_SkinTransform_t
                    Bind slot: SLOT_DebugSkinnedMesh_SkinTransform = 1
            Fragment shader: fs


    Shader descriptor structs:

        sg_shader DebugSkinnedMesh = sg_make_shader(DebugSkinnedMesh_DebugSkinnedMesh_shader_desc());

    Vertex attribute locations for vertex shader 'vs':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_DebugSkinnedMesh_vs_a_position] = { ... },
                    [ATTR_DebugSkinnedMesh_vs_a_uv] = { ... },
                    [ATTR_DebugSkinnedMesh_vs_a_normal] = { ... },
                    [ATTR_DebugSkinnedMesh_vs_a_tangent] = { ... },
                    [ATTR_DebugSkinnedMesh_vs_a_indices] = { ... },
                    [ATTR_DebugSkinnedMesh_vs_a_weights] = { ... },
                },
            },
            ...});

    Image bind slots, use as index in sg_bindings.vs_images[] or .fs_images[]


    Bind slot and C-struct for uniform block 'Bones':

        DebugSkinnedMesh_Bones_t Bones = {
            .bones = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_DebugSkinnedMesh_Bones, &Bones, sizeof(Bones));

    Bind slot and C-struct for uniform block 'SkinTransform':

        DebugSkinnedMesh_SkinTransform_t SkinTransform = {
            .worldToClip = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_DebugSkinnedMesh_SkinTransform, &SkinTransform, sizeof(SkinTransform));

*/
#include <stdint.h>
#include <stdbool.h>
#if !defined(SOKOL_GFX_INCLUDED)
  #error "Please include sokol_gfx.h before DebugSkinnedMesh.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
  #if defined(_MSC_VER)
    #define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
  #else
    #define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
  #endif
#endif
const sg_shader_desc* DebugSkinnedMesh_DebugSkinnedMesh_shader_desc(void);
#define ATTR_DebugSkinnedMesh_vs_a_position (0)
#define ATTR_DebugSkinnedMesh_vs_a_uv (1)
#define ATTR_DebugSkinnedMesh_vs_a_normal (2)
#define ATTR_DebugSkinnedMesh_vs_a_tangent (3)
#define ATTR_DebugSkinnedMesh_vs_a_indices (4)
#define ATTR_DebugSkinnedMesh_vs_a_weights (5)
#define SLOT_DebugSkinnedMesh_Bones (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct DebugSkinnedMesh_Bones_t {
    sf::Vec4 bones[192];
} DebugSkinnedMesh_Bones_t;
#pragma pack(pop)
#define SLOT_DebugSkinnedMesh_SkinTransform (1)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct DebugSkinnedMesh_SkinTransform_t {
    float worldToClip[16];
} DebugSkinnedMesh_SkinTransform_t;
#pragma pack(pop)
#if defined(SOKOL_SHDC_IMPL)
#if defined(SOKOL_GLCORE33)
/*
    #version 330
    
    uniform vec4 Bones[192];
    uniform vec4 SkinTransform[4];
    layout(location = 4) in uvec4 a_indices;
    layout(location = 5) in vec4 a_weights;
    layout(location = 0) in vec3 a_position;
    layout(location = 2) in vec3 a_normal;
    layout(location = 3) in vec4 a_tangent;
    out vec3 v_normal;
    layout(location = 1) in vec2 a_uv;
    
    void main()
    {
        ivec4 _21 = ivec4(vec4(a_indices) * 3.0);
        int _37 = _21.x;
        int _68 = _21.y;
        int _99 = _21.z;
        int _130 = _21.w;
        vec4 _138 = (((Bones[_37 * 1 + 0] * a_weights.x) + (Bones[_68 * 1 + 0] * a_weights.y)) + (Bones[_99 * 1 + 0] * a_weights.z)) + (Bones[_130 * 1 + 0] * a_weights.w);
        vec4 _148 = (((Bones[(_37 + 1) * 1 + 0] * a_weights.x) + (Bones[(_68 + 1) * 1 + 0] * a_weights.y)) + (Bones[(_99 + 1) * 1 + 0] * a_weights.z)) + (Bones[(_130 + 1) * 1 + 0] * a_weights.w);
        vec4 _158 = (((Bones[(_37 + 2) * 1 + 0] * a_weights.x) + (Bones[(_68 + 2) * 1 + 0] * a_weights.y)) + (Bones[(_99 + 2) * 1 + 0] * a_weights.z)) + (Bones[(_130 + 2) * 1 + 0] * a_weights.w);
        vec4 _168 = vec4(a_position, 1.0);
        vec4 _188 = vec4(a_normal, 0.0);
        gl_Position = mat4(SkinTransform[0], SkinTransform[1], SkinTransform[2], SkinTransform[3]) * vec4(dot(_138, _168), dot(_148, _168), dot(_158, _168), 1.0);
        v_normal = normalize(vec3(dot(_138, _188), dot(_148, _188), dot(_158, _188)));
        v_normal.x += ((a_uv.x + a_tangent.x) * 9.9999997473787516355514526367188e-06);
    }
    
*/
static const char DebugSkinnedMesh_vs_source_glsl330[1429] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x42,0x6f,0x6e,0x65,0x73,
    0x5b,0x31,0x39,0x32,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,
    0x65,0x63,0x34,0x20,0x53,0x6b,0x69,0x6e,0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,
    0x6d,0x5b,0x34,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,0x69,0x6e,0x20,0x75,0x76,
    0x65,0x63,0x34,0x20,0x61,0x5f,0x69,0x6e,0x64,0x69,0x63,0x65,0x73,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x35,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x61,0x5f,0x77,0x65,
    0x69,0x67,0x68,0x74,0x73,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,
    0x65,0x63,0x33,0x20,0x61,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x5f,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x69,0x6e,0x20,0x76,
    0x65,0x63,0x34,0x20,0x61,0x5f,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x3b,0x0a,0x6f,
    0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x61,
    0x5f,0x75,0x76,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,
    0x31,0x20,0x3d,0x20,0x69,0x76,0x65,0x63,0x34,0x28,0x76,0x65,0x63,0x34,0x28,0x61,
    0x5f,0x69,0x6e,0x64,0x69,0x63,0x65,0x73,0x29,0x20,0x2a,0x20,0x33,0x2e,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x33,0x37,0x20,0x3d,0x20,
    0x5f,0x32,0x31,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,
    0x36,0x38,0x20,0x3d,0x20,0x5f,0x32,0x31,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x6e,0x74,0x20,0x5f,0x39,0x39,0x20,0x3d,0x20,0x5f,0x32,0x31,0x2e,0x7a,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x33,0x30,0x20,0x3d,0x20,
    0x5f,0x32,0x31,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,
    0x5f,0x31,0x33,0x38,0x20,0x3d,0x20,0x28,0x28,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,
    0x5f,0x33,0x37,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x61,
    0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x78,0x29,0x20,0x2b,0x20,0x28,0x42,
    0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x36,0x38,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,
    0x5d,0x20,0x2a,0x20,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x79,0x29,
    0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x39,0x39,0x20,0x2a,
    0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x61,0x5f,0x77,0x65,0x69,0x67,
    0x68,0x74,0x73,0x2e,0x7a,0x29,0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,0x73,
    0x5b,0x5f,0x31,0x33,0x30,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,
    0x20,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x77,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x34,0x38,0x20,0x3d,0x20,0x28,
    0x28,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,0x5f,0x33,0x37,0x20,0x2b,0x20,0x31,
    0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x61,0x5f,0x77,
    0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x78,0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,
    0x65,0x73,0x5b,0x28,0x5f,0x36,0x38,0x20,0x2b,0x20,0x31,0x29,0x20,0x2a,0x20,0x31,
    0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,
    0x73,0x2e,0x79,0x29,0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,
    0x5f,0x39,0x39,0x20,0x2b,0x20,0x31,0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,
    0x5d,0x20,0x2a,0x20,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x7a,0x29,
    0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,0x5f,0x31,0x33,0x30,
    0x20,0x2b,0x20,0x31,0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,
    0x20,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x77,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x35,0x38,0x20,0x3d,0x20,0x28,
    0x28,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,0x5f,0x33,0x37,0x20,0x2b,0x20,0x32,
    0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x61,0x5f,0x77,
    0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x78,0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,
    0x65,0x73,0x5b,0x28,0x5f,0x36,0x38,0x20,0x2b,0x20,0x32,0x29,0x20,0x2a,0x20,0x31,
    0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,
    0x73,0x2e,0x79,0x29,0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,
    0x5f,0x39,0x39,0x20,0x2b,0x20,0x32,0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,
    0x5d,0x20,0x2a,0x20,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x7a,0x29,
    0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,0x5f,0x31,0x33,0x30,
    0x20,0x2b,0x20,0x32,0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,
    0x20,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x77,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x36,0x38,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x34,0x28,0x61,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,
    0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x31,0x38,0x38,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x61,0x5f,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,
    0x34,0x28,0x53,0x6b,0x69,0x6e,0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,0x5b,
    0x30,0x5d,0x2c,0x20,0x53,0x6b,0x69,0x6e,0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,
    0x6d,0x5b,0x31,0x5d,0x2c,0x20,0x53,0x6b,0x69,0x6e,0x54,0x72,0x61,0x6e,0x73,0x66,
    0x6f,0x72,0x6d,0x5b,0x32,0x5d,0x2c,0x20,0x53,0x6b,0x69,0x6e,0x54,0x72,0x61,0x6e,
    0x73,0x66,0x6f,0x72,0x6d,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,
    0x28,0x64,0x6f,0x74,0x28,0x5f,0x31,0x33,0x38,0x2c,0x20,0x5f,0x31,0x36,0x38,0x29,
    0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x34,0x38,0x2c,0x20,0x5f,0x31,0x36,0x38,
    0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x35,0x38,0x2c,0x20,0x5f,0x31,0x36,
    0x38,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,
    0x7a,0x65,0x28,0x76,0x65,0x63,0x33,0x28,0x64,0x6f,0x74,0x28,0x5f,0x31,0x33,0x38,
    0x2c,0x20,0x5f,0x31,0x38,0x38,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x34,
    0x38,0x2c,0x20,0x5f,0x31,0x38,0x38,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,
    0x35,0x38,0x2c,0x20,0x5f,0x31,0x38,0x38,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2e,0x78,0x20,0x2b,0x3d,0x20,0x28,
    0x28,0x61,0x5f,0x75,0x76,0x2e,0x78,0x20,0x2b,0x20,0x61,0x5f,0x74,0x61,0x6e,0x67,
    0x65,0x6e,0x74,0x2e,0x78,0x29,0x20,0x2a,0x20,0x39,0x2e,0x39,0x39,0x39,0x39,0x39,
    0x39,0x37,0x34,0x37,0x33,0x37,0x38,0x37,0x35,0x31,0x36,0x33,0x35,0x35,0x35,0x31,
    0x34,0x35,0x32,0x36,0x33,0x36,0x37,0x31,0x38,0x38,0x65,0x2d,0x30,0x36,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 330
    
    in vec3 v_normal;
    layout(location = 0) out vec4 o_color;
    
    void main()
    {
        float _19 = (dot(v_normal, vec3(0.57735025882720947265625)) * 0.5) + 0.5;
        o_color = vec4(1.0, _19, _19, 1.0);
    }
    
*/
static const char DebugSkinnedMesh_fs_source_glsl330[208] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x6f,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,
    0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x31,0x39,0x20,0x3d,0x20,0x28,0x64,0x6f,0x74,0x28,0x76,0x5f,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x35,0x37,0x37,0x33,
    0x35,0x30,0x32,0x35,0x38,0x38,0x32,0x37,0x32,0x30,0x39,0x34,0x37,0x32,0x36,0x35,
    0x36,0x32,0x35,0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x35,0x29,0x20,0x2b,0x20,0x30,
    0x2e,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x31,0x2e,0x30,0x2c,0x20,0x5f,0x31,0x39,0x2c,
    0x20,0x5f,0x31,0x39,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,

};
static const sg_shader_desc DebugSkinnedMesh_DebugSkinnedMesh_shader_desc_glsl330 = {
  0, /* _start_canary */
  { /*attrs*/{"a_position","TEXCOORD",0},{"a_uv","TEXCOORD",1},{"a_normal","TEXCOORD",2},{"a_tangent","TEXCOORD",3},{"a_indices","TEXCOORD",4},{"a_weights","TEXCOORD",5},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}, },
  { /* vs */
    DebugSkinnedMesh_vs_source_glsl330, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main", /* entry */
    { /* uniform blocks */
      {
        3072, /* size */
        { /* uniforms */{"Bones",SG_UNIFORMTYPE_FLOAT4,192},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        64, /* size */
        { /* uniforms */{"SkinTransform",SG_UNIFORMTYPE_FLOAT4,4},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  { /* fs */
    DebugSkinnedMesh_fs_source_glsl330, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main", /* entry */
    { /* uniform blocks */
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  "DebugSkinnedMesh_DebugSkinnedMesh_shader", /* label */
  0, /* _end_canary */
};
#endif /* SOKOL_GLCORE33 */
#if defined(SOKOL_GLES3)
/*
    #version 300 es
    
    uniform vec4 Bones[192];
    uniform vec4 SkinTransform[4];
    layout(location = 4) in uvec4 a_indices;
    layout(location = 5) in vec4 a_weights;
    layout(location = 0) in vec3 a_position;
    layout(location = 2) in vec3 a_normal;
    layout(location = 3) in vec4 a_tangent;
    out vec3 v_normal;
    layout(location = 1) in vec2 a_uv;
    
    void main()
    {
        ivec4 _21 = ivec4(vec4(a_indices) * 3.0);
        int _37 = _21.x;
        int _68 = _21.y;
        int _99 = _21.z;
        int _130 = _21.w;
        vec4 _138 = (((Bones[_37 * 1 + 0] * a_weights.x) + (Bones[_68 * 1 + 0] * a_weights.y)) + (Bones[_99 * 1 + 0] * a_weights.z)) + (Bones[_130 * 1 + 0] * a_weights.w);
        vec4 _148 = (((Bones[(_37 + 1) * 1 + 0] * a_weights.x) + (Bones[(_68 + 1) * 1 + 0] * a_weights.y)) + (Bones[(_99 + 1) * 1 + 0] * a_weights.z)) + (Bones[(_130 + 1) * 1 + 0] * a_weights.w);
        vec4 _158 = (((Bones[(_37 + 2) * 1 + 0] * a_weights.x) + (Bones[(_68 + 2) * 1 + 0] * a_weights.y)) + (Bones[(_99 + 2) * 1 + 0] * a_weights.z)) + (Bones[(_130 + 2) * 1 + 0] * a_weights.w);
        vec4 _168 = vec4(a_position, 1.0);
        vec4 _188 = vec4(a_normal, 0.0);
        gl_Position = mat4(SkinTransform[0], SkinTransform[1], SkinTransform[2], SkinTransform[3]) * vec4(dot(_138, _168), dot(_148, _168), dot(_158, _168), 1.0);
        v_normal = normalize(vec3(dot(_138, _188), dot(_148, _188), dot(_158, _188)));
        v_normal.x += ((a_uv.x + a_tangent.x) * 9.9999997473787516355514526367188e-06);
    }
    
*/
static const char DebugSkinnedMesh_vs_source_glsl300es[1432] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x42,0x6f,
    0x6e,0x65,0x73,0x5b,0x31,0x39,0x32,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,
    0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x53,0x6b,0x69,0x6e,0x54,0x72,0x61,0x6e,0x73,
    0x66,0x6f,0x72,0x6d,0x5b,0x34,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,0x69,0x6e,
    0x20,0x75,0x76,0x65,0x63,0x34,0x20,0x61,0x5f,0x69,0x6e,0x64,0x69,0x63,0x65,0x73,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x35,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x61,
    0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,
    0x61,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x61,0x5f,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,
    0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,
    0x32,0x20,0x61,0x5f,0x75,0x76,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x34,
    0x20,0x5f,0x32,0x31,0x20,0x3d,0x20,0x69,0x76,0x65,0x63,0x34,0x28,0x76,0x65,0x63,
    0x34,0x28,0x61,0x5f,0x69,0x6e,0x64,0x69,0x63,0x65,0x73,0x29,0x20,0x2a,0x20,0x33,
    0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x33,0x37,
    0x20,0x3d,0x20,0x5f,0x32,0x31,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,
    0x74,0x20,0x5f,0x36,0x38,0x20,0x3d,0x20,0x5f,0x32,0x31,0x2e,0x79,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x39,0x39,0x20,0x3d,0x20,0x5f,0x32,0x31,
    0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x33,0x30,
    0x20,0x3d,0x20,0x5f,0x32,0x31,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x34,0x20,0x5f,0x31,0x33,0x38,0x20,0x3d,0x20,0x28,0x28,0x28,0x42,0x6f,0x6e,
    0x65,0x73,0x5b,0x5f,0x33,0x37,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,
    0x2a,0x20,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x78,0x29,0x20,0x2b,
    0x20,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x36,0x38,0x20,0x2a,0x20,0x31,0x20,
    0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,
    0x2e,0x79,0x29,0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x39,
    0x39,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x61,0x5f,0x77,
    0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x7a,0x29,0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,
    0x6e,0x65,0x73,0x5b,0x5f,0x31,0x33,0x30,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,
    0x5d,0x20,0x2a,0x20,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x77,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x34,0x38,0x20,
    0x3d,0x20,0x28,0x28,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,0x5f,0x33,0x37,0x20,
    0x2b,0x20,0x31,0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,
    0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x78,0x29,0x20,0x2b,0x20,0x28,
    0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,0x5f,0x36,0x38,0x20,0x2b,0x20,0x31,0x29,0x20,
    0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x61,0x5f,0x77,0x65,0x69,
    0x67,0x68,0x74,0x73,0x2e,0x79,0x29,0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,
    0x73,0x5b,0x28,0x5f,0x39,0x39,0x20,0x2b,0x20,0x31,0x29,0x20,0x2a,0x20,0x31,0x20,
    0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,
    0x2e,0x7a,0x29,0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,0x5f,
    0x31,0x33,0x30,0x20,0x2b,0x20,0x31,0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,
    0x5d,0x20,0x2a,0x20,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x77,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x35,0x38,0x20,
    0x3d,0x20,0x28,0x28,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,0x5f,0x33,0x37,0x20,
    0x2b,0x20,0x32,0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,
    0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x78,0x29,0x20,0x2b,0x20,0x28,
    0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,0x5f,0x36,0x38,0x20,0x2b,0x20,0x32,0x29,0x20,
    0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x61,0x5f,0x77,0x65,0x69,
    0x67,0x68,0x74,0x73,0x2e,0x79,0x29,0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,
    0x73,0x5b,0x28,0x5f,0x39,0x39,0x20,0x2b,0x20,0x32,0x29,0x20,0x2a,0x20,0x31,0x20,
    0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,
    0x2e,0x7a,0x29,0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,0x5f,
    0x31,0x33,0x30,0x20,0x2b,0x20,0x32,0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,
    0x5d,0x20,0x2a,0x20,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x77,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x36,0x38,0x20,
    0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x61,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x34,0x20,0x5f,0x31,0x38,0x38,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x61,0x5f,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x6d,0x61,0x74,0x34,0x28,0x53,0x6b,0x69,0x6e,0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,
    0x72,0x6d,0x5b,0x30,0x5d,0x2c,0x20,0x53,0x6b,0x69,0x6e,0x54,0x72,0x61,0x6e,0x73,
    0x66,0x6f,0x72,0x6d,0x5b,0x31,0x5d,0x2c,0x20,0x53,0x6b,0x69,0x6e,0x54,0x72,0x61,
    0x6e,0x73,0x66,0x6f,0x72,0x6d,0x5b,0x32,0x5d,0x2c,0x20,0x53,0x6b,0x69,0x6e,0x54,
    0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x76,
    0x65,0x63,0x34,0x28,0x64,0x6f,0x74,0x28,0x5f,0x31,0x33,0x38,0x2c,0x20,0x5f,0x31,
    0x36,0x38,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x34,0x38,0x2c,0x20,0x5f,
    0x31,0x36,0x38,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x35,0x38,0x2c,0x20,
    0x5f,0x31,0x36,0x38,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x65,0x63,0x33,0x28,0x64,0x6f,0x74,0x28,0x5f,
    0x31,0x33,0x38,0x2c,0x20,0x5f,0x31,0x38,0x38,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,
    0x5f,0x31,0x34,0x38,0x2c,0x20,0x5f,0x31,0x38,0x38,0x29,0x2c,0x20,0x64,0x6f,0x74,
    0x28,0x5f,0x31,0x35,0x38,0x2c,0x20,0x5f,0x31,0x38,0x38,0x29,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2e,0x78,0x20,0x2b,
    0x3d,0x20,0x28,0x28,0x61,0x5f,0x75,0x76,0x2e,0x78,0x20,0x2b,0x20,0x61,0x5f,0x74,
    0x61,0x6e,0x67,0x65,0x6e,0x74,0x2e,0x78,0x29,0x20,0x2a,0x20,0x39,0x2e,0x39,0x39,
    0x39,0x39,0x39,0x39,0x37,0x34,0x37,0x33,0x37,0x38,0x37,0x35,0x31,0x36,0x33,0x35,
    0x35,0x35,0x31,0x34,0x35,0x32,0x36,0x33,0x36,0x37,0x31,0x38,0x38,0x65,0x2d,0x30,
    0x36,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    in highp vec3 v_normal;
    layout(location = 0) out highp vec4 o_color;
    
    void main()
    {
        highp float _19 = (dot(v_normal, vec3(0.57735025882720947265625)) * 0.5) + 0.5;
        o_color = vec4(1.0, _19, _19, 1.0);
    }
    
*/
static const char DebugSkinnedMesh_fs_source_glsl300es[275] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x69,
    0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x6f,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x31,0x39,0x20,0x3d,0x20,0x28,0x64,0x6f,0x74,0x28,0x76,0x5f,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x35,
    0x37,0x37,0x33,0x35,0x30,0x32,0x35,0x38,0x38,0x32,0x37,0x32,0x30,0x39,0x34,0x37,
    0x32,0x36,0x35,0x36,0x32,0x35,0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x35,0x29,0x20,
    0x2b,0x20,0x30,0x2e,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x31,0x2e,0x30,0x2c,0x20,0x5f,
    0x31,0x39,0x2c,0x20,0x5f,0x31,0x39,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x00,
};
static const sg_shader_desc DebugSkinnedMesh_DebugSkinnedMesh_shader_desc_glsl300es = {
  0, /* _start_canary */
  { /*attrs*/{"a_position","TEXCOORD",0},{"a_uv","TEXCOORD",1},{"a_normal","TEXCOORD",2},{"a_tangent","TEXCOORD",3},{"a_indices","TEXCOORD",4},{"a_weights","TEXCOORD",5},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}, },
  { /* vs */
    DebugSkinnedMesh_vs_source_glsl300es, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main", /* entry */
    { /* uniform blocks */
      {
        3072, /* size */
        { /* uniforms */{"Bones",SG_UNIFORMTYPE_FLOAT4,192},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        64, /* size */
        { /* uniforms */{"SkinTransform",SG_UNIFORMTYPE_FLOAT4,4},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  { /* fs */
    DebugSkinnedMesh_fs_source_glsl300es, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main", /* entry */
    { /* uniform blocks */
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  "DebugSkinnedMesh_DebugSkinnedMesh_shader", /* label */
  0, /* _end_canary */
};
#endif /* SOKOL_GLES3 */
#if defined(SOKOL_D3D11)
/*
    cbuffer Bones : register(b0)
    {
        float4 _32_bones[192] : packoffset(c0);
    };
    
    cbuffer SkinTransform : register(b1)
    {
        row_major float4x4 _226_worldToClip : packoffset(c0);
    };
    
    
    static float4 gl_Position;
    static uint4 a_indices;
    static float4 a_weights;
    static float3 a_position;
    static float3 a_normal;
    static float4 a_tangent;
    static float3 v_normal;
    static float2 a_uv;
    
    struct SPIRV_Cross_Input
    {
        float3 a_position : TEXCOORD0;
        float2 a_uv : TEXCOORD1;
        float3 a_normal : TEXCOORD2;
        float4 a_tangent : TEXCOORD3;
        uint4 a_indices : TEXCOORD4;
        float4 a_weights : TEXCOORD5;
    };
    
    struct SPIRV_Cross_Output
    {
        float3 v_normal : TEXCOORD0;
        float4 gl_Position : SV_Position;
    };
    
    #line 32 ""
    void vert_main()
    {
    #line 32 ""
        int4 _19 = int4(a_indices) * int4(3, 3, 3, 3);
    #line 34 ""
        int _37 = _19.x;
        int _68 = _19.y;
        int _99 = _19.z;
        int _130 = _19.w;
        float4 _138 = (((_32_bones[_37] * a_weights.x) + (_32_bones[_68] * a_weights.y)) + (_32_bones[_99] * a_weights.z)) + (_32_bones[_130] * a_weights.w);
        float4 _148 = (((_32_bones[_37 + 1] * a_weights.x) + (_32_bones[_68 + 1] * a_weights.y)) + (_32_bones[_99 + 1] * a_weights.z)) + (_32_bones[_130 + 1] * a_weights.w);
        float4 _158 = (((_32_bones[_37 + 2] * a_weights.x) + (_32_bones[_68 + 2] * a_weights.y)) + (_32_bones[_99 + 2] * a_weights.z)) + (_32_bones[_130 + 2] * a_weights.w);
    #line 48 ""
        float4 _168 = float4(a_position, 1.0f);
    #line 54 ""
        float4 _188 = float4(a_normal, 0.0f);
    #line 66 ""
        gl_Position = mul(float4(dot(_138, _168), dot(_148, _168), dot(_158, _168), 1.0f), _226_worldToClip);
        v_normal = normalize(float3(dot(_138, _188), dot(_148, _188), dot(_158, _188)));
    #line 69 ""
        v_normal.x += ((a_uv.x + a_tangent.x) * 9.9999997473787516355514526367188e-06f);
    }
    
    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        a_indices = stage_input.a_indices;
        a_weights = stage_input.a_weights;
        a_position = stage_input.a_position;
        a_normal = stage_input.a_normal;
        a_tangent = stage_input.a_tangent;
        a_uv = stage_input.a_uv;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.v_normal = v_normal;
        return stage_output;
    }
*/
static const uint8_t DebugSkinnedMesh_vs_bytecode_hlsl5[2252] = {
    0x44,0x58,0x42,0x43,0x93,0xa0,0x68,0x94,0xb2,0x36,0xdc,0x19,0xeb,0x4c,0xbd,0x70,
    0xa6,0xed,0x63,0xda,0x01,0x00,0x00,0x00,0xcc,0x08,0x00,0x00,0x05,0x00,0x00,0x00,
    0x34,0x00,0x00,0x00,0xec,0x01,0x00,0x00,0x98,0x02,0x00,0x00,0xf0,0x02,0x00,0x00,
    0x30,0x08,0x00,0x00,0x52,0x44,0x45,0x46,0xb0,0x01,0x00,0x00,0x02,0x00,0x00,0x00,
    0x90,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x3c,0x00,0x00,0x00,0x00,0x05,0xfe,0xff,
    0x10,0x81,0x00,0x00,0x88,0x01,0x00,0x00,0x52,0x44,0x31,0x31,0x3c,0x00,0x00,0x00,
    0x18,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x28,0x00,0x00,0x00,0x24,0x00,0x00,0x00,
    0x0c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x82,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x42,0x6f,0x6e,0x65,0x73,0x00,0x53,0x6b,
    0x69,0x6e,0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,0x00,0x7c,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0xc0,0x00,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x82,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x20,0x01,0x00,0x00,
    0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xe8,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x0c,0x00,0x00,0x02,0x00,0x00,0x00,0xfc,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0x5f,0x33,0x32,0x5f,0x62,0x6f,0x6e,0x65,0x73,0x00,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x00,0xab,0xab,0xab,0x01,0x00,0x03,0x00,0x01,0x00,0x04,0x00,
    0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf2,0x00,0x00,0x00,0x48,0x01,0x00,0x00,
    0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x64,0x01,0x00,0x00,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0x5f,0x32,0x32,0x36,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x54,0x6f,
    0x43,0x6c,0x69,0x70,0x00,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x00,0xab,0xab,
    0x02,0x00,0x03,0x00,0x04,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x59,0x01,0x00,0x00,0x4d,0x69,0x63,0x72,0x6f,0x73,0x6f,0x66,0x74,0x20,0x28,0x52,
    0x29,0x20,0x48,0x4c,0x53,0x4c,0x20,0x53,0x68,0x61,0x64,0x65,0x72,0x20,0x43,0x6f,
    0x6d,0x70,0x69,0x6c,0x65,0x72,0x20,0x31,0x30,0x2e,0x31,0x00,0x49,0x53,0x47,0x4e,
    0xa4,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x98,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x07,0x07,0x00,0x00,0x98,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x03,0x01,0x00,0x00,0x98,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x07,0x07,0x00,0x00,0x98,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x0f,0x01,0x00,0x00,0x98,0x00,0x00,0x00,
    0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x04,0x00,0x00,0x00,
    0x0f,0x0f,0x00,0x00,0x98,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x0f,0x0f,0x00,0x00,0x54,0x45,0x58,0x43,
    0x4f,0x4f,0x52,0x44,0x00,0xab,0xab,0xab,0x4f,0x53,0x47,0x4e,0x50,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x08,0x00,0x00,
    0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,
    0x00,0x53,0x56,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x00,0xab,0xab,0xab,
    0x53,0x48,0x45,0x58,0x38,0x05,0x00,0x00,0x50,0x00,0x01,0x00,0x4e,0x01,0x00,0x00,
    0x6a,0x08,0x00,0x01,0x59,0x08,0x00,0x04,0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,
    0xc0,0x00,0x00,0x00,0x59,0x00,0x00,0x04,0x46,0x8e,0x20,0x00,0x01,0x00,0x00,0x00,
    0x04,0x00,0x00,0x00,0x5f,0x00,0x00,0x03,0x72,0x10,0x10,0x00,0x00,0x00,0x00,0x00,
    0x5f,0x00,0x00,0x03,0x12,0x10,0x10,0x00,0x01,0x00,0x00,0x00,0x5f,0x00,0x00,0x03,
    0x72,0x10,0x10,0x00,0x02,0x00,0x00,0x00,0x5f,0x00,0x00,0x03,0x12,0x10,0x10,0x00,
    0x03,0x00,0x00,0x00,0x5f,0x00,0x00,0x03,0xf2,0x10,0x10,0x00,0x04,0x00,0x00,0x00,
    0x5f,0x00,0x00,0x03,0xf2,0x10,0x10,0x00,0x05,0x00,0x00,0x00,0x65,0x00,0x00,0x03,
    0x72,0x20,0x10,0x00,0x00,0x00,0x00,0x00,0x67,0x00,0x00,0x04,0xf2,0x20,0x10,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x68,0x00,0x00,0x02,0x05,0x00,0x00,0x00,
    0x26,0x00,0x00,0x0b,0x00,0xd0,0x00,0x00,0xf2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x1e,0x10,0x00,0x04,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x03,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x38,0x00,0x00,0x09,
    0xf2,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x56,0x15,0x10,0x00,0x05,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x04,0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x32,0x00,0x00,0x0b,0xf2,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x8e,0x20,0x04,
    0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x06,0x10,0x10,0x00,
    0x05,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x01,0x00,0x00,0x00,0x32,0x00,0x00,0x0b,
    0xf2,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x8e,0x20,0x04,0x00,0x00,0x00,0x00,
    0x2a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0xa6,0x1a,0x10,0x00,0x05,0x00,0x00,0x00,
    0x46,0x0e,0x10,0x00,0x01,0x00,0x00,0x00,0x32,0x00,0x00,0x0b,0xf2,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x8e,0x20,0x04,0x00,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0xf6,0x1f,0x10,0x00,0x05,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,
    0x01,0x00,0x00,0x00,0x10,0x00,0x00,0x07,0x22,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x12,0x10,0x00,0x02,0x00,0x00,0x00,
    0x23,0x00,0x00,0x0f,0xf2,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x1e,0x10,0x00,
    0x04,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x01,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x38,0x00,0x00,0x09,
    0xf2,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x56,0x15,0x10,0x00,0x05,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x04,0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x32,0x00,0x00,0x0b,0xf2,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x46,0x8e,0x20,0x04,
    0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x06,0x10,0x10,0x00,
    0x05,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x03,0x00,0x00,0x00,0x32,0x00,0x00,0x0b,
    0xf2,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x46,0x8e,0x20,0x04,0x00,0x00,0x00,0x00,
    0x2a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0xa6,0x1a,0x10,0x00,0x05,0x00,0x00,0x00,
    0x46,0x0e,0x10,0x00,0x03,0x00,0x00,0x00,0x32,0x00,0x00,0x0b,0xf2,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x46,0x8e,0x20,0x04,0x00,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0xf6,0x1f,0x10,0x00,0x05,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,
    0x03,0x00,0x00,0x00,0x10,0x00,0x00,0x07,0x42,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x12,0x10,0x00,0x02,0x00,0x00,0x00,
    0x23,0x00,0x00,0x0f,0xf2,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x46,0x1e,0x10,0x00,
    0x04,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x02,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x38,0x00,0x00,0x09,
    0xf2,0x00,0x10,0x00,0x04,0x00,0x00,0x00,0x56,0x15,0x10,0x00,0x05,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x04,0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,
    0x32,0x00,0x00,0x0b,0xf2,0x00,0x10,0x00,0x04,0x00,0x00,0x00,0x46,0x8e,0x20,0x04,
    0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x06,0x10,0x10,0x00,
    0x05,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x04,0x00,0x00,0x00,0x32,0x00,0x00,0x0b,
    0xf2,0x00,0x10,0x00,0x04,0x00,0x00,0x00,0x46,0x8e,0x20,0x04,0x00,0x00,0x00,0x00,
    0x2a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0xa6,0x1a,0x10,0x00,0x05,0x00,0x00,0x00,
    0x46,0x0e,0x10,0x00,0x04,0x00,0x00,0x00,0x32,0x00,0x00,0x0b,0xf2,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0x46,0x8e,0x20,0x04,0x00,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0xf6,0x1f,0x10,0x00,0x05,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,
    0x04,0x00,0x00,0x00,0x10,0x00,0x00,0x07,0x82,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x03,0x00,0x00,0x00,0x46,0x12,0x10,0x00,0x02,0x00,0x00,0x00,
    0x10,0x00,0x00,0x07,0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x96,0x07,0x10,0x00,
    0x01,0x00,0x00,0x00,0x96,0x07,0x10,0x00,0x01,0x00,0x00,0x00,0x44,0x00,0x00,0x05,
    0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x38,0x00,0x00,0x07,0xe2,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x06,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x56,0x0e,0x10,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
    0x12,0x00,0x10,0x00,0x04,0x00,0x00,0x00,0x0a,0x10,0x10,0x00,0x01,0x00,0x00,0x00,
    0x0a,0x10,0x10,0x00,0x03,0x00,0x00,0x00,0x32,0x00,0x00,0x09,0x12,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x04,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0xac,0xc5,0x27,0x37,0x1a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x36,0x00,0x00,0x05,
    0x72,0x20,0x10,0x00,0x00,0x00,0x00,0x00,0x86,0x03,0x10,0x00,0x01,0x00,0x00,0x00,
    0x36,0x00,0x00,0x05,0x72,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x12,0x10,0x00,
    0x00,0x00,0x00,0x00,0x36,0x00,0x00,0x05,0x82,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x00,0x00,0x80,0x3f,0x11,0x00,0x00,0x07,0x12,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,
    0x01,0x00,0x00,0x00,0x38,0x00,0x00,0x08,0xf2,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x06,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x8e,0x20,0x00,0x01,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x11,0x00,0x00,0x07,0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x01,0x00,0x00,0x00,
    0x11,0x00,0x00,0x07,0x22,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,
    0x03,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x01,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,
    0xf2,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x06,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,
    0x02,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,0xf2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x56,0x05,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x8e,0x20,0x00,0x01,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x08,
    0xf2,0x20,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x00,0x01,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x3e,0x00,0x00,0x01,
    0x53,0x54,0x41,0x54,0x94,0x00,0x00,0x00,0x22,0x00,0x00,0x00,0x05,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x1b,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};
/*
    static float3 v_normal;
    static float4 o_color;
    
    struct SPIRV_Cross_Input
    {
        float3 v_normal : TEXCOORD0;
    };
    
    struct SPIRV_Cross_Output
    {
        float4 o_color : SV_Target0;
    };
    
    #line 11 ""
    void frag_main()
    {
    #line 11 ""
        float _19 = (dot(v_normal, 0.57735025882720947265625f.xxx) * 0.5f) + 0.5f;
        o_color = float4(1.0f, _19, _19, 1.0f);
    }
    
    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        v_normal = stage_input.v_normal;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.o_color = o_color;
        return stage_output;
    }
*/
static const uint8_t DebugSkinnedMesh_fs_bytecode_hlsl5[608] = {
    0x44,0x58,0x42,0x43,0x20,0x55,0x41,0x31,0x5b,0x90,0x00,0x78,0xa1,0x44,0xec,0xb7,
    0x5f,0xeb,0xbf,0xa7,0x01,0x00,0x00,0x00,0x60,0x02,0x00,0x00,0x05,0x00,0x00,0x00,
    0x34,0x00,0x00,0x00,0xa0,0x00,0x00,0x00,0xd4,0x00,0x00,0x00,0x08,0x01,0x00,0x00,
    0xc4,0x01,0x00,0x00,0x52,0x44,0x45,0x46,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3c,0x00,0x00,0x00,0x00,0x05,0xff,0xff,
    0x10,0x81,0x00,0x00,0x3c,0x00,0x00,0x00,0x52,0x44,0x31,0x31,0x3c,0x00,0x00,0x00,
    0x18,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x28,0x00,0x00,0x00,0x24,0x00,0x00,0x00,
    0x0c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x4d,0x69,0x63,0x72,0x6f,0x73,0x6f,0x66,
    0x74,0x20,0x28,0x52,0x29,0x20,0x48,0x4c,0x53,0x4c,0x20,0x53,0x68,0x61,0x64,0x65,
    0x72,0x20,0x43,0x6f,0x6d,0x70,0x69,0x6c,0x65,0x72,0x20,0x31,0x30,0x2e,0x31,0x00,
    0x49,0x53,0x47,0x4e,0x2c,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x08,0x00,0x00,0x00,
    0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x07,0x07,0x00,0x00,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,
    0x00,0xab,0xab,0xab,0x4f,0x53,0x47,0x4e,0x2c,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x08,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0x53,0x56,0x5f,0x54,
    0x61,0x72,0x67,0x65,0x74,0x00,0xab,0xab,0x53,0x48,0x45,0x58,0xb4,0x00,0x00,0x00,
    0x50,0x00,0x00,0x00,0x2d,0x00,0x00,0x00,0x6a,0x08,0x00,0x01,0x62,0x10,0x00,0x03,
    0x72,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x65,0x00,0x00,0x03,0xf2,0x20,0x10,0x00,
    0x00,0x00,0x00,0x00,0x68,0x00,0x00,0x02,0x01,0x00,0x00,0x00,0x10,0x00,0x00,0x0a,
    0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x12,0x10,0x00,0x00,0x00,0x00,0x00,
    0x02,0x40,0x00,0x00,0x3a,0xcd,0x13,0x3f,0x3a,0xcd,0x13,0x3f,0x3a,0xcd,0x13,0x3f,
    0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x0f,0x62,0x20,0x10,0x00,0x00,0x00,0x00,0x00,
    0x06,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x3f,0x00,0x00,0x00,0x3f,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3f,0x00,0x00,0x00,0x3f,0x00,0x00,0x00,0x00,
    0x36,0x00,0x00,0x08,0x92,0x20,0x10,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,
    0x00,0x00,0x80,0x3f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x3f,
    0x3e,0x00,0x00,0x01,0x53,0x54,0x41,0x54,0x94,0x00,0x00,0x00,0x04,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

};
static const sg_shader_desc DebugSkinnedMesh_DebugSkinnedMesh_shader_desc_hlsl5 = {
  0, /* _start_canary */
  { /*attrs*/{"a_position","TEXCOORD",0},{"a_uv","TEXCOORD",1},{"a_normal","TEXCOORD",2},{"a_tangent","TEXCOORD",3},{"a_indices","TEXCOORD",4},{"a_weights","TEXCOORD",5},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}, },
  { /* vs */
    0, /* source */
    DebugSkinnedMesh_vs_bytecode_hlsl5, /* bytecode */
    2252, /* bytecode_size */
    "main", /* entry */
    { /* uniform blocks */
      {
        3072, /* size */
        { /* uniforms */{"Bones",SG_UNIFORMTYPE_FLOAT4,192},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        64, /* size */
        { /* uniforms */{"SkinTransform",SG_UNIFORMTYPE_FLOAT4,4},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  { /* fs */
    0, /* source */
    DebugSkinnedMesh_fs_bytecode_hlsl5, /* bytecode */
    608, /* bytecode_size */
    "main", /* entry */
    { /* uniform blocks */
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  "DebugSkinnedMesh_DebugSkinnedMesh_shader", /* label */
  0, /* _end_canary */
};
#endif /* SOKOL_D3D11 */
#if defined(SOKOL_METAL)
/*
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct Bones
    {
        float4 bones[192];
    };
    
    struct SkinTransform
    {
        float4x4 worldToClip;
    };
    
    struct main0_out
    {
        float3 v_normal [[user(locn0)]];
        float4 gl_Position [[position]];
    };
    
    struct main0_in
    {
        float3 a_position [[attribute(0)]];
        float2 a_uv [[attribute(1)]];
        float3 a_normal [[attribute(2)]];
        float4 a_tangent [[attribute(3)]];
        uint4 a_indices [[attribute(4)]];
        float4 a_weights [[attribute(5)]];
    };
    
    #line 32 ""
    vertex main0_out main0(main0_in in [[stage_in]], constant Bones& _32 [[buffer(0)]], constant SkinTransform& _226 [[buffer(1)]])
    {
        main0_out out = {};
    #line 32 ""
        int4 _19 = int4(in.a_indices) * int4(3);
    #line 34 ""
        int _37 = _19.x;
        int _68 = _19.y;
        int _99 = _19.z;
        int _130 = _19.w;
        float4 _138 = (((_32.bones[_37] * in.a_weights.x) + (_32.bones[_68] * in.a_weights.y)) + (_32.bones[_99] * in.a_weights.z)) + (_32.bones[_130] * in.a_weights.w);
        float4 _148 = (((_32.bones[_37 + 1] * in.a_weights.x) + (_32.bones[_68 + 1] * in.a_weights.y)) + (_32.bones[_99 + 1] * in.a_weights.z)) + (_32.bones[_130 + 1] * in.a_weights.w);
        float4 _158 = (((_32.bones[_37 + 2] * in.a_weights.x) + (_32.bones[_68 + 2] * in.a_weights.y)) + (_32.bones[_99 + 2] * in.a_weights.z)) + (_32.bones[_130 + 2] * in.a_weights.w);
    #line 48 ""
        float4 _168 = float4(in.a_position, 1.0);
    #line 54 ""
        float4 _188 = float4(in.a_normal, 0.0);
    #line 66 ""
        out.gl_Position = _226.worldToClip * float4(dot(_138, _168), dot(_148, _168), dot(_158, _168), 1.0);
        out.v_normal = normalize(float3(dot(_138, _188), dot(_148, _188), dot(_158, _188)));
    #line 69 ""
        out.v_normal.x += ((in.a_uv.x + in.a_tangent.x) * 9.9999997473787516355514526367188e-06);
        return out;
    }
    
*/
static const char DebugSkinnedMesh_vs_source_metal_macos[1810] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x42,
    0x6f,0x6e,0x65,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x31,0x39,0x32,0x5d,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x6b,0x69,0x6e,0x54,0x72,0x61,
    0x6e,0x73,0x66,0x6f,0x72,0x6d,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x78,0x34,0x20,0x77,0x6f,0x72,0x6c,0x64,0x54,0x6f,0x43,0x6c,0x69,
    0x70,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,
    0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,
    0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x61,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x30,0x29,0x5d,0x5d,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x61,0x5f,0x75,
    0x76,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x31,0x29,
    0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x61,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,
    0x75,0x74,0x65,0x28,0x32,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x61,0x5f,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x20,0x5b,
    0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x33,0x29,0x5d,0x5d,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x34,0x20,0x61,0x5f,0x69,0x6e,0x64,
    0x69,0x63,0x65,0x73,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,
    0x28,0x34,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x20,0x5b,0x5b,0x61,0x74,
    0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x35,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x33,0x32,0x20,0x22,0x22,0x0a,0x76,0x65,
    0x72,0x74,0x65,0x78,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,
    0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x42,0x6f,0x6e,0x65,0x73,0x26,0x20,0x5f,
    0x33,0x32,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,
    0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x53,0x6b,0x69,0x6e,0x54,
    0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,0x26,0x20,0x5f,0x32,0x32,0x36,0x20,0x5b,
    0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x31,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,
    0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x33,0x32,
    0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x34,0x20,0x5f,0x31,0x39,
    0x20,0x3d,0x20,0x69,0x6e,0x74,0x34,0x28,0x69,0x6e,0x2e,0x61,0x5f,0x69,0x6e,0x64,
    0x69,0x63,0x65,0x73,0x29,0x20,0x2a,0x20,0x69,0x6e,0x74,0x34,0x28,0x33,0x29,0x3b,
    0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x33,0x34,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x6e,0x74,0x20,0x5f,0x33,0x37,0x20,0x3d,0x20,0x5f,0x31,0x39,0x2e,0x78,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x36,0x38,0x20,0x3d,0x20,
    0x5f,0x31,0x39,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,
    0x39,0x39,0x20,0x3d,0x20,0x5f,0x31,0x39,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x6e,0x74,0x20,0x5f,0x31,0x33,0x30,0x20,0x3d,0x20,0x5f,0x31,0x39,0x2e,0x77,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x31,0x33,
    0x38,0x20,0x3d,0x20,0x28,0x28,0x28,0x5f,0x33,0x32,0x2e,0x62,0x6f,0x6e,0x65,0x73,
    0x5b,0x5f,0x33,0x37,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x77,0x65,0x69,
    0x67,0x68,0x74,0x73,0x2e,0x78,0x29,0x20,0x2b,0x20,0x28,0x5f,0x33,0x32,0x2e,0x62,
    0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x36,0x38,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,
    0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x79,0x29,0x29,0x20,0x2b,0x20,0x28,
    0x5f,0x33,0x32,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x39,0x39,0x5d,0x20,0x2a,
    0x20,0x69,0x6e,0x2e,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x7a,0x29,
    0x29,0x20,0x2b,0x20,0x28,0x5f,0x33,0x32,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,
    0x31,0x33,0x30,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x77,0x65,0x69,0x67,
    0x68,0x74,0x73,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x20,0x5f,0x31,0x34,0x38,0x20,0x3d,0x20,0x28,0x28,0x28,0x5f,0x33,0x32,
    0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x33,0x37,0x20,0x2b,0x20,0x31,0x5d,0x20,
    0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x78,
    0x29,0x20,0x2b,0x20,0x28,0x5f,0x33,0x32,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,
    0x36,0x38,0x20,0x2b,0x20,0x31,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x77,
    0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x79,0x29,0x29,0x20,0x2b,0x20,0x28,0x5f,0x33,
    0x32,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x39,0x39,0x20,0x2b,0x20,0x31,0x5d,
    0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,
    0x7a,0x29,0x29,0x20,0x2b,0x20,0x28,0x5f,0x33,0x32,0x2e,0x62,0x6f,0x6e,0x65,0x73,
    0x5b,0x5f,0x31,0x33,0x30,0x20,0x2b,0x20,0x31,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,
    0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x31,0x35,0x38,0x20,0x3d,0x20,
    0x28,0x28,0x28,0x5f,0x33,0x32,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x33,0x37,
    0x20,0x2b,0x20,0x32,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x77,0x65,0x69,
    0x67,0x68,0x74,0x73,0x2e,0x78,0x29,0x20,0x2b,0x20,0x28,0x5f,0x33,0x32,0x2e,0x62,
    0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x36,0x38,0x20,0x2b,0x20,0x32,0x5d,0x20,0x2a,0x20,
    0x69,0x6e,0x2e,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x79,0x29,0x29,
    0x20,0x2b,0x20,0x28,0x5f,0x33,0x32,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x39,
    0x39,0x20,0x2b,0x20,0x32,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x77,0x65,
    0x69,0x67,0x68,0x74,0x73,0x2e,0x7a,0x29,0x29,0x20,0x2b,0x20,0x28,0x5f,0x33,0x32,
    0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x31,0x33,0x30,0x20,0x2b,0x20,0x32,0x5d,
    0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,
    0x77,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x34,0x38,0x20,0x22,0x22,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x31,0x36,0x38,0x20,
    0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x61,0x5f,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x23,0x6c,
    0x69,0x6e,0x65,0x20,0x35,0x34,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x5f,0x31,0x38,0x38,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x28,0x69,0x6e,0x2e,0x61,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,
    0x30,0x2e,0x30,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x36,0x36,0x20,0x22,
    0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x5f,0x32,0x32,0x36,0x2e,0x77,0x6f,0x72,
    0x6c,0x64,0x54,0x6f,0x43,0x6c,0x69,0x70,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x28,0x64,0x6f,0x74,0x28,0x5f,0x31,0x33,0x38,0x2c,0x20,0x5f,0x31,0x36,0x38,
    0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x34,0x38,0x2c,0x20,0x5f,0x31,0x36,
    0x38,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x35,0x38,0x2c,0x20,0x5f,0x31,
    0x36,0x38,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,
    0x75,0x74,0x2e,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x64,
    0x6f,0x74,0x28,0x5f,0x31,0x33,0x38,0x2c,0x20,0x5f,0x31,0x38,0x38,0x29,0x2c,0x20,
    0x64,0x6f,0x74,0x28,0x5f,0x31,0x34,0x38,0x2c,0x20,0x5f,0x31,0x38,0x38,0x29,0x2c,
    0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x35,0x38,0x2c,0x20,0x5f,0x31,0x38,0x38,0x29,
    0x29,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x36,0x39,0x20,0x22,0x22,0x0a,
    0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x2e,0x78,0x20,0x2b,0x3d,0x20,0x28,0x28,0x69,0x6e,0x2e,0x61,0x5f,0x75,0x76,0x2e,
    0x78,0x20,0x2b,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,
    0x2e,0x78,0x29,0x20,0x2a,0x20,0x39,0x2e,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x34,
    0x37,0x33,0x37,0x38,0x37,0x35,0x31,0x36,0x33,0x35,0x35,0x35,0x31,0x34,0x35,0x32,
    0x36,0x33,0x36,0x37,0x31,0x38,0x38,0x65,0x2d,0x30,0x36,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct main0_out
    {
        float4 o_color [[color(0)]];
    };
    
    struct main0_in
    {
        float3 v_normal [[user(locn0)]];
    };
    
    #line 11 ""
    fragment main0_out main0(main0_in in [[stage_in]])
    {
        main0_out out = {};
    #line 11 ""
        float _19 = (dot(in.v_normal, float3(0.57735025882720947265625)) * 0.5) + 0.5;
        out.o_color = float4(1.0, _19, _19, 1.0);
        return out;
    }
    
*/
static const char DebugSkinnedMesh_fs_source_metal_macos[437] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x6f,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,
    0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,
    0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,
    0x20,0x31,0x31,0x20,0x22,0x22,0x0a,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,
    0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,
    0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,
    0x7b,0x7d,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x31,0x20,0x22,0x22,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x39,0x20,0x3d,0x20,
    0x28,0x64,0x6f,0x74,0x28,0x69,0x6e,0x2e,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x30,0x2e,0x35,0x37,0x37,0x33,0x35,
    0x30,0x32,0x35,0x38,0x38,0x32,0x37,0x32,0x30,0x39,0x34,0x37,0x32,0x36,0x35,0x36,
    0x32,0x35,0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x35,0x29,0x20,0x2b,0x20,0x30,0x2e,
    0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x6f,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x31,0x2e,0x30,0x2c,
    0x20,0x5f,0x31,0x39,0x2c,0x20,0x5f,0x31,0x39,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x00,
};
static const sg_shader_desc DebugSkinnedMesh_DebugSkinnedMesh_shader_desc_metal_macos = {
  0, /* _start_canary */
  { /*attrs*/{"a_position","TEXCOORD",0},{"a_uv","TEXCOORD",1},{"a_normal","TEXCOORD",2},{"a_tangent","TEXCOORD",3},{"a_indices","TEXCOORD",4},{"a_weights","TEXCOORD",5},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}, },
  { /* vs */
    DebugSkinnedMesh_vs_source_metal_macos, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main0", /* entry */
    { /* uniform blocks */
      {
        3072, /* size */
        { /* uniforms */{"Bones",SG_UNIFORMTYPE_FLOAT4,192},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        64, /* size */
        { /* uniforms */{"SkinTransform",SG_UNIFORMTYPE_FLOAT4,4},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  { /* fs */
    DebugSkinnedMesh_fs_source_metal_macos, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main0", /* entry */
    { /* uniform blocks */
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  "DebugSkinnedMesh_DebugSkinnedMesh_shader", /* label */
  0, /* _end_canary */
};
#endif /* SOKOL_METAL */
#if defined(SOKOL_METAL)
/*
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct Bones
    {
        float4 bones[192];
    };
    
    struct SkinTransform
    {
        float4x4 worldToClip;
    };
    
    struct main0_out
    {
        float3 v_normal [[user(locn0)]];
        float4 gl_Position [[position]];
    };
    
    struct main0_in
    {
        float3 a_position [[attribute(0)]];
        float2 a_uv [[attribute(1)]];
        float3 a_normal [[attribute(2)]];
        float4 a_tangent [[attribute(3)]];
        uint4 a_indices [[attribute(4)]];
        float4 a_weights [[attribute(5)]];
    };
    
    #line 32 ""
    vertex main0_out main0(main0_in in [[stage_in]], constant Bones& _32 [[buffer(0)]], constant SkinTransform& _226 [[buffer(1)]])
    {
        main0_out out = {};
    #line 32 ""
        int4 _19 = int4(in.a_indices) * int4(3);
    #line 34 ""
        int _37 = _19.x;
        int _68 = _19.y;
        int _99 = _19.z;
        int _130 = _19.w;
        float4 _138 = (((_32.bones[_37] * in.a_weights.x) + (_32.bones[_68] * in.a_weights.y)) + (_32.bones[_99] * in.a_weights.z)) + (_32.bones[_130] * in.a_weights.w);
        float4 _148 = (((_32.bones[_37 + 1] * in.a_weights.x) + (_32.bones[_68 + 1] * in.a_weights.y)) + (_32.bones[_99 + 1] * in.a_weights.z)) + (_32.bones[_130 + 1] * in.a_weights.w);
        float4 _158 = (((_32.bones[_37 + 2] * in.a_weights.x) + (_32.bones[_68 + 2] * in.a_weights.y)) + (_32.bones[_99 + 2] * in.a_weights.z)) + (_32.bones[_130 + 2] * in.a_weights.w);
    #line 48 ""
        float4 _168 = float4(in.a_position, 1.0);
    #line 54 ""
        float4 _188 = float4(in.a_normal, 0.0);
    #line 66 ""
        out.gl_Position = _226.worldToClip * float4(dot(_138, _168), dot(_148, _168), dot(_158, _168), 1.0);
        out.v_normal = normalize(float3(dot(_138, _188), dot(_148, _188), dot(_158, _188)));
    #line 69 ""
        out.v_normal.x += ((in.a_uv.x + in.a_tangent.x) * 9.9999997473787516355514526367188e-06);
        return out;
    }
    
*/
static const char DebugSkinnedMesh_vs_source_metal_ios[1810] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x42,
    0x6f,0x6e,0x65,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x31,0x39,0x32,0x5d,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x6b,0x69,0x6e,0x54,0x72,0x61,
    0x6e,0x73,0x66,0x6f,0x72,0x6d,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x78,0x34,0x20,0x77,0x6f,0x72,0x6c,0x64,0x54,0x6f,0x43,0x6c,0x69,
    0x70,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,
    0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,
    0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x61,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x30,0x29,0x5d,0x5d,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x61,0x5f,0x75,
    0x76,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x31,0x29,
    0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x61,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,
    0x75,0x74,0x65,0x28,0x32,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x61,0x5f,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x20,0x5b,
    0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x33,0x29,0x5d,0x5d,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x34,0x20,0x61,0x5f,0x69,0x6e,0x64,
    0x69,0x63,0x65,0x73,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,
    0x28,0x34,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x20,0x5b,0x5b,0x61,0x74,
    0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x35,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x33,0x32,0x20,0x22,0x22,0x0a,0x76,0x65,
    0x72,0x74,0x65,0x78,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,
    0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x42,0x6f,0x6e,0x65,0x73,0x26,0x20,0x5f,
    0x33,0x32,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,
    0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x53,0x6b,0x69,0x6e,0x54,
    0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,0x26,0x20,0x5f,0x32,0x32,0x36,0x20,0x5b,
    0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x31,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,
    0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x33,0x32,
    0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x34,0x20,0x5f,0x31,0x39,
    0x20,0x3d,0x20,0x69,0x6e,0x74,0x34,0x28,0x69,0x6e,0x2e,0x61,0x5f,0x69,0x6e,0x64,
    0x69,0x63,0x65,0x73,0x29,0x20,0x2a,0x20,0x69,0x6e,0x74,0x34,0x28,0x33,0x29,0x3b,
    0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x33,0x34,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x6e,0x74,0x20,0x5f,0x33,0x37,0x20,0x3d,0x20,0x5f,0x31,0x39,0x2e,0x78,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x36,0x38,0x20,0x3d,0x20,
    0x5f,0x31,0x39,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,
    0x39,0x39,0x20,0x3d,0x20,0x5f,0x31,0x39,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x6e,0x74,0x20,0x5f,0x31,0x33,0x30,0x20,0x3d,0x20,0x5f,0x31,0x39,0x2e,0x77,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x31,0x33,
    0x38,0x20,0x3d,0x20,0x28,0x28,0x28,0x5f,0x33,0x32,0x2e,0x62,0x6f,0x6e,0x65,0x73,
    0x5b,0x5f,0x33,0x37,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x77,0x65,0x69,
    0x67,0x68,0x74,0x73,0x2e,0x78,0x29,0x20,0x2b,0x20,0x28,0x5f,0x33,0x32,0x2e,0x62,
    0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x36,0x38,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,
    0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x79,0x29,0x29,0x20,0x2b,0x20,0x28,
    0x5f,0x33,0x32,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x39,0x39,0x5d,0x20,0x2a,
    0x20,0x69,0x6e,0x2e,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x7a,0x29,
    0x29,0x20,0x2b,0x20,0x28,0x5f,0x33,0x32,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,
    0x31,0x33,0x30,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x77,0x65,0x69,0x67,
    0x68,0x74,0x73,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x20,0x5f,0x31,0x34,0x38,0x20,0x3d,0x20,0x28,0x28,0x28,0x5f,0x33,0x32,
    0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x33,0x37,0x20,0x2b,0x20,0x31,0x5d,0x20,
    0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x78,
    0x29,0x20,0x2b,0x20,0x28,0x5f,0x33,0x32,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,
    0x36,0x38,0x20,0x2b,0x20,0x31,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x77,
    0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x79,0x29,0x29,0x20,0x2b,0x20,0x28,0x5f,0x33,
    0x32,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x39,0x39,0x20,0x2b,0x20,0x31,0x5d,
    0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,
    0x7a,0x29,0x29,0x20,0x2b,0x20,0x28,0x5f,0x33,0x32,0x2e,0x62,0x6f,0x6e,0x65,0x73,
    0x5b,0x5f,0x31,0x33,0x30,0x20,0x2b,0x20,0x31,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,
    0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x31,0x35,0x38,0x20,0x3d,0x20,
    0x28,0x28,0x28,0x5f,0x33,0x32,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x33,0x37,
    0x20,0x2b,0x20,0x32,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x77,0x65,0x69,
    0x67,0x68,0x74,0x73,0x2e,0x78,0x29,0x20,0x2b,0x20,0x28,0x5f,0x33,0x32,0x2e,0x62,
    0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x36,0x38,0x20,0x2b,0x20,0x32,0x5d,0x20,0x2a,0x20,
    0x69,0x6e,0x2e,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x79,0x29,0x29,
    0x20,0x2b,0x20,0x28,0x5f,0x33,0x32,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x39,
    0x39,0x20,0x2b,0x20,0x32,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x77,0x65,
    0x69,0x67,0x68,0x74,0x73,0x2e,0x7a,0x29,0x29,0x20,0x2b,0x20,0x28,0x5f,0x33,0x32,
    0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x31,0x33,0x30,0x20,0x2b,0x20,0x32,0x5d,
    0x20,0x2a,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,
    0x77,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x34,0x38,0x20,0x22,0x22,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x31,0x36,0x38,0x20,
    0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x61,0x5f,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x23,0x6c,
    0x69,0x6e,0x65,0x20,0x35,0x34,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x5f,0x31,0x38,0x38,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x28,0x69,0x6e,0x2e,0x61,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,
    0x30,0x2e,0x30,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x36,0x36,0x20,0x22,
    0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x5f,0x32,0x32,0x36,0x2e,0x77,0x6f,0x72,
    0x6c,0x64,0x54,0x6f,0x43,0x6c,0x69,0x70,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x28,0x64,0x6f,0x74,0x28,0x5f,0x31,0x33,0x38,0x2c,0x20,0x5f,0x31,0x36,0x38,
    0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x34,0x38,0x2c,0x20,0x5f,0x31,0x36,
    0x38,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x35,0x38,0x2c,0x20,0x5f,0x31,
    0x36,0x38,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,
    0x75,0x74,0x2e,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x64,
    0x6f,0x74,0x28,0x5f,0x31,0x33,0x38,0x2c,0x20,0x5f,0x31,0x38,0x38,0x29,0x2c,0x20,
    0x64,0x6f,0x74,0x28,0x5f,0x31,0x34,0x38,0x2c,0x20,0x5f,0x31,0x38,0x38,0x29,0x2c,
    0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x35,0x38,0x2c,0x20,0x5f,0x31,0x38,0x38,0x29,
    0x29,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x36,0x39,0x20,0x22,0x22,0x0a,
    0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x2e,0x78,0x20,0x2b,0x3d,0x20,0x28,0x28,0x69,0x6e,0x2e,0x61,0x5f,0x75,0x76,0x2e,
    0x78,0x20,0x2b,0x20,0x69,0x6e,0x2e,0x61,0x5f,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,
    0x2e,0x78,0x29,0x20,0x2a,0x20,0x39,0x2e,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x34,
    0x37,0x33,0x37,0x38,0x37,0x35,0x31,0x36,0x33,0x35,0x35,0x35,0x31,0x34,0x35,0x32,
    0x36,0x33,0x36,0x37,0x31,0x38,0x38,0x65,0x2d,0x30,0x36,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct main0_out
    {
        float4 o_color [[color(0)]];
    };
    
    struct main0_in
    {
        float3 v_normal [[user(locn0)]];
    };
    
    #line 11 ""
    fragment main0_out main0(main0_in in [[stage_in]])
    {
        main0_out out = {};
    #line 11 ""
        float _19 = (dot(in.v_normal, float3(0.57735025882720947265625)) * 0.5) + 0.5;
        out.o_color = float4(1.0, _19, _19, 1.0);
        return out;
    }
    
*/
static const char DebugSkinnedMesh_fs_source_metal_ios[437] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x6f,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,
    0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,
    0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,
    0x20,0x31,0x31,0x20,0x22,0x22,0x0a,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,
    0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,
    0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,
    0x7b,0x7d,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x31,0x20,0x22,0x22,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x39,0x20,0x3d,0x20,
    0x28,0x64,0x6f,0x74,0x28,0x69,0x6e,0x2e,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x30,0x2e,0x35,0x37,0x37,0x33,0x35,
    0x30,0x32,0x35,0x38,0x38,0x32,0x37,0x32,0x30,0x39,0x34,0x37,0x32,0x36,0x35,0x36,
    0x32,0x35,0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x35,0x29,0x20,0x2b,0x20,0x30,0x2e,
    0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x6f,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x31,0x2e,0x30,0x2c,
    0x20,0x5f,0x31,0x39,0x2c,0x20,0x5f,0x31,0x39,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x00,
};
static const sg_shader_desc DebugSkinnedMesh_DebugSkinnedMesh_shader_desc_metal_ios = {
  0, /* _start_canary */
  { /*attrs*/{"a_position","TEXCOORD",0},{"a_uv","TEXCOORD",1},{"a_normal","TEXCOORD",2},{"a_tangent","TEXCOORD",3},{"a_indices","TEXCOORD",4},{"a_weights","TEXCOORD",5},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}, },
  { /* vs */
    DebugSkinnedMesh_vs_source_metal_ios, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main0", /* entry */
    { /* uniform blocks */
      {
        3072, /* size */
        { /* uniforms */{"Bones",SG_UNIFORMTYPE_FLOAT4,192},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        64, /* size */
        { /* uniforms */{"SkinTransform",SG_UNIFORMTYPE_FLOAT4,4},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  { /* fs */
    DebugSkinnedMesh_fs_source_metal_ios, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main0", /* entry */
    { /* uniform blocks */
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  "DebugSkinnedMesh_DebugSkinnedMesh_shader", /* label */
  0, /* _end_canary */
};
#endif /* SOKOL_METAL */
const sg_shader_desc* DebugSkinnedMesh_DebugSkinnedMesh_shader_desc(void) {
    #if defined(SOKOL_GLCORE33)
    if (sg_query_backend() == SG_BACKEND_GLCORE33) {
        return &DebugSkinnedMesh_DebugSkinnedMesh_shader_desc_glsl330;
    }
    #endif /* SOKOL_GLCORE33 */
    #if defined(SOKOL_GLES3)
    if (sg_query_backend() == SG_BACKEND_GLES3) {
        return &DebugSkinnedMesh_DebugSkinnedMesh_shader_desc_glsl300es;
    }
    #endif /* SOKOL_GLES3 */
    #if defined(SOKOL_D3D11)
    if (sg_query_backend() == SG_BACKEND_D3D11) {
        return &DebugSkinnedMesh_DebugSkinnedMesh_shader_desc_hlsl5;
    }
    #endif /* SOKOL_D3D11 */
    #if defined(SOKOL_METAL)
    if (sg_query_backend() == SG_BACKEND_METAL_MACOS) {
        return &DebugSkinnedMesh_DebugSkinnedMesh_shader_desc_metal_macos;
    }
    #endif /* SOKOL_METAL */
    #if defined(SOKOL_METAL)
    if (sg_query_backend() == SG_BACKEND_METAL_IOS) {
        return &DebugSkinnedMesh_DebugSkinnedMesh_shader_desc_metal_ios;
    }
    #endif /* SOKOL_METAL */
    return 0; /* can't happen */
}
#endif /* SOKOL_SHDC_IMPL */
