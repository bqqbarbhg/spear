#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Overview:

        Shader program 'MapTile':
            Get shader desc: MapTile_MapTile_shader_desc()
            Vertex shader: vs
                Attribute slots:
                    ATTR_MapTile_vs_position = 0
                    ATTR_MapTile_vs_normal = 1
                    ATTR_MapTile_vs_uv = 2
                Uniform block 'Vertex':
                    C struct: MapTile_Vertex_t
                    Bind slot: SLOT_MapTile_Vertex = 0
            Fragment shader: fs
                Uniform block 'Pixel':
                    C struct: MapTile_Pixel_t
                    Bind slot: SLOT_MapTile_Pixel = 0
                Image 'lightGrid':
                    Type: SG_IMAGETYPE_2D
                    Bind slot: SLOT_MapTile_lightGrid = 0


    Shader descriptor structs:

        sg_shader MapTile = sg_make_shader(MapTile_MapTile_shader_desc());

    Vertex attribute locations for vertex shader 'vs':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_MapTile_vs_position] = { ... },
                    [ATTR_MapTile_vs_normal] = { ... },
                    [ATTR_MapTile_vs_uv] = { ... },
                },
            },
            ...});

    Image bind slots, use as index in sg_bindings.vs_images[] or .fs_images[]

        SLOT_MapTile_lightGrid = 0;

    Bind slot and C-struct for uniform block 'Vertex':

        MapTile_Vertex_t Vertex = {
            .worldToClip = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_MapTile_Vertex, &Vertex, sizeof(Vertex));

    Bind slot and C-struct for uniform block 'Pixel':

        MapTile_Pixel_t Pixel = {
            .lightGridOrigin = ...;
            .lightGridRcpScale = ...;
            .lightGridYSlices = ...;
            .lightGridRcpYSlices = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_MapTile_Pixel, &Pixel, sizeof(Pixel));

*/
#include <stdint.h>
#include <stdbool.h>
#if !defined(SOKOL_GFX_INCLUDED)
  #error "Please include sokol_gfx.h before MapTile.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
  #if defined(_MSC_VER)
    #define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
  #else
    #define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
  #endif
#endif
const sg_shader_desc* MapTile_MapTile_shader_desc(void);
#define ATTR_MapTile_vs_position (0)
#define ATTR_MapTile_vs_normal (1)
#define ATTR_MapTile_vs_uv (2)
#define SLOT_MapTile_lightGrid (0)
#define SLOT_MapTile_Vertex (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct MapTile_Vertex_t {
    float worldToClip[16];
} MapTile_Vertex_t;
#pragma pack(pop)
#define SLOT_MapTile_Pixel (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct MapTile_Pixel_t {
    sf::Vec3 lightGridOrigin;
    uint8_t _pad_12[4];
    sf::Vec3 lightGridRcpScale;
    float lightGridYSlices;
    float lightGridRcpYSlices;
    uint8_t _pad_36[12];
} MapTile_Pixel_t;
#pragma pack(pop)
#if defined(SOKOL_SHDC_IMPL)
#if defined(SOKOL_GLCORE33)
/*
    #version 330
    
    uniform vec4 Vertex[4];
    layout(location = 0) in vec3 position;
    out vec3 v_position;
    out vec3 v_normal;
    layout(location = 1) in vec3 normal;
    out vec2 v_uv;
    layout(location = 2) in vec2 uv;
    
    void main()
    {
        gl_Position = mat4(Vertex[0], Vertex[1], Vertex[2], Vertex[3]) * vec4(position, 1.0);
        v_position = position;
        v_normal = normal;
        v_uv = uv;
    }
    
*/
static const char MapTile_vs_source_glsl330[376] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x56,0x65,0x72,0x74,0x65,
    0x78,0x5b,0x34,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6f,0x75,0x74,
    0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,
    0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,
    0x63,0x32,0x20,0x76,0x5f,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,
    0x56,0x65,0x72,0x74,0x65,0x78,0x5b,0x30,0x5d,0x2c,0x20,0x56,0x65,0x72,0x74,0x65,
    0x78,0x5b,0x31,0x5d,0x2c,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x5b,0x32,0x5d,0x2c,
    0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,
    0x63,0x34,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x75,0x76,0x20,0x3d,0x20,
    0x75,0x76,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 330
    
    uniform vec4 Pixel[3];
    uniform sampler2D lightGrid;
    
    in vec3 v_position;
    in vec3 v_normal;
    layout(location = 0) out vec4 frag_color;
    in vec2 v_uv;
    
    vec3 sampleIrradianceImp(float x0, float x1, float y, float dy)
    {
        return mix(texture(lightGrid, vec2(x0, y)).xyz, texture(lightGrid, vec2(x1, y)).xyz, vec3(dy));
    }
    
    vec3 sampleIrradiance(vec3 p, vec3 n)
    {
        vec3 _80 = clamp((p - Pixel[0].xyz) * Pixel[1].xyz, Pixel[1].xyz, vec3(1.0) - Pixel[1].xyz);
        float _90 = _80.y * Pixel[1].w;
        float _97 = floor(clamp(_90 - 9.9999997473787516355514526367188e-05, 0.0, 1.0));
        float _101 = _90 - _97;
        float _111 = (_80.x + _97) * Pixel[2].x;
        float _116 = _111 + Pixel[2].x;
        float _122 = _80.z * 0.16666667163372039794921875;
        float param = _111;
        float param_1 = _116;
        float param_2 = _122 + ((n.x > 0.0) ? 0.0 : 0.16666667163372039794921875);
        float param_3 = _101;
        vec3 result = sampleIrradianceImp(param, param_1, param_2, param_3) * (n.x * n.x);
        float param_4 = _111;
        float param_5 = _116;
        float param_6 = _122 + ((n.y > 0.0) ? 0.3333333432674407958984375 : 0.5);
        float param_7 = _101;
        result += (sampleIrradianceImp(param_4, param_5, param_6, param_7) * (n.y * n.y));
        float param_8 = _111;
        float param_9 = _116;
        float param_10 = _122 + ((n.z > 0.0) ? 0.666666686534881591796875 : 0.833333313465118408203125);
        float param_11 = _101;
        vec3 _191 = result;
        vec3 _192 = _191 + (sampleIrradianceImp(param_8, param_9, param_10, param_11) * (n.z * n.z));
        result = _192;
        return _192;
    }
    
    void main()
    {
        vec3 param = v_position;
        vec3 param_1 = normalize(v_normal);
        frag_color = vec4(sqrt(sampleIrradiance(param, param_1)), 1.0);
    }
    
*/
static const char MapTile_fs_source_glsl330[1734] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x50,0x69,0x78,0x65,0x6c,
    0x5b,0x33,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x6c,0x69,0x67,0x68,0x74,0x47,0x72,0x69,0x64,
    0x3b,0x0a,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x76,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,
    0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x5f,0x75,0x76,0x3b,
    0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x49,0x72,0x72,
    0x61,0x64,0x69,0x61,0x6e,0x63,0x65,0x49,0x6d,0x70,0x28,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x78,0x30,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x78,0x31,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x79,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x79,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,
    0x69,0x78,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x6c,0x69,0x67,0x68,0x74,
    0x47,0x72,0x69,0x64,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x78,0x30,0x2c,0x20,0x79,
    0x29,0x29,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,
    0x6c,0x69,0x67,0x68,0x74,0x47,0x72,0x69,0x64,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,
    0x78,0x31,0x2c,0x20,0x79,0x29,0x29,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x76,0x65,0x63,
    0x33,0x28,0x64,0x79,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,
    0x73,0x61,0x6d,0x70,0x6c,0x65,0x49,0x72,0x72,0x61,0x64,0x69,0x61,0x6e,0x63,0x65,
    0x28,0x76,0x65,0x63,0x33,0x20,0x70,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x38,0x30,0x20,
    0x3d,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x28,0x70,0x20,0x2d,0x20,0x50,0x69,0x78,
    0x65,0x6c,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x50,0x69,0x78,
    0x65,0x6c,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x50,0x69,0x78,0x65,0x6c,
    0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,
    0x30,0x29,0x20,0x2d,0x20,0x50,0x69,0x78,0x65,0x6c,0x5b,0x31,0x5d,0x2e,0x78,0x79,
    0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x39,
    0x30,0x20,0x3d,0x20,0x5f,0x38,0x30,0x2e,0x79,0x20,0x2a,0x20,0x50,0x69,0x78,0x65,
    0x6c,0x5b,0x31,0x5d,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x39,0x37,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x6f,0x72,0x28,0x63,0x6c,
    0x61,0x6d,0x70,0x28,0x5f,0x39,0x30,0x20,0x2d,0x20,0x39,0x2e,0x39,0x39,0x39,0x39,
    0x39,0x39,0x37,0x34,0x37,0x33,0x37,0x38,0x37,0x35,0x31,0x36,0x33,0x35,0x35,0x35,
    0x31,0x34,0x35,0x32,0x36,0x33,0x36,0x37,0x31,0x38,0x38,0x65,0x2d,0x30,0x35,0x2c,
    0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x30,0x31,0x20,0x3d,0x20,0x5f,0x39,
    0x30,0x20,0x2d,0x20,0x5f,0x39,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x31,0x31,0x31,0x20,0x3d,0x20,0x28,0x5f,0x38,0x30,0x2e,0x78,
    0x20,0x2b,0x20,0x5f,0x39,0x37,0x29,0x20,0x2a,0x20,0x50,0x69,0x78,0x65,0x6c,0x5b,
    0x32,0x5d,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x31,0x31,0x36,0x20,0x3d,0x20,0x5f,0x31,0x31,0x31,0x20,0x2b,0x20,0x50,0x69,
    0x78,0x65,0x6c,0x5b,0x32,0x5d,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x31,0x32,0x32,0x20,0x3d,0x20,0x5f,0x38,0x30,0x2e,0x7a,
    0x20,0x2a,0x20,0x30,0x2e,0x31,0x36,0x36,0x36,0x36,0x36,0x36,0x37,0x31,0x36,0x33,
    0x33,0x37,0x32,0x30,0x33,0x39,0x37,0x39,0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x20,0x3d,0x20,0x5f,0x31,0x31,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x31,0x31,
    0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x5f,0x31,0x32,0x32,0x20,0x2b,0x20,0x28,0x28,
    0x6e,0x2e,0x78,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x20,0x3f,0x20,0x30,0x2e,0x30,
    0x20,0x3a,0x20,0x30,0x2e,0x31,0x36,0x36,0x36,0x36,0x36,0x36,0x37,0x31,0x36,0x33,
    0x33,0x37,0x32,0x30,0x33,0x39,0x37,0x39,0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x33,0x20,0x3d,0x20,0x5f,0x31,0x30,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,0x20,0x73,0x61,
    0x6d,0x70,0x6c,0x65,0x49,0x72,0x72,0x61,0x64,0x69,0x61,0x6e,0x63,0x65,0x49,0x6d,
    0x70,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x33,0x29,0x20,0x2a,0x20,0x28,0x6e,0x2e,0x78,0x20,0x2a,0x20,0x6e,0x2e,0x78,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x5f,0x31,0x31,0x31,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,
    0x20,0x5f,0x31,0x31,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x20,0x3d,0x20,0x5f,0x31,0x32,0x32,0x20,
    0x2b,0x20,0x28,0x28,0x6e,0x2e,0x79,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x20,0x3f,
    0x20,0x30,0x2e,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x34,0x33,0x32,0x36,0x37,0x34,
    0x34,0x30,0x37,0x39,0x35,0x38,0x39,0x38,0x34,0x33,0x37,0x35,0x20,0x3a,0x20,0x30,
    0x2e,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,0x5f,0x31,0x30,0x31,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x2b,0x3d,0x20,0x28,0x73,0x61,
    0x6d,0x70,0x6c,0x65,0x49,0x72,0x72,0x61,0x64,0x69,0x61,0x6e,0x63,0x65,0x49,0x6d,
    0x70,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x35,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x2c,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x37,0x29,0x20,0x2a,0x20,0x28,0x6e,0x2e,0x79,0x20,0x2a,0x20,0x6e,
    0x2e,0x79,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x20,0x3d,0x20,0x5f,0x31,0x31,0x31,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x39,0x20,0x3d,0x20,0x5f,0x31,0x31,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x20,0x3d,0x20,0x5f,
    0x31,0x32,0x32,0x20,0x2b,0x20,0x28,0x28,0x6e,0x2e,0x7a,0x20,0x3e,0x20,0x30,0x2e,
    0x30,0x29,0x20,0x3f,0x20,0x30,0x2e,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x38,0x36,
    0x35,0x33,0x34,0x38,0x38,0x31,0x35,0x39,0x31,0x37,0x39,0x36,0x38,0x37,0x35,0x20,
    0x3a,0x20,0x30,0x2e,0x38,0x33,0x33,0x33,0x33,0x33,0x33,0x31,0x33,0x34,0x36,0x35,
    0x31,0x31,0x38,0x34,0x30,0x38,0x32,0x30,0x33,0x31,0x32,0x35,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x31,0x20,0x3d,0x20,0x5f,0x31,0x30,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x5f,0x31,0x39,0x31,0x20,0x3d,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x39,0x32,0x20,
    0x3d,0x20,0x5f,0x31,0x39,0x31,0x20,0x2b,0x20,0x28,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x49,0x72,0x72,0x61,0x64,0x69,0x61,0x6e,0x63,0x65,0x49,0x6d,0x70,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x38,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x2c,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x31,0x31,0x29,0x20,0x2a,0x20,0x28,0x6e,0x2e,0x7a,0x20,0x2a,0x20,0x6e,0x2e,0x7a,
    0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,
    0x20,0x5f,0x31,0x39,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x5f,0x31,0x39,0x32,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x76,0x5f,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,
    0x7a,0x65,0x28,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x34,0x28,0x73,0x71,0x72,0x74,0x28,0x73,0x61,0x6d,0x70,0x6c,0x65,0x49,
    0x72,0x72,0x61,0x64,0x69,0x61,0x6e,0x63,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
static const sg_shader_desc MapTile_MapTile_shader_desc_glsl330 = {
  0, /* _start_canary */
  { /*attrs*/{"position","TEXCOORD",0},{"normal","TEXCOORD",1},{"uv","TEXCOORD",2},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}, },
  { /* vs */
    MapTile_vs_source_glsl330, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main", /* entry */
    { /* uniform blocks */
      {
        64, /* size */
        { /* uniforms */{"Vertex",SG_UNIFORMTYPE_FLOAT4,4},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  { /* fs */
    MapTile_fs_source_glsl330, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main", /* entry */
    { /* uniform blocks */
      {
        48, /* size */
        { /* uniforms */{"Pixel",SG_UNIFORMTYPE_FLOAT4,3},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {"lightGrid",SG_IMAGETYPE_2D},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  "MapTile_MapTile_shader", /* label */
  0, /* _end_canary */
};
#endif /* SOKOL_GLCORE33 */
#if defined(SOKOL_GLES2)
/*
    #version 100
    
    uniform vec4 Vertex[4];
    attribute vec3 position;
    varying vec3 v_position;
    varying vec3 v_normal;
    attribute vec3 normal;
    varying vec2 v_uv;
    attribute vec2 uv;
    
    void main()
    {
        gl_Position = mat4(Vertex[0], Vertex[1], Vertex[2], Vertex[3]) * vec4(position, 1.0);
        v_position = position;
        v_normal = normal;
        v_uv = uv;
    }
    
*/
static const char MapTile_vs_source_glsl100[346] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x31,0x30,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x56,0x65,0x72,0x74,0x65,
    0x78,0x5b,0x34,0x5d,0x3b,0x0a,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x20,
    0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x76,
    0x61,0x72,0x79,0x69,0x6e,0x67,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x76,0x61,0x72,0x79,0x69,0x6e,0x67,0x20,
    0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x61,
    0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x76,0x61,0x72,0x79,0x69,0x6e,0x67,0x20,0x76,0x65,
    0x63,0x32,0x20,0x76,0x5f,0x75,0x76,0x3b,0x0a,0x61,0x74,0x74,0x72,0x69,0x62,0x75,
    0x74,0x65,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x3b,0x0a,0x0a,0x76,0x6f,0x69,
    0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,
    0x34,0x28,0x56,0x65,0x72,0x74,0x65,0x78,0x5b,0x30,0x5d,0x2c,0x20,0x56,0x65,0x72,
    0x74,0x65,0x78,0x5b,0x31,0x5d,0x2c,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x5b,0x32,
    0x5d,0x2c,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,
    0x76,0x65,0x63,0x34,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,
    0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x75,0x76,0x20,
    0x3d,0x20,0x75,0x76,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 100
    precision mediump float;
    precision highp int;
    
    uniform highp vec4 Pixel[3];
    uniform highp sampler2D lightGrid;
    
    varying highp vec3 v_position;
    varying highp vec3 v_normal;
    varying highp vec2 v_uv;
    
    highp vec3 sampleIrradianceImp(highp float x0, highp float x1, highp float y, highp float dy)
    {
        return mix(texture2D(lightGrid, vec2(x0, y)).xyz, texture2D(lightGrid, vec2(x1, y)).xyz, vec3(dy));
    }
    
    highp vec3 sampleIrradiance(highp vec3 p, highp vec3 n)
    {
        highp vec3 _80 = clamp((p - Pixel[0].xyz) * Pixel[1].xyz, Pixel[1].xyz, vec3(1.0) - Pixel[1].xyz);
        highp float _90 = _80.y * Pixel[1].w;
        highp float _97 = floor(clamp(_90 - 9.9999997473787516355514526367188e-05, 0.0, 1.0));
        highp float _101 = _90 - _97;
        highp float _111 = (_80.x + _97) * Pixel[2].x;
        highp float _116 = _111 + Pixel[2].x;
        highp float _122 = _80.z * 0.16666667163372039794921875;
        highp float param = _111;
        highp float param_1 = _116;
        highp float param_2 = _122 + ((n.x > 0.0) ? 0.0 : 0.16666667163372039794921875);
        highp float param_3 = _101;
        highp vec3 result = sampleIrradianceImp(param, param_1, param_2, param_3) * (n.x * n.x);
        highp float param_4 = _111;
        highp float param_5 = _116;
        highp float param_6 = _122 + ((n.y > 0.0) ? 0.3333333432674407958984375 : 0.5);
        highp float param_7 = _101;
        result += (sampleIrradianceImp(param_4, param_5, param_6, param_7) * (n.y * n.y));
        highp float param_8 = _111;
        highp float param_9 = _116;
        highp float param_10 = _122 + ((n.z > 0.0) ? 0.666666686534881591796875 : 0.833333313465118408203125);
        highp float param_11 = _101;
        highp vec3 _191 = result;
        highp vec3 _192 = _191 + (sampleIrradianceImp(param_8, param_9, param_10, param_11) * (n.z * n.z));
        result = _192;
        return _192;
    }
    
    void main()
    {
        highp vec3 param = v_position;
        highp vec3 param_1 = normalize(v_normal);
        gl_FragData[0] = vec4(sqrt(sampleIrradiance(param, param_1)), 1.0);
    }
    
*/
static const char MapTile_fs_source_glsl100[1983] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x31,0x30,0x30,0x0a,0x70,0x72,0x65,
    0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,
    0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x50,
    0x69,0x78,0x65,0x6c,0x5b,0x33,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x47,0x72,0x69,0x64,0x3b,0x0a,0x0a,0x76,0x61,0x72,
    0x79,0x69,0x6e,0x67,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x76,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x76,0x61,0x72,0x79,
    0x69,0x6e,0x67,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x76,0x61,0x72,0x79,0x69,0x6e,0x67,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x5f,0x75,0x76,
    0x3b,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x73,0x61,
    0x6d,0x70,0x6c,0x65,0x49,0x72,0x72,0x61,0x64,0x69,0x61,0x6e,0x63,0x65,0x49,0x6d,
    0x70,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x78,0x30,
    0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x78,0x31,
    0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x79,0x2c,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x79,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x69,
    0x78,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x44,0x28,0x6c,0x69,0x67,0x68,
    0x74,0x47,0x72,0x69,0x64,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x78,0x30,0x2c,0x20,
    0x79,0x29,0x29,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x32,0x44,0x28,0x6c,0x69,0x67,0x68,0x74,0x47,0x72,0x69,0x64,0x2c,0x20,0x76,0x65,
    0x63,0x32,0x28,0x78,0x31,0x2c,0x20,0x79,0x29,0x29,0x2e,0x78,0x79,0x7a,0x2c,0x20,
    0x76,0x65,0x63,0x33,0x28,0x64,0x79,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x49,
    0x72,0x72,0x61,0x64,0x69,0x61,0x6e,0x63,0x65,0x28,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x70,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x6e,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x38,0x30,0x20,0x3d,0x20,0x63,0x6c,0x61,
    0x6d,0x70,0x28,0x28,0x70,0x20,0x2d,0x20,0x50,0x69,0x78,0x65,0x6c,0x5b,0x30,0x5d,
    0x2e,0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x50,0x69,0x78,0x65,0x6c,0x5b,0x31,0x5d,
    0x2e,0x78,0x79,0x7a,0x2c,0x20,0x50,0x69,0x78,0x65,0x6c,0x5b,0x31,0x5d,0x2e,0x78,
    0x79,0x7a,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x29,0x20,0x2d,0x20,
    0x50,0x69,0x78,0x65,0x6c,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x39,0x30,0x20,0x3d,0x20,0x5f,0x38,0x30,0x2e,0x79,0x20,0x2a,0x20,0x50,0x69,0x78,
    0x65,0x6c,0x5b,0x31,0x5d,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x39,0x37,0x20,0x3d,0x20,0x66,
    0x6c,0x6f,0x6f,0x72,0x28,0x63,0x6c,0x61,0x6d,0x70,0x28,0x5f,0x39,0x30,0x20,0x2d,
    0x20,0x39,0x2e,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x34,0x37,0x33,0x37,0x38,0x37,
    0x35,0x31,0x36,0x33,0x35,0x35,0x35,0x31,0x34,0x35,0x32,0x36,0x33,0x36,0x37,0x31,
    0x38,0x38,0x65,0x2d,0x30,0x35,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,
    0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x31,0x30,0x31,0x20,0x3d,0x20,0x5f,0x39,0x30,0x20,0x2d,
    0x20,0x5f,0x39,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,0x31,0x20,0x3d,0x20,0x28,0x5f,0x38,
    0x30,0x2e,0x78,0x20,0x2b,0x20,0x5f,0x39,0x37,0x29,0x20,0x2a,0x20,0x50,0x69,0x78,
    0x65,0x6c,0x5b,0x32,0x5d,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,0x36,0x20,0x3d,0x20,
    0x5f,0x31,0x31,0x31,0x20,0x2b,0x20,0x50,0x69,0x78,0x65,0x6c,0x5b,0x32,0x5d,0x2e,
    0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x31,0x32,0x32,0x20,0x3d,0x20,0x5f,0x38,0x30,0x2e,0x7a,0x20,
    0x2a,0x20,0x30,0x2e,0x31,0x36,0x36,0x36,0x36,0x36,0x36,0x37,0x31,0x36,0x33,0x33,
    0x37,0x32,0x30,0x33,0x39,0x37,0x39,0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x5f,0x31,0x31,0x31,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x31,0x31,0x36,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x5f,0x31,0x32,0x32,0x20,0x2b,0x20,0x28,
    0x28,0x6e,0x2e,0x78,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x20,0x3f,0x20,0x30,0x2e,
    0x30,0x20,0x3a,0x20,0x30,0x2e,0x31,0x36,0x36,0x36,0x36,0x36,0x36,0x37,0x31,0x36,
    0x33,0x33,0x37,0x32,0x30,0x33,0x39,0x37,0x39,0x34,0x39,0x32,0x31,0x38,0x37,0x35,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x5f,0x31,0x30,
    0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,0x20,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x49,0x72,0x72,0x61,0x64,0x69,0x61,0x6e,0x63,0x65,0x49,0x6d,0x70,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,
    0x20,0x2a,0x20,0x28,0x6e,0x2e,0x78,0x20,0x2a,0x20,0x6e,0x2e,0x78,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x5f,0x31,0x31,0x31,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x5f,0x31,0x31,0x36,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x20,0x3d,0x20,0x5f,0x31,0x32,0x32,0x20,0x2b,
    0x20,0x28,0x28,0x6e,0x2e,0x79,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x20,0x3f,0x20,
    0x30,0x2e,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x34,0x33,0x32,0x36,0x37,0x34,0x34,
    0x30,0x37,0x39,0x35,0x38,0x39,0x38,0x34,0x33,0x37,0x35,0x20,0x3a,0x20,0x30,0x2e,
    0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,0x5f,0x31,
    0x30,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x2b,
    0x3d,0x20,0x28,0x73,0x61,0x6d,0x70,0x6c,0x65,0x49,0x72,0x72,0x61,0x64,0x69,0x61,
    0x6e,0x63,0x65,0x49,0x6d,0x70,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x2c,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,
    0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x29,0x20,0x2a,0x20,0x28,0x6e,0x2e,
    0x79,0x20,0x2a,0x20,0x6e,0x2e,0x79,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x38,0x20,0x3d,0x20,0x5f,0x31,0x31,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x39,0x20,0x3d,0x20,0x5f,0x31,0x31,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x30,0x20,0x3d,0x20,0x5f,0x31,0x32,0x32,0x20,0x2b,0x20,0x28,0x28,0x6e,
    0x2e,0x7a,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x20,0x3f,0x20,0x30,0x2e,0x36,0x36,
    0x36,0x36,0x36,0x36,0x36,0x38,0x36,0x35,0x33,0x34,0x38,0x38,0x31,0x35,0x39,0x31,
    0x37,0x39,0x36,0x38,0x37,0x35,0x20,0x3a,0x20,0x30,0x2e,0x38,0x33,0x33,0x33,0x33,
    0x33,0x33,0x31,0x33,0x34,0x36,0x35,0x31,0x31,0x38,0x34,0x30,0x38,0x32,0x30,0x33,
    0x31,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x20,0x3d,
    0x20,0x5f,0x31,0x30,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x39,0x31,0x20,0x3d,0x20,0x72,0x65,0x73,
    0x75,0x6c,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x5f,0x31,0x39,0x32,0x20,0x3d,0x20,0x5f,0x31,0x39,0x31,0x20,
    0x2b,0x20,0x28,0x73,0x61,0x6d,0x70,0x6c,0x65,0x49,0x72,0x72,0x61,0x64,0x69,0x61,
    0x6e,0x63,0x65,0x49,0x6d,0x70,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x2c,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x30,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x29,0x20,0x2a,0x20,0x28,
    0x6e,0x2e,0x7a,0x20,0x2a,0x20,0x6e,0x2e,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,0x20,0x5f,0x31,0x39,0x32,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x5f,0x31,0x39,0x32,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x76,0x5f,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x44,0x61,
    0x74,0x61,0x5b,0x30,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x73,0x71,0x72,
    0x74,0x28,0x73,0x61,0x6d,0x70,0x6c,0x65,0x49,0x72,0x72,0x61,0x64,0x69,0x61,0x6e,
    0x63,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x31,0x29,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
static const sg_shader_desc MapTile_MapTile_shader_desc_glsl100 = {
  0, /* _start_canary */
  { /*attrs*/{"position","TEXCOORD",0},{"normal","TEXCOORD",1},{"uv","TEXCOORD",2},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}, },
  { /* vs */
    MapTile_vs_source_glsl100, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main", /* entry */
    { /* uniform blocks */
      {
        64, /* size */
        { /* uniforms */{"Vertex",SG_UNIFORMTYPE_FLOAT4,4},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  { /* fs */
    MapTile_fs_source_glsl100, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main", /* entry */
    { /* uniform blocks */
      {
        48, /* size */
        { /* uniforms */{"Pixel",SG_UNIFORMTYPE_FLOAT4,3},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {"lightGrid",SG_IMAGETYPE_2D},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  "MapTile_MapTile_shader", /* label */
  0, /* _end_canary */
};
#endif /* SOKOL_GLES2 */
#if defined(SOKOL_GLES3)
/*
    #version 300 es
    
    uniform vec4 Vertex[4];
    layout(location = 0) in vec3 position;
    out vec3 v_position;
    out vec3 v_normal;
    layout(location = 1) in vec3 normal;
    out vec2 v_uv;
    layout(location = 2) in vec2 uv;
    
    void main()
    {
        gl_Position = mat4(Vertex[0], Vertex[1], Vertex[2], Vertex[3]) * vec4(position, 1.0);
        v_position = position;
        v_normal = normal;
        v_uv = uv;
    }
    
*/
static const char MapTile_vs_source_glsl300es[379] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x56,0x65,
    0x72,0x74,0x65,0x78,0x5b,0x34,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,
    0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6f,0x75,0x74,
    0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x5f,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,
    0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x3b,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,
    0x74,0x34,0x28,0x56,0x65,0x72,0x74,0x65,0x78,0x5b,0x30,0x5d,0x2c,0x20,0x56,0x65,
    0x72,0x74,0x65,0x78,0x5b,0x31,0x5d,0x2c,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x5b,
    0x32,0x5d,0x2c,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x5b,0x33,0x5d,0x29,0x20,0x2a,
    0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,
    0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x75,0x76,
    0x20,0x3d,0x20,0x75,0x76,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    uniform highp vec4 Pixel[3];
    uniform highp sampler2D lightGrid;
    
    in highp vec3 v_position;
    in highp vec3 v_normal;
    layout(location = 0) out highp vec4 frag_color;
    in highp vec2 v_uv;
    
    highp vec3 sampleIrradianceImp(highp float x0, highp float x1, highp float y, highp float dy)
    {
        return mix(texture(lightGrid, vec2(x0, y)).xyz, texture(lightGrid, vec2(x1, y)).xyz, vec3(dy));
    }
    
    highp vec3 sampleIrradiance(highp vec3 p, highp vec3 n)
    {
        highp vec3 _80 = clamp((p - Pixel[0].xyz) * Pixel[1].xyz, Pixel[1].xyz, vec3(1.0) - Pixel[1].xyz);
        highp float _90 = _80.y * Pixel[1].w;
        highp float _97 = floor(clamp(_90 - 9.9999997473787516355514526367188e-05, 0.0, 1.0));
        highp float _101 = _90 - _97;
        highp float _111 = (_80.x + _97) * Pixel[2].x;
        highp float _116 = _111 + Pixel[2].x;
        highp float _122 = _80.z * 0.16666667163372039794921875;
        highp float param = _111;
        highp float param_1 = _116;
        highp float param_2 = _122 + ((n.x > 0.0) ? 0.0 : 0.16666667163372039794921875);
        highp float param_3 = _101;
        highp vec3 result = sampleIrradianceImp(param, param_1, param_2, param_3) * (n.x * n.x);
        highp float param_4 = _111;
        highp float param_5 = _116;
        highp float param_6 = _122 + ((n.y > 0.0) ? 0.3333333432674407958984375 : 0.5);
        highp float param_7 = _101;
        result += (sampleIrradianceImp(param_4, param_5, param_6, param_7) * (n.y * n.y));
        highp float param_8 = _111;
        highp float param_9 = _116;
        highp float param_10 = _122 + ((n.z > 0.0) ? 0.666666686534881591796875 : 0.833333313465118408203125);
        highp float param_11 = _101;
        highp vec3 _191 = result;
        highp vec3 _192 = _191 + (sampleIrradianceImp(param_8, param_9, param_10, param_11) * (n.z * n.z));
        result = _192;
        return _192;
    }
    
    void main()
    {
        highp vec3 param = v_position;
        highp vec3 param_1 = normalize(v_normal);
        frag_color = vec4(sqrt(sampleIrradiance(param, param_1)), 1.0);
    }
    
*/
static const char MapTile_fs_source_glsl300es[2011] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x50,0x69,0x78,0x65,0x6c,0x5b,0x33,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,
    0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x32,0x44,0x20,0x6c,0x69,0x67,0x68,0x74,0x47,0x72,0x69,0x64,0x3b,0x0a,0x0a,
    0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,
    0x76,0x5f,0x75,0x76,0x3b,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x49,0x72,0x72,0x61,0x64,0x69,0x61,0x6e,
    0x63,0x65,0x49,0x6d,0x70,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x78,0x30,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x78,0x31,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x79,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x64,0x79,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x6d,0x69,0x78,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x6c,0x69,
    0x67,0x68,0x74,0x47,0x72,0x69,0x64,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x78,0x30,
    0x2c,0x20,0x79,0x29,0x29,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x28,0x6c,0x69,0x67,0x68,0x74,0x47,0x72,0x69,0x64,0x2c,0x20,0x76,0x65,
    0x63,0x32,0x28,0x78,0x31,0x2c,0x20,0x79,0x29,0x29,0x2e,0x78,0x79,0x7a,0x2c,0x20,
    0x76,0x65,0x63,0x33,0x28,0x64,0x79,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x49,
    0x72,0x72,0x61,0x64,0x69,0x61,0x6e,0x63,0x65,0x28,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x70,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x6e,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x38,0x30,0x20,0x3d,0x20,0x63,0x6c,0x61,
    0x6d,0x70,0x28,0x28,0x70,0x20,0x2d,0x20,0x50,0x69,0x78,0x65,0x6c,0x5b,0x30,0x5d,
    0x2e,0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x50,0x69,0x78,0x65,0x6c,0x5b,0x31,0x5d,
    0x2e,0x78,0x79,0x7a,0x2c,0x20,0x50,0x69,0x78,0x65,0x6c,0x5b,0x31,0x5d,0x2e,0x78,
    0x79,0x7a,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x29,0x20,0x2d,0x20,
    0x50,0x69,0x78,0x65,0x6c,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x39,0x30,0x20,0x3d,0x20,0x5f,0x38,0x30,0x2e,0x79,0x20,0x2a,0x20,0x50,0x69,0x78,
    0x65,0x6c,0x5b,0x31,0x5d,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x39,0x37,0x20,0x3d,0x20,0x66,
    0x6c,0x6f,0x6f,0x72,0x28,0x63,0x6c,0x61,0x6d,0x70,0x28,0x5f,0x39,0x30,0x20,0x2d,
    0x20,0x39,0x2e,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x34,0x37,0x33,0x37,0x38,0x37,
    0x35,0x31,0x36,0x33,0x35,0x35,0x35,0x31,0x34,0x35,0x32,0x36,0x33,0x36,0x37,0x31,
    0x38,0x38,0x65,0x2d,0x30,0x35,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,
    0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x31,0x30,0x31,0x20,0x3d,0x20,0x5f,0x39,0x30,0x20,0x2d,
    0x20,0x5f,0x39,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,0x31,0x20,0x3d,0x20,0x28,0x5f,0x38,
    0x30,0x2e,0x78,0x20,0x2b,0x20,0x5f,0x39,0x37,0x29,0x20,0x2a,0x20,0x50,0x69,0x78,
    0x65,0x6c,0x5b,0x32,0x5d,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,0x36,0x20,0x3d,0x20,
    0x5f,0x31,0x31,0x31,0x20,0x2b,0x20,0x50,0x69,0x78,0x65,0x6c,0x5b,0x32,0x5d,0x2e,
    0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x31,0x32,0x32,0x20,0x3d,0x20,0x5f,0x38,0x30,0x2e,0x7a,0x20,
    0x2a,0x20,0x30,0x2e,0x31,0x36,0x36,0x36,0x36,0x36,0x36,0x37,0x31,0x36,0x33,0x33,
    0x37,0x32,0x30,0x33,0x39,0x37,0x39,0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x5f,0x31,0x31,0x31,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x31,0x31,0x36,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x5f,0x31,0x32,0x32,0x20,0x2b,0x20,0x28,
    0x28,0x6e,0x2e,0x78,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x20,0x3f,0x20,0x30,0x2e,
    0x30,0x20,0x3a,0x20,0x30,0x2e,0x31,0x36,0x36,0x36,0x36,0x36,0x36,0x37,0x31,0x36,
    0x33,0x33,0x37,0x32,0x30,0x33,0x39,0x37,0x39,0x34,0x39,0x32,0x31,0x38,0x37,0x35,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x5f,0x31,0x30,
    0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,0x20,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x49,0x72,0x72,0x61,0x64,0x69,0x61,0x6e,0x63,0x65,0x49,0x6d,0x70,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,
    0x20,0x2a,0x20,0x28,0x6e,0x2e,0x78,0x20,0x2a,0x20,0x6e,0x2e,0x78,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x5f,0x31,0x31,0x31,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x5f,0x31,0x31,0x36,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x20,0x3d,0x20,0x5f,0x31,0x32,0x32,0x20,0x2b,
    0x20,0x28,0x28,0x6e,0x2e,0x79,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x20,0x3f,0x20,
    0x30,0x2e,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x34,0x33,0x32,0x36,0x37,0x34,0x34,
    0x30,0x37,0x39,0x35,0x38,0x39,0x38,0x34,0x33,0x37,0x35,0x20,0x3a,0x20,0x30,0x2e,
    0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,0x5f,0x31,
    0x30,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x2b,
    0x3d,0x20,0x28,0x73,0x61,0x6d,0x70,0x6c,0x65,0x49,0x72,0x72,0x61,0x64,0x69,0x61,
    0x6e,0x63,0x65,0x49,0x6d,0x70,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x2c,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,
    0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x29,0x20,0x2a,0x20,0x28,0x6e,0x2e,
    0x79,0x20,0x2a,0x20,0x6e,0x2e,0x79,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x38,0x20,0x3d,0x20,0x5f,0x31,0x31,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x39,0x20,0x3d,0x20,0x5f,0x31,0x31,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x30,0x20,0x3d,0x20,0x5f,0x31,0x32,0x32,0x20,0x2b,0x20,0x28,0x28,0x6e,
    0x2e,0x7a,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x20,0x3f,0x20,0x30,0x2e,0x36,0x36,
    0x36,0x36,0x36,0x36,0x36,0x38,0x36,0x35,0x33,0x34,0x38,0x38,0x31,0x35,0x39,0x31,
    0x37,0x39,0x36,0x38,0x37,0x35,0x20,0x3a,0x20,0x30,0x2e,0x38,0x33,0x33,0x33,0x33,
    0x33,0x33,0x31,0x33,0x34,0x36,0x35,0x31,0x31,0x38,0x34,0x30,0x38,0x32,0x30,0x33,
    0x31,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x20,0x3d,
    0x20,0x5f,0x31,0x30,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x39,0x31,0x20,0x3d,0x20,0x72,0x65,0x73,
    0x75,0x6c,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x5f,0x31,0x39,0x32,0x20,0x3d,0x20,0x5f,0x31,0x39,0x31,0x20,
    0x2b,0x20,0x28,0x73,0x61,0x6d,0x70,0x6c,0x65,0x49,0x72,0x72,0x61,0x64,0x69,0x61,
    0x6e,0x63,0x65,0x49,0x6d,0x70,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x2c,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x30,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x29,0x20,0x2a,0x20,0x28,
    0x6e,0x2e,0x7a,0x20,0x2a,0x20,0x6e,0x2e,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,0x20,0x5f,0x31,0x39,0x32,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x5f,0x31,0x39,0x32,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x76,0x5f,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x73,0x71,0x72,0x74,0x28,0x73,0x61,
    0x6d,0x70,0x6c,0x65,0x49,0x72,0x72,0x61,0x64,0x69,0x61,0x6e,0x63,0x65,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x29,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
static const sg_shader_desc MapTile_MapTile_shader_desc_glsl300es = {
  0, /* _start_canary */
  { /*attrs*/{"position","TEXCOORD",0},{"normal","TEXCOORD",1},{"uv","TEXCOORD",2},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}, },
  { /* vs */
    MapTile_vs_source_glsl300es, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main", /* entry */
    { /* uniform blocks */
      {
        64, /* size */
        { /* uniforms */{"Vertex",SG_UNIFORMTYPE_FLOAT4,4},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  { /* fs */
    MapTile_fs_source_glsl300es, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main", /* entry */
    { /* uniform blocks */
      {
        48, /* size */
        { /* uniforms */{"Pixel",SG_UNIFORMTYPE_FLOAT4,3},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {"lightGrid",SG_IMAGETYPE_2D},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  "MapTile_MapTile_shader", /* label */
  0, /* _end_canary */
};
#endif /* SOKOL_GLES3 */
#if defined(SOKOL_D3D11)
/*
    cbuffer Vertex : register(b0)
    {
        row_major float4x4 _20_worldToClip : packoffset(c0);
    };
    
    
    static float4 gl_Position;
    static float3 position;
    static float3 v_position;
    static float3 v_normal;
    static float3 normal;
    static float2 v_uv;
    static float2 uv;
    
    struct SPIRV_Cross_Input
    {
        float3 position : TEXCOORD0;
        float3 normal : TEXCOORD1;
        float2 uv : TEXCOORD2;
    };
    
    struct SPIRV_Cross_Output
    {
        float3 v_position : TEXCOORD0;
        float3 v_normal : TEXCOORD1;
        float2 v_uv : TEXCOORD2;
        float4 gl_Position : SV_Position;
    };
    
    #line 21 ""
    void vert_main()
    {
    #line 21 ""
        gl_Position = mul(float4(position, 1.0f), _20_worldToClip);
        v_position = position;
    #line 23 ""
        v_normal = normal;
    #line 24 ""
        v_uv = uv;
    }
    
    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        position = stage_input.position;
        normal = stage_input.normal;
        uv = stage_input.uv;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.v_position = v_position;
        stage_output.v_normal = v_normal;
        stage_output.v_uv = v_uv;
        return stage_output;
    }
*/
static const uint8_t MapTile_vs_bytecode_hlsl5[1060] = {
    0x44,0x58,0x42,0x43,0x85,0xf1,0x34,0x33,0xf6,0x71,0x8f,0xd9,0x73,0xd6,0x42,0x75,
    0xc9,0xa6,0x1c,0x8e,0x01,0x00,0x00,0x00,0x24,0x04,0x00,0x00,0x05,0x00,0x00,0x00,
    0x34,0x00,0x00,0x00,0x48,0x01,0x00,0x00,0xac,0x01,0x00,0x00,0x34,0x02,0x00,0x00,
    0x88,0x03,0x00,0x00,0x52,0x44,0x45,0x46,0x0c,0x01,0x00,0x00,0x01,0x00,0x00,0x00,
    0x64,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x3c,0x00,0x00,0x00,0x00,0x05,0xfe,0xff,
    0x10,0x81,0x00,0x00,0xe4,0x00,0x00,0x00,0x52,0x44,0x31,0x31,0x3c,0x00,0x00,0x00,
    0x18,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x28,0x00,0x00,0x00,0x24,0x00,0x00,0x00,
    0x0c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x56,0x65,0x72,0x74,0x65,0x78,0x00,0xab,
    0x5c,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x7c,0x00,0x00,0x00,0x40,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xa4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x40,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,
    0x5f,0x32,0x30,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x54,0x6f,0x43,0x6c,0x69,0x70,0x00,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x00,0xab,0xab,0xab,0x02,0x00,0x03,0x00,
    0x04,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xb4,0x00,0x00,0x00,
    0x4d,0x69,0x63,0x72,0x6f,0x73,0x6f,0x66,0x74,0x20,0x28,0x52,0x29,0x20,0x48,0x4c,
    0x53,0x4c,0x20,0x53,0x68,0x61,0x64,0x65,0x72,0x20,0x43,0x6f,0x6d,0x70,0x69,0x6c,
    0x65,0x72,0x20,0x31,0x30,0x2e,0x31,0x00,0x49,0x53,0x47,0x4e,0x5c,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x50,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x07,0x00,0x00,
    0x50,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x07,0x07,0x00,0x00,0x50,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x03,0x03,0x00,0x00,
    0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x00,0xab,0xab,0xab,0x4f,0x53,0x47,0x4e,
    0x80,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x68,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x07,0x08,0x00,0x00,0x68,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x07,0x08,0x00,0x00,0x68,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x03,0x0c,0x00,0x00,0x71,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0x54,0x45,0x58,0x43,
    0x4f,0x4f,0x52,0x44,0x00,0x53,0x56,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x00,0xab,0xab,0xab,0x53,0x48,0x45,0x58,0x4c,0x01,0x00,0x00,0x50,0x00,0x01,0x00,
    0x53,0x00,0x00,0x00,0x6a,0x08,0x00,0x01,0x59,0x00,0x00,0x04,0x46,0x8e,0x20,0x00,
    0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x5f,0x00,0x00,0x03,0x72,0x10,0x10,0x00,
    0x00,0x00,0x00,0x00,0x5f,0x00,0x00,0x03,0x72,0x10,0x10,0x00,0x01,0x00,0x00,0x00,
    0x5f,0x00,0x00,0x03,0x32,0x10,0x10,0x00,0x02,0x00,0x00,0x00,0x65,0x00,0x00,0x03,
    0x72,0x20,0x10,0x00,0x00,0x00,0x00,0x00,0x65,0x00,0x00,0x03,0x72,0x20,0x10,0x00,
    0x01,0x00,0x00,0x00,0x65,0x00,0x00,0x03,0x32,0x20,0x10,0x00,0x02,0x00,0x00,0x00,
    0x67,0x00,0x00,0x04,0xf2,0x20,0x10,0x00,0x03,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x68,0x00,0x00,0x02,0x01,0x00,0x00,0x00,0x36,0x00,0x00,0x05,0x72,0x20,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x12,0x10,0x00,0x00,0x00,0x00,0x00,0x36,0x00,0x00,0x05,
    0x72,0x20,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x12,0x10,0x00,0x01,0x00,0x00,0x00,
    0x36,0x00,0x00,0x05,0x32,0x20,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x10,0x10,0x00,
    0x02,0x00,0x00,0x00,0x38,0x00,0x00,0x08,0xf2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x56,0x15,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,0xf2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x06,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,
    0xf2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0xa6,0x1a,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0xf2,0x20,0x10,0x00,0x03,0x00,0x00,0x00,
    0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x3e,0x00,0x00,0x01,0x53,0x54,0x41,0x54,0x94,0x00,0x00,0x00,
    0x08,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,
    0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,
};
/*
    cbuffer Pixel : register(b0)
    {
        float3 _54_lightGridOrigin : packoffset(c0);
        float3 _54_lightGridRcpScale : packoffset(c1);
        float _54_lightGridYSlices : packoffset(c1.w);
        float _54_lightGridRcpYSlices : packoffset(c2);
    };
    
    Texture2D<float4> lightGrid : register(t0);
    SamplerState _lightGrid_sampler : register(s0);
    
    static float3 v_position;
    static float3 v_normal;
    static float4 frag_color;
    static float2 v_uv;
    
    struct SPIRV_Cross_Input
    {
        float3 v_position : TEXCOORD0;
        float3 v_normal : TEXCOORD1;
        float2 v_uv : TEXCOORD2;
    };
    
    struct SPIRV_Cross_Output
    {
        float4 frag_color : SV_Target0;
    };
    
    #line 24 ""
    float3 sampleIrradianceImp(float x0, float x1, float y, float dy)
    {
    #line 24 ""
        return lerp(lightGrid.Sample(_lightGrid_sampler, float2(x0, y)).xyz, lightGrid.Sample(_lightGrid_sampler, float2(x1, y)).xyz, dy.xxx);
    }
    
    #line 31 ""
    float3 sampleIrradiance(float3 p, float3 n)
    {
    #line 31 ""
        float3 _80 = clamp((p - _54_lightGridOrigin) * _54_lightGridRcpScale, _54_lightGridRcpScale, 1.0f.xxx - _54_lightGridRcpScale);
        float _90 = _80.y * _54_lightGridYSlices;
        float _97 = floor(clamp(_90 - 9.9999997473787516355514526367188e-05f, 0.0f, 1.0f));
        float _101 = _90 - _97;
        float _111 = (_80.x + _97) * _54_lightGridRcpYSlices;
        float _116 = _111 + _54_lightGridRcpYSlices;
        float _122 = _80.z * 0.16666667163372039794921875f;
    #line 40 ""
        float param = _111;
        float param_1 = _116;
        float param_2 = _122 + ((n.x > 0.0f) ? 0.0f : 0.16666667163372039794921875f);
        float param_3 = _101;
        float3 result = sampleIrradianceImp(param, param_1, param_2, param_3) * (n.x * n.x);
    #line 41 ""
        float param_4 = _111;
        float param_5 = _116;
        float param_6 = _122 + ((n.y > 0.0f) ? 0.3333333432674407958984375f : 0.5f);
        float param_7 = _101;
        result += (sampleIrradianceImp(param_4, param_5, param_6, param_7) * (n.y * n.y));
    #line 42 ""
        float param_8 = _111;
        float param_9 = _116;
        float param_10 = _122 + ((n.z > 0.0f) ? 0.666666686534881591796875f : 0.833333313465118408203125f);
        float param_11 = _101;
        float3 _191 = result;
        float3 _192 = _191 + (sampleIrradianceImp(param_8, param_9, param_10, param_11) * (n.z * n.z));
        result = _192;
        return _192;
    }
    
    #line 49 ""
    void frag_main()
    {
    #line 49 ""
    #line 50 ""
        float3 param = v_position;
        float3 param_1 = normalize(v_normal);
        frag_color = float4(sqrt(sampleIrradiance(param, param_1)), 1.0f);
    }
    
    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        v_position = stage_input.v_position;
        v_normal = stage_input.v_normal;
        v_uv = stage_input.v_uv;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.frag_color = frag_color;
        return stage_output;
    }
*/
static const uint8_t MapTile_fs_bytecode_hlsl5[2336] = {
    0x44,0x58,0x42,0x43,0x49,0xdb,0x93,0xb9,0x51,0xdf,0xf3,0x41,0xfa,0x52,0x9f,0xca,
    0xd5,0xf1,0xd6,0x8e,0x01,0x00,0x00,0x00,0x20,0x09,0x00,0x00,0x05,0x00,0x00,0x00,
    0x34,0x00,0x00,0x00,0x8c,0x02,0x00,0x00,0xf0,0x02,0x00,0x00,0x24,0x03,0x00,0x00,
    0x84,0x08,0x00,0x00,0x52,0x44,0x45,0x46,0x50,0x02,0x00,0x00,0x01,0x00,0x00,0x00,
    0xc0,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x3c,0x00,0x00,0x00,0x00,0x05,0xff,0xff,
    0x10,0x81,0x00,0x00,0x28,0x02,0x00,0x00,0x52,0x44,0x31,0x31,0x3c,0x00,0x00,0x00,
    0x18,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x28,0x00,0x00,0x00,0x24,0x00,0x00,0x00,
    0x0c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x9c,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0xaf,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x05,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x0d,0x00,0x00,0x00,0xb9,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x5f,0x6c,0x69,0x67,0x68,0x74,0x47,0x72,
    0x69,0x64,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x00,0x6c,0x69,0x67,0x68,0x74,
    0x47,0x72,0x69,0x64,0x00,0x50,0x69,0x78,0x65,0x6c,0x00,0xab,0xb9,0x00,0x00,0x00,
    0x04,0x00,0x00,0x00,0xd8,0x00,0x00,0x00,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x78,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x94,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xb8,0x01,0x00,0x00,
    0x10,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x94,0x01,0x00,0x00,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0xce,0x01,0x00,0x00,0x1c,0x00,0x00,0x00,0x04,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0xec,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x10,0x02,0x00,0x00,
    0x20,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0xec,0x01,0x00,0x00,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0x5f,0x35,0x34,0x5f,0x6c,0x69,0x67,0x68,0x74,0x47,0x72,0x69,
    0x64,0x4f,0x72,0x69,0x67,0x69,0x6e,0x00,0x66,0x6c,0x6f,0x61,0x74,0x33,0x00,0xab,
    0x01,0x00,0x03,0x00,0x01,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x8c,0x01,0x00,0x00,0x5f,0x35,0x34,0x5f,0x6c,0x69,0x67,0x68,0x74,0x47,0x72,0x69,
    0x64,0x52,0x63,0x70,0x53,0x63,0x61,0x6c,0x65,0x00,0x5f,0x35,0x34,0x5f,0x6c,0x69,
    0x67,0x68,0x74,0x47,0x72,0x69,0x64,0x59,0x53,0x6c,0x69,0x63,0x65,0x73,0x00,0x66,
    0x6c,0x6f,0x61,0x74,0x00,0xab,0xab,0xab,0x00,0x00,0x03,0x00,0x01,0x00,0x01,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xe3,0x01,0x00,0x00,0x5f,0x35,0x34,0x5f,
    0x6c,0x69,0x67,0x68,0x74,0x47,0x72,0x69,0x64,0x52,0x63,0x70,0x59,0x53,0x6c,0x69,
    0x63,0x65,0x73,0x00,0x4d,0x69,0x63,0x72,0x6f,0x73,0x6f,0x66,0x74,0x20,0x28,0x52,
    0x29,0x20,0x48,0x4c,0x53,0x4c,0x20,0x53,0x68,0x61,0x64,0x65,0x72,0x20,0x43,0x6f,
    0x6d,0x70,0x69,0x6c,0x65,0x72,0x20,0x31,0x30,0x2e,0x31,0x00,0x49,0x53,0x47,0x4e,
    0x5c,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x50,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x07,0x07,0x00,0x00,0x50,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x07,0x07,0x00,0x00,0x50,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x00,0xab,0xab,0xab,
    0x4f,0x53,0x47,0x4e,0x2c,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x08,0x00,0x00,0x00,
    0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0x53,0x56,0x5f,0x54,0x61,0x72,0x67,0x65,
    0x74,0x00,0xab,0xab,0x53,0x48,0x45,0x58,0x58,0x05,0x00,0x00,0x50,0x00,0x00,0x00,
    0x56,0x01,0x00,0x00,0x6a,0x08,0x00,0x01,0x59,0x00,0x00,0x04,0x46,0x8e,0x20,0x00,
    0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x5a,0x00,0x00,0x03,0x00,0x60,0x10,0x00,
    0x00,0x00,0x00,0x00,0x58,0x18,0x00,0x04,0x00,0x70,0x10,0x00,0x00,0x00,0x00,0x00,
    0x55,0x55,0x00,0x00,0x62,0x10,0x00,0x03,0x72,0x10,0x10,0x00,0x00,0x00,0x00,0x00,
    0x62,0x10,0x00,0x03,0x72,0x10,0x10,0x00,0x01,0x00,0x00,0x00,0x65,0x00,0x00,0x03,
    0xf2,0x20,0x10,0x00,0x00,0x00,0x00,0x00,0x68,0x00,0x00,0x02,0x06,0x00,0x00,0x00,
    0x10,0x00,0x00,0x07,0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x12,0x10,0x00,
    0x01,0x00,0x00,0x00,0x46,0x12,0x10,0x00,0x01,0x00,0x00,0x00,0x44,0x00,0x00,0x05,
    0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x38,0x00,0x00,0x07,0x72,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x12,0x10,0x00,0x01,0x00,0x00,0x00,0x31,0x00,0x00,0x0a,
    0x72,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x07,0x72,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,
    0x37,0x00,0x00,0x0f,0x72,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x01,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0xab,0xaa,0xaa,0x3e,
    0xab,0xaa,0x2a,0x3f,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0xab,0xaa,0x2a,0x3e,
    0x00,0x00,0x00,0x3f,0x55,0x55,0x55,0x3f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x09,
    0x72,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x12,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x82,0x20,0x80,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x38,0x00,0x00,0x08,0x72,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x02,0x00,0x00,0x00,0x46,0x82,0x20,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x34,0x00,0x00,0x08,0x72,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x02,0x00,0x00,0x00,0x46,0x82,0x20,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x00,0x00,0x00,0x0c,0x72,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x02,0x40,0x00,0x00,
    0x00,0x00,0x80,0x3f,0x00,0x00,0x80,0x3f,0x00,0x00,0x80,0x3f,0x00,0x00,0x00,0x00,
    0x46,0x82,0x20,0x80,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x33,0x00,0x00,0x07,0x72,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x02,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x03,0x00,0x00,0x00,0x32,0x00,0x00,0x0c,
    0xe2,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0xa6,0x0a,0x10,0x00,0x02,0x00,0x00,0x00,
    0x02,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0xab,0xaa,0x2a,0x3e,0xab,0xaa,0x2a,0x3e,
    0xab,0xaa,0x2a,0x3e,0x06,0x09,0x10,0x00,0x01,0x00,0x00,0x00,0x32,0x20,0x00,0x0a,
    0x82,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x3a,0x80,0x20,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0x17,0xb7,0xd1,0xb8,0x41,0x00,0x00,0x05,0x82,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x3a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x12,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x32,0x00,0x00,0x0b,0x82,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x1a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x3a,0x80,0x20,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x3a,0x00,0x10,0x80,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x38,0x00,0x00,0x08,0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x0a,0x80,0x20,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x32,0x00,0x00,0x0b,0x12,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x0a,0x80,0x20,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x0a,0x80,0x20,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x45,0x00,0x00,0x8b,
    0xc2,0x00,0x00,0x80,0x43,0x55,0x15,0x00,0x72,0x00,0x10,0x00,0x03,0x00,0x00,0x00,
    0x86,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x7e,0x10,0x00,0x00,0x00,0x00,0x00,
    0x00,0x60,0x10,0x00,0x00,0x00,0x00,0x00,0x36,0x00,0x00,0x05,0xe2,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x56,0x0e,0x10,0x00,0x01,0x00,0x00,0x00,0x45,0x00,0x00,0x8b,
    0xc2,0x00,0x00,0x80,0x43,0x55,0x15,0x00,0x72,0x00,0x10,0x00,0x04,0x00,0x00,0x00,
    0x86,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x7e,0x10,0x00,0x00,0x00,0x00,0x00,
    0x00,0x60,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x72,0x00,0x10,0x00,
    0x04,0x00,0x00,0x00,0x46,0x02,0x10,0x80,0x41,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x04,0x00,0x00,0x00,0x32,0x00,0x00,0x09,0x72,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0xf6,0x0f,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x04,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x03,0x00,0x00,0x00,0x38,0x00,0x00,0x07,
    0x72,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x56,0x05,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x03,0x00,0x00,0x00,0x45,0x00,0x00,0x8b,0xc2,0x00,0x00,0x80,
    0x43,0x55,0x15,0x00,0x72,0x00,0x10,0x00,0x04,0x00,0x00,0x00,0x46,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x46,0x7e,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x10,0x00,
    0x00,0x00,0x00,0x00,0x45,0x00,0x00,0x8b,0xc2,0x00,0x00,0x80,0x43,0x55,0x15,0x00,
    0x72,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0xc6,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x46,0x7e,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x10,0x00,0x00,0x00,0x00,0x00,
    0x45,0x00,0x00,0x8b,0xc2,0x00,0x00,0x80,0x43,0x55,0x15,0x00,0x72,0x00,0x10,0x00,
    0x05,0x00,0x00,0x00,0x46,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x7e,0x10,0x00,
    0x00,0x00,0x00,0x00,0x00,0x60,0x10,0x00,0x00,0x00,0x00,0x00,0x45,0x00,0x00,0x8b,
    0xc2,0x00,0x00,0x80,0x43,0x55,0x15,0x00,0x72,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0xc6,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x7e,0x10,0x00,0x00,0x00,0x00,0x00,
    0x00,0x60,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x72,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x46,0x02,0x10,0x80,0x41,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x02,0x00,0x00,0x00,0x32,0x00,0x00,0x09,0x72,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0xf6,0x0f,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x02,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x08,
    0x72,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x02,0x10,0x80,0x41,0x00,0x00,0x00,
    0x04,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x05,0x00,0x00,0x00,0x32,0x00,0x00,0x09,
    0x72,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0xf6,0x0f,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x04,0x00,0x00,0x00,
    0x32,0x00,0x00,0x09,0xb2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x08,0x10,0x00,
    0x02,0x00,0x00,0x00,0x06,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x08,0x10,0x00,
    0x03,0x00,0x00,0x00,0x32,0x00,0x00,0x09,0x72,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x01,0x00,0x00,0x00,0xa6,0x0a,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x03,0x10,0x00,0x00,0x00,0x00,0x00,0x4b,0x00,0x00,0x05,0x72,0x20,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,0x36,0x00,0x00,0x05,
    0x82,0x20,0x10,0x00,0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x80,0x3f,
    0x3e,0x00,0x00,0x01,0x53,0x54,0x41,0x54,0x94,0x00,0x00,0x00,0x25,0x00,0x00,0x00,
    0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x1b,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

};
static const sg_shader_desc MapTile_MapTile_shader_desc_hlsl5 = {
  0, /* _start_canary */
  { /*attrs*/{"position","TEXCOORD",0},{"normal","TEXCOORD",1},{"uv","TEXCOORD",2},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}, },
  { /* vs */
    0, /* source */
    MapTile_vs_bytecode_hlsl5, /* bytecode */
    1060, /* bytecode_size */
    "main", /* entry */
    { /* uniform blocks */
      {
        64, /* size */
        { /* uniforms */{"Vertex",SG_UNIFORMTYPE_FLOAT4,4},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  { /* fs */
    0, /* source */
    MapTile_fs_bytecode_hlsl5, /* bytecode */
    2336, /* bytecode_size */
    "main", /* entry */
    { /* uniform blocks */
      {
        48, /* size */
        { /* uniforms */{"Pixel",SG_UNIFORMTYPE_FLOAT4,3},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {"lightGrid",SG_IMAGETYPE_2D},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  "MapTile_MapTile_shader", /* label */
  0, /* _end_canary */
};
#endif /* SOKOL_D3D11 */
const sg_shader_desc* MapTile_MapTile_shader_desc(void) {
    #if defined(SOKOL_GLCORE33)
    if (sg_query_backend() == SG_BACKEND_GLCORE33) {
        return &MapTile_MapTile_shader_desc_glsl330;
    }
    #endif /* SOKOL_GLCORE33 */
    #if defined(SOKOL_GLES2)
    if (sg_query_backend() == SG_BACKEND_GLES2) {
        return &MapTile_MapTile_shader_desc_glsl100;
    }
    #endif /* SOKOL_GLES2 */
    #if defined(SOKOL_GLES3)
    if (sg_query_backend() == SG_BACKEND_GLES3) {
        return &MapTile_MapTile_shader_desc_glsl300es;
    }
    #endif /* SOKOL_GLES3 */
    #if defined(SOKOL_D3D11)
    if (sg_query_backend() == SG_BACKEND_D3D11) {
        return &MapTile_MapTile_shader_desc_hlsl5;
    }
    #endif /* SOKOL_D3D11 */
    return 0; /* can't happen */
}
#endif /* SOKOL_SHDC_IMPL */
