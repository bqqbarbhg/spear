#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Overview:

        Shader program 'TestSkin':
            Get shader desc: TestSkin_TestSkin_shader_desc()
            Vertex shader: vs
                Attribute slots:
                    ATTR_TestSkin_vs_position = 0
                    ATTR_TestSkin_vs_uv = 1
                    ATTR_TestSkin_vs_normal = 2
                    ATTR_TestSkin_vs_tangent = 3
                    ATTR_TestSkin_vs_indices = 4
                    ATTR_TestSkin_vs_weights = 5
                Uniform block 'Bones':
                    C struct: TestSkin_Bones_t
                    Bind slot: SLOT_TestSkin_Bones = 0
                Uniform block 'VertexUniform':
                    C struct: TestSkin_VertexUniform_t
                    Bind slot: SLOT_TestSkin_VertexUniform = 1
            Fragment shader: fs
                Uniform block 'Pixel':
                    C struct: TestSkin_Pixel_t
                    Bind slot: SLOT_TestSkin_Pixel = 0
                Image 'shadowGrid':
                    Type: SG_IMAGETYPE_ARRAY
                    Bind slot: SLOT_TestSkin_shadowGrid = 0


    Shader descriptor structs:

        sg_shader TestSkin = sg_make_shader(TestSkin_TestSkin_shader_desc());

    Vertex attribute locations for vertex shader 'vs':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_TestSkin_vs_position] = { ... },
                    [ATTR_TestSkin_vs_uv] = { ... },
                    [ATTR_TestSkin_vs_normal] = { ... },
                    [ATTR_TestSkin_vs_tangent] = { ... },
                    [ATTR_TestSkin_vs_indices] = { ... },
                    [ATTR_TestSkin_vs_weights] = { ... },
                },
            },
            ...});

    Image bind slots, use as index in sg_bindings.vs_images[] or .fs_images[]

        SLOT_TestSkin_shadowGrid = 0;

    Bind slot and C-struct for uniform block 'Bones':

        TestSkin_Bones_t Bones = {
            .bones = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_TestSkin_Bones, &Bones, sizeof(Bones));

    Bind slot and C-struct for uniform block 'VertexUniform':

        TestSkin_VertexUniform_t VertexUniform = {
            .color = ...;
            .texScaleOffset = ...;
            .viewProj = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_TestSkin_VertexUniform, &VertexUniform, sizeof(VertexUniform));

    Bind slot and C-struct for uniform block 'Pixel':

        TestSkin_Pixel_t Pixel = {
            .numLightsF = ...;
            .lightData = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_TestSkin_Pixel, &Pixel, sizeof(Pixel));

*/
#include <stdint.h>
#include <stdbool.h>
#if !defined(SOKOL_GFX_INCLUDED)
  #error "Please include sokol_gfx.h before TestSkin.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
  #if defined(_MSC_VER)
    #define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
  #else
    #define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
  #endif
#endif
const sg_shader_desc* TestSkin_TestSkin_shader_desc(void);
#define ATTR_TestSkin_vs_position (0)
#define ATTR_TestSkin_vs_uv (1)
#define ATTR_TestSkin_vs_normal (2)
#define ATTR_TestSkin_vs_tangent (3)
#define ATTR_TestSkin_vs_indices (4)
#define ATTR_TestSkin_vs_weights (5)
#define SLOT_TestSkin_shadowGrid (0)
#define SLOT_TestSkin_Bones (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct TestSkin_Bones_t {
    float bones[192][4];
} TestSkin_Bones_t;
#pragma pack(pop)
#define SLOT_TestSkin_VertexUniform (1)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct TestSkin_VertexUniform_t {
    float color[3];
    uint8_t _pad_12[4];
    float texScaleOffset[4];
    float viewProj[16];
} TestSkin_VertexUniform_t;
#pragma pack(pop)
#define SLOT_TestSkin_Pixel (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct TestSkin_Pixel_t {
    float numLightsF;
    uint8_t _pad_4[12];
    float lightData[64][4];
} TestSkin_Pixel_t;
#pragma pack(pop)
#if defined(SOKOL_SHDC_IMPL)
#if defined(SOKOL_GLCORE33)
/*
    #version 330
    
    uniform vec4 Bones[192];
    uniform vec4 VertexUniform[6];
    layout(location = 4) in vec4 indices;
    layout(location = 5) in vec4 weights;
    layout(location = 0) in vec3 position;
    layout(location = 2) in vec3 normal;
    out vec3 v_position;
    out vec3 v_normal;
    out vec3 v_color;
    out vec2 v_uv;
    layout(location = 1) in vec2 uv;
    layout(location = 3) in vec4 tangent;
    
    void main()
    {
        ivec4 _18 = ivec4(indices * 3.0);
        int _31 = _18.x;
        int _63 = _18.y;
        int _94 = _18.z;
        int _125 = _18.w;
        vec4 _133 = (((Bones[_31 * 1 + 0] * weights.x) + (Bones[_63 * 1 + 0] * weights.y)) + (Bones[_94 * 1 + 0] * weights.z)) + (Bones[_125 * 1 + 0] * weights.w);
        vec4 _143 = (((Bones[(_31 + 1) * 1 + 0] * weights.x) + (Bones[(_63 + 1) * 1 + 0] * weights.y)) + (Bones[(_94 + 1) * 1 + 0] * weights.z)) + (Bones[(_125 + 1) * 1 + 0] * weights.w);
        vec4 _153 = (((Bones[(_31 + 2) * 1 + 0] * weights.x) + (Bones[(_63 + 2) * 1 + 0] * weights.y)) + (Bones[(_94 + 2) * 1 + 0] * weights.z)) + (Bones[(_125 + 2) * 1 + 0] * weights.w);
        vec4 _165 = vec4(position, 1.0);
        float _166 = dot(_133, _165);
        float _173 = dot(_143, _165);
        float _180 = dot(_153, _165);
        vec4 _190 = vec4(normal, 0.0);
        gl_Position = mat4(VertexUniform[2], VertexUniform[3], VertexUniform[4], VertexUniform[5]) * vec4(_166, _173, _180, 1.0);
        v_position = vec3(_166, _173, _180);
        v_normal = normalize(vec3(dot(_133, _190), dot(_143, _190), dot(_153, _190)));
        v_color = VertexUniform[0].xyz;
        v_uv = (uv * VertexUniform[1].xy) + VertexUniform[1].zw;
    }
    
*/
static const char TestSkin_vs_source_glsl330[1557] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x42,0x6f,0x6e,0x65,0x73,
    0x5b,0x31,0x39,0x32,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,
    0x65,0x63,0x34,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x55,0x6e,0x69,0x66,0x6f,0x72,
    0x6d,0x5b,0x36,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x34,0x20,0x69,0x6e,0x64,0x69,0x63,0x65,0x73,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x35,0x29,
    0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x77,0x65,0x69,0x67,0x68,0x74,0x73,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6f,0x75,
    0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,
    0x20,0x76,0x5f,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,
    0x65,0x63,0x32,0x20,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x69,0x6e,0x20,
    0x76,0x65,0x63,0x34,0x20,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x3b,0x0a,0x0a,0x76,
    0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x38,0x20,0x3d,0x20,0x69,0x76,0x65,
    0x63,0x34,0x28,0x69,0x6e,0x64,0x69,0x63,0x65,0x73,0x20,0x2a,0x20,0x33,0x2e,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x33,0x31,0x20,0x3d,
    0x20,0x5f,0x31,0x38,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,
    0x5f,0x36,0x33,0x20,0x3d,0x20,0x5f,0x31,0x38,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x6e,0x74,0x20,0x5f,0x39,0x34,0x20,0x3d,0x20,0x5f,0x31,0x38,0x2e,0x7a,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x32,0x35,0x20,0x3d,
    0x20,0x5f,0x31,0x38,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,
    0x20,0x5f,0x31,0x33,0x33,0x20,0x3d,0x20,0x28,0x28,0x28,0x42,0x6f,0x6e,0x65,0x73,
    0x5b,0x5f,0x33,0x31,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,
    0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x78,0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,
    0x6e,0x65,0x73,0x5b,0x5f,0x36,0x33,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,
    0x20,0x2a,0x20,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x79,0x29,0x29,0x20,0x2b,
    0x20,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x39,0x34,0x20,0x2a,0x20,0x31,0x20,
    0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x7a,
    0x29,0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x31,0x32,0x35,
    0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x77,0x65,0x69,0x67,
    0x68,0x74,0x73,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,
    0x20,0x5f,0x31,0x34,0x33,0x20,0x3d,0x20,0x28,0x28,0x28,0x42,0x6f,0x6e,0x65,0x73,
    0x5b,0x28,0x5f,0x33,0x31,0x20,0x2b,0x20,0x31,0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,
    0x20,0x30,0x5d,0x20,0x2a,0x20,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x78,0x29,
    0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,0x5f,0x36,0x33,0x20,0x2b,
    0x20,0x31,0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x77,
    0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x79,0x29,0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,
    0x6e,0x65,0x73,0x5b,0x28,0x5f,0x39,0x34,0x20,0x2b,0x20,0x31,0x29,0x20,0x2a,0x20,
    0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x77,0x65,0x69,0x67,0x68,0x74,0x73,
    0x2e,0x7a,0x29,0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,0x5f,
    0x31,0x32,0x35,0x20,0x2b,0x20,0x31,0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,
    0x5d,0x20,0x2a,0x20,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x77,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x35,0x33,0x20,0x3d,0x20,
    0x28,0x28,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,0x5f,0x33,0x31,0x20,0x2b,0x20,
    0x32,0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x77,0x65,
    0x69,0x67,0x68,0x74,0x73,0x2e,0x78,0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,
    0x73,0x5b,0x28,0x5f,0x36,0x33,0x20,0x2b,0x20,0x32,0x29,0x20,0x2a,0x20,0x31,0x20,
    0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x79,
    0x29,0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,0x5f,0x39,0x34,
    0x20,0x2b,0x20,0x32,0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,
    0x20,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x7a,0x29,0x29,0x20,0x2b,0x20,0x28,
    0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,0x5f,0x31,0x32,0x35,0x20,0x2b,0x20,0x32,0x29,
    0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x77,0x65,0x69,0x67,
    0x68,0x74,0x73,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,
    0x20,0x5f,0x31,0x36,0x35,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x36,0x36,0x20,0x3d,0x20,0x64,0x6f,
    0x74,0x28,0x5f,0x31,0x33,0x33,0x2c,0x20,0x5f,0x31,0x36,0x35,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x37,0x33,0x20,0x3d,0x20,
    0x64,0x6f,0x74,0x28,0x5f,0x31,0x34,0x33,0x2c,0x20,0x5f,0x31,0x36,0x35,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x38,0x30,0x20,
    0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x35,0x33,0x2c,0x20,0x5f,0x31,0x36,0x35,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x39,0x30,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,
    0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x56,0x65,0x72,
    0x74,0x65,0x78,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x5b,0x32,0x5d,0x2c,0x20,0x56,
    0x65,0x72,0x74,0x65,0x78,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x5b,0x33,0x5d,0x2c,
    0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x5b,0x34,
    0x5d,0x2c,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x5b,0x35,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x31,0x36,0x36,
    0x2c,0x20,0x5f,0x31,0x37,0x33,0x2c,0x20,0x5f,0x31,0x38,0x30,0x2c,0x20,0x31,0x2e,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x31,0x36,0x36,0x2c,0x20,
    0x5f,0x31,0x37,0x33,0x2c,0x20,0x5f,0x31,0x38,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x65,0x63,0x33,0x28,0x64,0x6f,0x74,0x28,0x5f,
    0x31,0x33,0x33,0x2c,0x20,0x5f,0x31,0x39,0x30,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,
    0x5f,0x31,0x34,0x33,0x2c,0x20,0x5f,0x31,0x39,0x30,0x29,0x2c,0x20,0x64,0x6f,0x74,
    0x28,0x5f,0x31,0x35,0x33,0x2c,0x20,0x5f,0x31,0x39,0x30,0x29,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x56,0x65,
    0x72,0x74,0x65,0x78,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x5b,0x30,0x5d,0x2e,0x78,
    0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x75,0x76,0x20,0x3d,0x20,0x28,
    0x75,0x76,0x20,0x2a,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x55,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x29,0x20,0x2b,0x20,0x56,0x65,0x72,0x74,
    0x65,0x78,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x5b,0x31,0x5d,0x2e,0x7a,0x77,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 330
    
    uniform vec4 Pixel[65];
    uniform sampler2DArray shadowGrid;
    
    in vec3 v_position;
    in vec3 v_normal;
    layout(location = 0) out vec4 o_color;
    in vec3 v_color;
    in vec2 v_uv;
    
    vec3 evalLight(vec3 P, vec3 N, int base)
    {
        vec3 _73 = Pixel[base * 1 + 1].xyz - P;
        float _77 = dot(_73, _73);
        float _87 = Pixel[base * 1 + 1].w * Pixel[base * 1 + 1].w;
        vec3 result;
        if (_77 < _87)
        {
            vec3 _108 = (_73 * Pixel[(base + 2) * 1 + 1].xyz) + Pixel[(base + 3) * 1 + 1].xyz;
            float _114 = _108.y * 8.0;
            float _120 = clamp(floor(_114), 0.0, 7.0);
            float _140 = _108.x;
            result = ((vec3(mix(textureLod(shadowGrid, vec3(_140, _108.z, _120), 0.0).x, textureLod(shadowGrid, vec3(_140, _108.z, min(_120 + 1.0, 7.0)), 0.0).x, _114 - _120)) * dot(N, _73 / vec3(sqrt(_77)))) * ((1.0 / (0.100000001490116119384765625 + _77)) - (1.0 / (0.100000001490116119384765625 + _87)))) * Pixel[(base + 1) * 1 + 1].xyz;
        }
        else
        {
            result = vec3(0.0);
        }
        return result;
    }
    
    float linearToSrgb(inout float x)
    {
        x = clamp(x, 0.0, 1.0);
        if (x <= 0.00031308000325225293636322021484375)
        {
            return 12.9200000762939453125 * x;
        }
        else
        {
            return (1.05499994754791259765625 * pow(x, 0.4166666567325592041015625)) - 0.054999999701976776123046875;
        }
    }
    
    vec3 linearToSrgb(vec3 v)
    {
        float param = v.x;
        float _210 = linearToSrgb(param);
        float param_1 = v.y;
        float _214 = linearToSrgb(param_1);
        float param_2 = v.z;
        float _219 = linearToSrgb(param_2);
        return vec3(_210, _214, _219);
    }
    
    vec3 tonemap(vec3 v)
    {
        vec3 param = v / (vec3(1.0) + v);
        return linearToSrgb(param);
    }
    
    void main()
    {
        vec3 result = vec3(0.0);
        for (int base = 0; base < (int(Pixel[0].x) * 4); base += 4)
        {
            vec3 param = v_position;
            vec3 param_1 = normalize(v_normal);
            int param_2 = base;
            result += evalLight(param, param_1, param_2);
        }
        vec3 param_3 = result;
        o_color = vec4(tonemap(param_3), 1.0);
    }
    
*/
static const char TestSkin_fs_source_glsl330[2040] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x50,0x69,0x78,0x65,0x6c,
    0x5b,0x36,0x35,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,
    0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x41,0x72,0x72,0x61,0x79,0x20,0x73,0x68,0x61,
    0x64,0x6f,0x77,0x47,0x72,0x69,0x64,0x3b,0x0a,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,
    0x33,0x20,0x76,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x6f,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x76,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,
    0x76,0x5f,0x75,0x76,0x3b,0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,0x65,0x76,0x61,0x6c,
    0x4c,0x69,0x67,0x68,0x74,0x28,0x76,0x65,0x63,0x33,0x20,0x50,0x2c,0x20,0x76,0x65,
    0x63,0x33,0x20,0x4e,0x2c,0x20,0x69,0x6e,0x74,0x20,0x62,0x61,0x73,0x65,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x37,0x33,0x20,0x3d,
    0x20,0x50,0x69,0x78,0x65,0x6c,0x5b,0x62,0x61,0x73,0x65,0x20,0x2a,0x20,0x31,0x20,
    0x2b,0x20,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2d,0x20,0x50,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x37,0x37,0x20,0x3d,0x20,0x64,0x6f,
    0x74,0x28,0x5f,0x37,0x33,0x2c,0x20,0x5f,0x37,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,0x37,0x20,0x3d,0x20,0x50,0x69,0x78,
    0x65,0x6c,0x5b,0x62,0x61,0x73,0x65,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x31,0x5d,
    0x2e,0x77,0x20,0x2a,0x20,0x50,0x69,0x78,0x65,0x6c,0x5b,0x62,0x61,0x73,0x65,0x20,
    0x2a,0x20,0x31,0x20,0x2b,0x20,0x31,0x5d,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x66,0x20,0x28,0x5f,0x37,0x37,0x20,0x3c,0x20,0x5f,0x38,0x37,0x29,0x0a,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x5f,0x31,0x30,0x38,0x20,0x3d,0x20,0x28,0x5f,0x37,0x33,0x20,0x2a,
    0x20,0x50,0x69,0x78,0x65,0x6c,0x5b,0x28,0x62,0x61,0x73,0x65,0x20,0x2b,0x20,0x32,
    0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,
    0x2b,0x20,0x50,0x69,0x78,0x65,0x6c,0x5b,0x28,0x62,0x61,0x73,0x65,0x20,0x2b,0x20,
    0x33,0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x31,0x31,0x34,0x20,0x3d,0x20,0x5f,0x31,0x30,0x38,0x2e,0x79,0x20,0x2a,0x20,0x38,
    0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x31,0x32,0x30,0x20,0x3d,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x66,
    0x6c,0x6f,0x6f,0x72,0x28,0x5f,0x31,0x31,0x34,0x29,0x2c,0x20,0x30,0x2e,0x30,0x2c,
    0x20,0x37,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x34,0x30,0x20,0x3d,0x20,0x5f,0x31,0x30,0x38,
    0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,
    0x6c,0x74,0x20,0x3d,0x20,0x28,0x28,0x76,0x65,0x63,0x33,0x28,0x6d,0x69,0x78,0x28,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x4c,0x6f,0x64,0x28,0x73,0x68,0x61,0x64,0x6f,
    0x77,0x47,0x72,0x69,0x64,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x31,0x34,0x30,
    0x2c,0x20,0x5f,0x31,0x30,0x38,0x2e,0x7a,0x2c,0x20,0x5f,0x31,0x32,0x30,0x29,0x2c,
    0x20,0x30,0x2e,0x30,0x29,0x2e,0x78,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x4c,0x6f,0x64,0x28,0x73,0x68,0x61,0x64,0x6f,0x77,0x47,0x72,0x69,0x64,0x2c,0x20,
    0x76,0x65,0x63,0x33,0x28,0x5f,0x31,0x34,0x30,0x2c,0x20,0x5f,0x31,0x30,0x38,0x2e,
    0x7a,0x2c,0x20,0x6d,0x69,0x6e,0x28,0x5f,0x31,0x32,0x30,0x20,0x2b,0x20,0x31,0x2e,
    0x30,0x2c,0x20,0x37,0x2e,0x30,0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2e,0x78,
    0x2c,0x20,0x5f,0x31,0x31,0x34,0x20,0x2d,0x20,0x5f,0x31,0x32,0x30,0x29,0x29,0x20,
    0x2a,0x20,0x64,0x6f,0x74,0x28,0x4e,0x2c,0x20,0x5f,0x37,0x33,0x20,0x2f,0x20,0x76,
    0x65,0x63,0x33,0x28,0x73,0x71,0x72,0x74,0x28,0x5f,0x37,0x37,0x29,0x29,0x29,0x29,
    0x20,0x2a,0x20,0x28,0x28,0x31,0x2e,0x30,0x20,0x2f,0x20,0x28,0x30,0x2e,0x31,0x30,
    0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,0x39,
    0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x20,0x2b,0x20,0x5f,0x37,0x37,0x29,
    0x29,0x20,0x2d,0x20,0x28,0x31,0x2e,0x30,0x20,0x2f,0x20,0x28,0x30,0x2e,0x31,0x30,
    0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,0x39,
    0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x20,0x2b,0x20,0x5f,0x38,0x37,0x29,
    0x29,0x29,0x29,0x20,0x2a,0x20,0x50,0x69,0x78,0x65,0x6c,0x5b,0x28,0x62,0x61,0x73,
    0x65,0x20,0x2b,0x20,0x31,0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x31,0x5d,0x2e,
    0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,
    0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,
    0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x54,0x6f,
    0x53,0x72,0x67,0x62,0x28,0x69,0x6e,0x6f,0x75,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x78,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x78,0x20,0x3d,0x20,0x63,0x6c,
    0x61,0x6d,0x70,0x28,0x78,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x78,0x20,0x3c,0x3d,0x20,0x30,
    0x2e,0x30,0x30,0x30,0x33,0x31,0x33,0x30,0x38,0x30,0x30,0x30,0x33,0x32,0x35,0x32,
    0x32,0x35,0x32,0x39,0x33,0x36,0x33,0x36,0x33,0x32,0x32,0x30,0x32,0x31,0x34,0x38,
    0x34,0x33,0x37,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x31,0x32,0x2e,0x39,0x32,
    0x30,0x30,0x30,0x30,0x30,0x37,0x36,0x32,0x39,0x33,0x39,0x34,0x35,0x33,0x31,0x32,
    0x35,0x20,0x2a,0x20,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x31,0x2e,0x30,0x35,
    0x34,0x39,0x39,0x39,0x39,0x34,0x37,0x35,0x34,0x37,0x39,0x31,0x32,0x35,0x39,0x37,
    0x36,0x35,0x36,0x32,0x35,0x20,0x2a,0x20,0x70,0x6f,0x77,0x28,0x78,0x2c,0x20,0x30,
    0x2e,0x34,0x31,0x36,0x36,0x36,0x36,0x36,0x35,0x36,0x37,0x33,0x32,0x35,0x35,0x39,
    0x32,0x30,0x34,0x31,0x30,0x31,0x35,0x36,0x32,0x35,0x29,0x29,0x20,0x2d,0x20,0x30,
    0x2e,0x30,0x35,0x34,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x30,0x31,0x39,0x37,0x36,
    0x37,0x37,0x36,0x31,0x32,0x33,0x30,0x34,0x36,0x38,0x37,0x35,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x6e,0x65,
    0x61,0x72,0x54,0x6f,0x53,0x72,0x67,0x62,0x28,0x76,0x65,0x63,0x33,0x20,0x76,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x20,0x3d,0x20,0x76,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x32,0x31,0x30,0x20,0x3d,0x20,0x6c,0x69,0x6e,0x65,0x61,
    0x72,0x54,0x6f,0x53,0x72,0x67,0x62,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x31,0x20,0x3d,0x20,0x76,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x32,0x31,0x34,0x20,0x3d,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,
    0x54,0x6f,0x53,0x72,0x67,0x62,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x32,0x20,0x3d,0x20,0x76,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x32,0x31,0x39,0x20,0x3d,0x20,0x6c,0x69,0x6e,0x65,0x61,
    0x72,0x54,0x6f,0x53,0x72,0x67,0x62,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x76,0x65,0x63,
    0x33,0x28,0x5f,0x32,0x31,0x30,0x2c,0x20,0x5f,0x32,0x31,0x34,0x2c,0x20,0x5f,0x32,
    0x31,0x39,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,0x74,0x6f,0x6e,
    0x65,0x6d,0x61,0x70,0x28,0x76,0x65,0x63,0x33,0x20,0x76,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,
    0x76,0x20,0x2f,0x20,0x28,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x29,0x20,0x2b,
    0x20,0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x6c,0x69,0x6e,0x65,0x61,0x72,0x54,0x6f,0x53,0x72,0x67,0x62,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,
    0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x72,
    0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,
    0x62,0x61,0x73,0x65,0x20,0x3d,0x20,0x30,0x3b,0x20,0x62,0x61,0x73,0x65,0x20,0x3c,
    0x20,0x28,0x69,0x6e,0x74,0x28,0x50,0x69,0x78,0x65,0x6c,0x5b,0x30,0x5d,0x2e,0x78,
    0x29,0x20,0x2a,0x20,0x34,0x29,0x3b,0x20,0x62,0x61,0x73,0x65,0x20,0x2b,0x3d,0x20,
    0x34,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x76,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,
    0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x5f,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x6e,
    0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x62,0x61,0x73,0x65,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,
    0x20,0x2b,0x3d,0x20,0x65,0x76,0x61,0x6c,0x4c,0x69,0x67,0x68,0x74,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,
    0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x74,0x6f,0x6e,0x65,
    0x6d,0x61,0x70,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x2c,0x20,0x31,0x2e,
    0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
static const sg_shader_desc TestSkin_TestSkin_shader_desc_glsl330 = {
  0, /* _start_canary */
  { /*attrs*/{"position","TEXCOORD",0},{"uv","TEXCOORD",1},{"normal","TEXCOORD",2},{"tangent","TEXCOORD",3},{"indices","TEXCOORD",4},{"weights","TEXCOORD",5},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}, },
  { /* vs */
    TestSkin_vs_source_glsl330, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main", /* entry */
    { /* uniform blocks */
      {
        3072, /* size */
        { /* uniforms */{"Bones",SG_UNIFORMTYPE_FLOAT4,192},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        96, /* size */
        { /* uniforms */{"VertexUniform",SG_UNIFORMTYPE_FLOAT4,6},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  { /* fs */
    TestSkin_fs_source_glsl330, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main", /* entry */
    { /* uniform blocks */
      {
        1040, /* size */
        { /* uniforms */{"Pixel",SG_UNIFORMTYPE_FLOAT4,65},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {"shadowGrid",SG_IMAGETYPE_ARRAY},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  "TestSkin_TestSkin_shader", /* label */
  0, /* _end_canary */
};
#endif /* SOKOL_GLCORE33 */
#if defined(SOKOL_GLES3)
/*
    #version 300 es
    
    uniform vec4 Bones[192];
    uniform vec4 VertexUniform[6];
    layout(location = 4) in vec4 indices;
    layout(location = 5) in vec4 weights;
    layout(location = 0) in vec3 position;
    layout(location = 2) in vec3 normal;
    out vec3 v_position;
    out vec3 v_normal;
    out vec3 v_color;
    out vec2 v_uv;
    layout(location = 1) in vec2 uv;
    layout(location = 3) in vec4 tangent;
    
    void main()
    {
        ivec4 _18 = ivec4(indices * 3.0);
        int _31 = _18.x;
        int _63 = _18.y;
        int _94 = _18.z;
        int _125 = _18.w;
        vec4 _133 = (((Bones[_31 * 1 + 0] * weights.x) + (Bones[_63 * 1 + 0] * weights.y)) + (Bones[_94 * 1 + 0] * weights.z)) + (Bones[_125 * 1 + 0] * weights.w);
        vec4 _143 = (((Bones[(_31 + 1) * 1 + 0] * weights.x) + (Bones[(_63 + 1) * 1 + 0] * weights.y)) + (Bones[(_94 + 1) * 1 + 0] * weights.z)) + (Bones[(_125 + 1) * 1 + 0] * weights.w);
        vec4 _153 = (((Bones[(_31 + 2) * 1 + 0] * weights.x) + (Bones[(_63 + 2) * 1 + 0] * weights.y)) + (Bones[(_94 + 2) * 1 + 0] * weights.z)) + (Bones[(_125 + 2) * 1 + 0] * weights.w);
        vec4 _165 = vec4(position, 1.0);
        float _166 = dot(_133, _165);
        float _173 = dot(_143, _165);
        float _180 = dot(_153, _165);
        vec4 _190 = vec4(normal, 0.0);
        gl_Position = mat4(VertexUniform[2], VertexUniform[3], VertexUniform[4], VertexUniform[5]) * vec4(_166, _173, _180, 1.0);
        v_position = vec3(_166, _173, _180);
        v_normal = normalize(vec3(dot(_133, _190), dot(_143, _190), dot(_153, _190)));
        v_color = VertexUniform[0].xyz;
        v_uv = (uv * VertexUniform[1].xy) + VertexUniform[1].zw;
    }
    
*/
static const char TestSkin_vs_source_glsl300es[1560] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x42,0x6f,
    0x6e,0x65,0x73,0x5b,0x31,0x39,0x32,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,
    0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x55,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x5b,0x36,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x34,0x20,0x69,0x6e,0x64,0x69,0x63,0x65,0x73,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x35,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x77,0x65,0x69,0x67,
    0x68,0x74,0x73,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,
    0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,
    0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,
    0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,
    0x33,0x20,0x76,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,
    0x65,0x63,0x32,0x20,0x76,0x5f,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,
    0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x3b,
    0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x38,0x20,0x3d,0x20,
    0x69,0x76,0x65,0x63,0x34,0x28,0x69,0x6e,0x64,0x69,0x63,0x65,0x73,0x20,0x2a,0x20,
    0x33,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x33,
    0x31,0x20,0x3d,0x20,0x5f,0x31,0x38,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x6e,0x74,0x20,0x5f,0x36,0x33,0x20,0x3d,0x20,0x5f,0x31,0x38,0x2e,0x79,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x39,0x34,0x20,0x3d,0x20,0x5f,0x31,
    0x38,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x32,
    0x35,0x20,0x3d,0x20,0x5f,0x31,0x38,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x34,0x20,0x5f,0x31,0x33,0x33,0x20,0x3d,0x20,0x28,0x28,0x28,0x42,0x6f,
    0x6e,0x65,0x73,0x5b,0x5f,0x33,0x31,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,
    0x20,0x2a,0x20,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x78,0x29,0x20,0x2b,0x20,
    0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x36,0x33,0x20,0x2a,0x20,0x31,0x20,0x2b,
    0x20,0x30,0x5d,0x20,0x2a,0x20,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x79,0x29,
    0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x39,0x34,0x20,0x2a,
    0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x77,0x65,0x69,0x67,0x68,0x74,
    0x73,0x2e,0x7a,0x29,0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x5f,
    0x31,0x32,0x35,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x77,
    0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x34,0x20,0x5f,0x31,0x34,0x33,0x20,0x3d,0x20,0x28,0x28,0x28,0x42,0x6f,
    0x6e,0x65,0x73,0x5b,0x28,0x5f,0x33,0x31,0x20,0x2b,0x20,0x31,0x29,0x20,0x2a,0x20,
    0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x77,0x65,0x69,0x67,0x68,0x74,0x73,
    0x2e,0x78,0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,0x5f,0x36,
    0x33,0x20,0x2b,0x20,0x31,0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,
    0x2a,0x20,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x79,0x29,0x29,0x20,0x2b,0x20,
    0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,0x5f,0x39,0x34,0x20,0x2b,0x20,0x31,0x29,
    0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x77,0x65,0x69,0x67,
    0x68,0x74,0x73,0x2e,0x7a,0x29,0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,0x73,
    0x5b,0x28,0x5f,0x31,0x32,0x35,0x20,0x2b,0x20,0x31,0x29,0x20,0x2a,0x20,0x31,0x20,
    0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x77,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x35,0x33,
    0x20,0x3d,0x20,0x28,0x28,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,0x5f,0x33,0x31,
    0x20,0x2b,0x20,0x32,0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,
    0x20,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x78,0x29,0x20,0x2b,0x20,0x28,0x42,
    0x6f,0x6e,0x65,0x73,0x5b,0x28,0x5f,0x36,0x33,0x20,0x2b,0x20,0x32,0x29,0x20,0x2a,
    0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x77,0x65,0x69,0x67,0x68,0x74,
    0x73,0x2e,0x79,0x29,0x29,0x20,0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,
    0x5f,0x39,0x34,0x20,0x2b,0x20,0x32,0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,
    0x5d,0x20,0x2a,0x20,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x7a,0x29,0x29,0x20,
    0x2b,0x20,0x28,0x42,0x6f,0x6e,0x65,0x73,0x5b,0x28,0x5f,0x31,0x32,0x35,0x20,0x2b,
    0x20,0x32,0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x20,0x2a,0x20,0x77,
    0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x34,0x20,0x5f,0x31,0x36,0x35,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x36,0x36,0x20,0x3d,
    0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x33,0x33,0x2c,0x20,0x5f,0x31,0x36,0x35,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x37,0x33,
    0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x34,0x33,0x2c,0x20,0x5f,0x31,0x36,
    0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,
    0x38,0x30,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x35,0x33,0x2c,0x20,0x5f,
    0x31,0x36,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x31,0x39,0x30,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,
    0x56,0x65,0x72,0x74,0x65,0x78,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x5b,0x32,0x5d,
    0x2c,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x5b,
    0x33,0x5d,0x2c,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x55,0x6e,0x69,0x66,0x6f,0x72,
    0x6d,0x5b,0x34,0x5d,0x2c,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x55,0x6e,0x69,0x66,
    0x6f,0x72,0x6d,0x5b,0x35,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,
    0x31,0x36,0x36,0x2c,0x20,0x5f,0x31,0x37,0x33,0x2c,0x20,0x5f,0x31,0x38,0x30,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x31,0x36,
    0x36,0x2c,0x20,0x5f,0x31,0x37,0x33,0x2c,0x20,0x5f,0x31,0x38,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x65,0x63,0x33,0x28,0x64,0x6f,
    0x74,0x28,0x5f,0x31,0x33,0x33,0x2c,0x20,0x5f,0x31,0x39,0x30,0x29,0x2c,0x20,0x64,
    0x6f,0x74,0x28,0x5f,0x31,0x34,0x33,0x2c,0x20,0x5f,0x31,0x39,0x30,0x29,0x2c,0x20,
    0x64,0x6f,0x74,0x28,0x5f,0x31,0x35,0x33,0x2c,0x20,0x5f,0x31,0x39,0x30,0x29,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x5b,0x30,
    0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x75,0x76,0x20,
    0x3d,0x20,0x28,0x75,0x76,0x20,0x2a,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x55,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x29,0x20,0x2b,0x20,0x56,
    0x65,0x72,0x74,0x65,0x78,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x5b,0x31,0x5d,0x2e,
    0x7a,0x77,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    uniform highp vec4 Pixel[65];
    uniform highp sampler2DArray shadowGrid;
    
    in highp vec3 v_position;
    in highp vec3 v_normal;
    layout(location = 0) out highp vec4 o_color;
    in highp vec3 v_color;
    in highp vec2 v_uv;
    
    highp vec3 evalLight(highp vec3 P, highp vec3 N, int base)
    {
        highp vec3 _73 = Pixel[base * 1 + 1].xyz - P;
        highp float _77 = dot(_73, _73);
        highp float _87 = Pixel[base * 1 + 1].w * Pixel[base * 1 + 1].w;
        highp vec3 result;
        if (_77 < _87)
        {
            highp vec3 _108 = (_73 * Pixel[(base + 2) * 1 + 1].xyz) + Pixel[(base + 3) * 1 + 1].xyz;
            highp float _114 = _108.y * 8.0;
            highp float _120 = clamp(floor(_114), 0.0, 7.0);
            highp float _140 = _108.x;
            result = ((vec3(mix(textureLod(shadowGrid, vec3(_140, _108.z, _120), 0.0).x, textureLod(shadowGrid, vec3(_140, _108.z, min(_120 + 1.0, 7.0)), 0.0).x, _114 - _120)) * dot(N, _73 / vec3(sqrt(_77)))) * ((1.0 / (0.100000001490116119384765625 + _77)) - (1.0 / (0.100000001490116119384765625 + _87)))) * Pixel[(base + 1) * 1 + 1].xyz;
        }
        else
        {
            result = vec3(0.0);
        }
        return result;
    }
    
    highp float linearToSrgb(inout highp float x)
    {
        x = clamp(x, 0.0, 1.0);
        if (x <= 0.00031308000325225293636322021484375)
        {
            return 12.9200000762939453125 * x;
        }
        else
        {
            return (1.05499994754791259765625 * pow(x, 0.4166666567325592041015625)) - 0.054999999701976776123046875;
        }
    }
    
    highp vec3 linearToSrgb(highp vec3 v)
    {
        highp float param = v.x;
        highp float _210 = linearToSrgb(param);
        highp float param_1 = v.y;
        highp float _214 = linearToSrgb(param_1);
        highp float param_2 = v.z;
        highp float _219 = linearToSrgb(param_2);
        return vec3(_210, _214, _219);
    }
    
    highp vec3 tonemap(highp vec3 v)
    {
        highp vec3 param = v / (vec3(1.0) + v);
        return linearToSrgb(param);
    }
    
    void main()
    {
        highp vec3 result = vec3(0.0);
        for (int base = 0; base < (int(Pixel[0].x) * 4); base += 4)
        {
            highp vec3 param = v_position;
            highp vec3 param_1 = normalize(v_normal);
            int param_2 = base;
            result += evalLight(param, param_1, param_2);
        }
        highp vec3 param_3 = result;
        o_color = vec4(tonemap(param_3), 1.0);
    }
    
*/
static const char TestSkin_fs_source_glsl300es[2299] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x50,0x69,0x78,0x65,0x6c,0x5b,0x36,0x35,0x5d,0x3b,0x0a,0x75,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x32,0x44,0x41,0x72,0x72,0x61,0x79,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,
    0x47,0x72,0x69,0x64,0x3b,0x0a,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,
    0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,
    0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x6f,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x76,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x69,0x6e,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x5f,0x75,0x76,0x3b,
    0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x65,0x76,0x61,
    0x6c,0x4c,0x69,0x67,0x68,0x74,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x50,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x4e,0x2c,0x20,0x69,0x6e,0x74,0x20,0x62,0x61,0x73,0x65,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x37,
    0x33,0x20,0x3d,0x20,0x50,0x69,0x78,0x65,0x6c,0x5b,0x62,0x61,0x73,0x65,0x20,0x2a,
    0x20,0x31,0x20,0x2b,0x20,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2d,0x20,0x50,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x37,0x37,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,0x37,0x33,0x2c,0x20,
    0x5f,0x37,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,0x37,0x20,0x3d,0x20,0x50,0x69,0x78,0x65,
    0x6c,0x5b,0x62,0x61,0x73,0x65,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x31,0x5d,0x2e,
    0x77,0x20,0x2a,0x20,0x50,0x69,0x78,0x65,0x6c,0x5b,0x62,0x61,0x73,0x65,0x20,0x2a,
    0x20,0x31,0x20,0x2b,0x20,0x31,0x5d,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x37,0x37,0x20,0x3c,0x20,
    0x5f,0x38,0x37,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,
    0x30,0x38,0x20,0x3d,0x20,0x28,0x5f,0x37,0x33,0x20,0x2a,0x20,0x50,0x69,0x78,0x65,
    0x6c,0x5b,0x28,0x62,0x61,0x73,0x65,0x20,0x2b,0x20,0x32,0x29,0x20,0x2a,0x20,0x31,
    0x20,0x2b,0x20,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2b,0x20,0x50,0x69,0x78,
    0x65,0x6c,0x5b,0x28,0x62,0x61,0x73,0x65,0x20,0x2b,0x20,0x33,0x29,0x20,0x2a,0x20,
    0x31,0x20,0x2b,0x20,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x31,0x31,0x34,0x20,0x3d,0x20,0x5f,0x31,0x30,0x38,0x2e,0x79,0x20,0x2a,0x20,
    0x38,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x32,0x30,0x20,0x3d,0x20,
    0x63,0x6c,0x61,0x6d,0x70,0x28,0x66,0x6c,0x6f,0x6f,0x72,0x28,0x5f,0x31,0x31,0x34,
    0x29,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x37,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x31,0x34,0x30,0x20,0x3d,0x20,0x5f,0x31,0x30,0x38,0x2e,0x78,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,
    0x3d,0x20,0x28,0x28,0x76,0x65,0x63,0x33,0x28,0x6d,0x69,0x78,0x28,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x4c,0x6f,0x64,0x28,0x73,0x68,0x61,0x64,0x6f,0x77,0x47,0x72,
    0x69,0x64,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x31,0x34,0x30,0x2c,0x20,0x5f,
    0x31,0x30,0x38,0x2e,0x7a,0x2c,0x20,0x5f,0x31,0x32,0x30,0x29,0x2c,0x20,0x30,0x2e,
    0x30,0x29,0x2e,0x78,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x4c,0x6f,0x64,
    0x28,0x73,0x68,0x61,0x64,0x6f,0x77,0x47,0x72,0x69,0x64,0x2c,0x20,0x76,0x65,0x63,
    0x33,0x28,0x5f,0x31,0x34,0x30,0x2c,0x20,0x5f,0x31,0x30,0x38,0x2e,0x7a,0x2c,0x20,
    0x6d,0x69,0x6e,0x28,0x5f,0x31,0x32,0x30,0x20,0x2b,0x20,0x31,0x2e,0x30,0x2c,0x20,
    0x37,0x2e,0x30,0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2e,0x78,0x2c,0x20,0x5f,
    0x31,0x31,0x34,0x20,0x2d,0x20,0x5f,0x31,0x32,0x30,0x29,0x29,0x20,0x2a,0x20,0x64,
    0x6f,0x74,0x28,0x4e,0x2c,0x20,0x5f,0x37,0x33,0x20,0x2f,0x20,0x76,0x65,0x63,0x33,
    0x28,0x73,0x71,0x72,0x74,0x28,0x5f,0x37,0x37,0x29,0x29,0x29,0x29,0x20,0x2a,0x20,
    0x28,0x28,0x31,0x2e,0x30,0x20,0x2f,0x20,0x28,0x30,0x2e,0x31,0x30,0x30,0x30,0x30,
    0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,0x39,0x33,0x38,0x34,
    0x37,0x36,0x35,0x36,0x32,0x35,0x20,0x2b,0x20,0x5f,0x37,0x37,0x29,0x29,0x20,0x2d,
    0x20,0x28,0x31,0x2e,0x30,0x20,0x2f,0x20,0x28,0x30,0x2e,0x31,0x30,0x30,0x30,0x30,
    0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,0x39,0x33,0x38,0x34,
    0x37,0x36,0x35,0x36,0x32,0x35,0x20,0x2b,0x20,0x5f,0x38,0x37,0x29,0x29,0x29,0x29,
    0x20,0x2a,0x20,0x50,0x69,0x78,0x65,0x6c,0x5b,0x28,0x62,0x61,0x73,0x65,0x20,0x2b,
    0x20,0x31,0x29,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x31,0x5d,0x2e,0x78,0x79,0x7a,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,
    0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6c,0x69,0x6e,0x65,0x61,
    0x72,0x54,0x6f,0x53,0x72,0x67,0x62,0x28,0x69,0x6e,0x6f,0x75,0x74,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x78,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x78,0x20,0x3d,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x78,0x2c,0x20,
    0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x78,0x20,0x3c,0x3d,0x20,0x30,0x2e,0x30,0x30,0x30,0x33,0x31,0x33,
    0x30,0x38,0x30,0x30,0x30,0x33,0x32,0x35,0x32,0x32,0x35,0x32,0x39,0x33,0x36,0x33,
    0x36,0x33,0x32,0x32,0x30,0x32,0x31,0x34,0x38,0x34,0x33,0x37,0x35,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x31,0x32,0x2e,0x39,0x32,0x30,0x30,0x30,0x30,0x30,0x37,0x36,
    0x32,0x39,0x33,0x39,0x34,0x35,0x33,0x31,0x32,0x35,0x20,0x2a,0x20,0x78,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x28,0x31,0x2e,0x30,0x35,0x34,0x39,0x39,0x39,0x39,0x34,0x37,
    0x35,0x34,0x37,0x39,0x31,0x32,0x35,0x39,0x37,0x36,0x35,0x36,0x32,0x35,0x20,0x2a,
    0x20,0x70,0x6f,0x77,0x28,0x78,0x2c,0x20,0x30,0x2e,0x34,0x31,0x36,0x36,0x36,0x36,
    0x36,0x35,0x36,0x37,0x33,0x32,0x35,0x35,0x39,0x32,0x30,0x34,0x31,0x30,0x31,0x35,
    0x36,0x32,0x35,0x29,0x29,0x20,0x2d,0x20,0x30,0x2e,0x30,0x35,0x34,0x39,0x39,0x39,
    0x39,0x39,0x39,0x37,0x30,0x31,0x39,0x37,0x36,0x37,0x37,0x36,0x31,0x32,0x33,0x30,
    0x34,0x36,0x38,0x37,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x7d,0x0a,0x0a,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x6e,0x65,0x61,
    0x72,0x54,0x6f,0x53,0x72,0x67,0x62,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x76,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,
    0x76,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x31,0x30,0x20,0x3d,0x20,0x6c,0x69,0x6e,0x65,
    0x61,0x72,0x54,0x6f,0x53,0x72,0x67,0x62,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x76,0x2e,0x79,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x32,0x31,0x34,0x20,0x3d,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x54,0x6f,0x53,
    0x72,0x67,0x62,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x76,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x31,
    0x39,0x20,0x3d,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x54,0x6f,0x53,0x72,0x67,0x62,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x32,0x31,0x30,0x2c,
    0x20,0x5f,0x32,0x31,0x34,0x2c,0x20,0x5f,0x32,0x31,0x39,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x74,0x6f,0x6e,0x65,
    0x6d,0x61,0x70,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x76,0x20,0x2f,0x20,0x28,
    0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x29,0x20,0x2b,0x20,0x76,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6c,0x69,0x6e,0x65,0x61,
    0x72,0x54,0x6f,0x53,0x72,0x67,0x62,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,
    0x20,0x62,0x61,0x73,0x65,0x20,0x3d,0x20,0x30,0x3b,0x20,0x62,0x61,0x73,0x65,0x20,
    0x3c,0x20,0x28,0x69,0x6e,0x74,0x28,0x50,0x69,0x78,0x65,0x6c,0x5b,0x30,0x5d,0x2e,
    0x78,0x29,0x20,0x2a,0x20,0x34,0x29,0x3b,0x20,0x62,0x61,0x73,0x65,0x20,0x2b,0x3d,
    0x20,0x34,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x20,0x3d,0x20,0x76,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x62,0x61,0x73,0x65,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x2b,0x3d,
    0x20,0x65,0x76,0x61,0x6c,0x4c,0x69,0x67,0x68,0x74,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x33,0x20,0x3d,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6f,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x74,
    0x6f,0x6e,0x65,0x6d,0x61,0x70,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
static const sg_shader_desc TestSkin_TestSkin_shader_desc_glsl300es = {
  0, /* _start_canary */
  { /*attrs*/{"position","TEXCOORD",0},{"uv","TEXCOORD",1},{"normal","TEXCOORD",2},{"tangent","TEXCOORD",3},{"indices","TEXCOORD",4},{"weights","TEXCOORD",5},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}, },
  { /* vs */
    TestSkin_vs_source_glsl300es, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main", /* entry */
    { /* uniform blocks */
      {
        3072, /* size */
        { /* uniforms */{"Bones",SG_UNIFORMTYPE_FLOAT4,192},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        96, /* size */
        { /* uniforms */{"VertexUniform",SG_UNIFORMTYPE_FLOAT4,6},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  { /* fs */
    TestSkin_fs_source_glsl300es, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main", /* entry */
    { /* uniform blocks */
      {
        1040, /* size */
        { /* uniforms */{"Pixel",SG_UNIFORMTYPE_FLOAT4,65},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {"shadowGrid",SG_IMAGETYPE_ARRAY},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  "TestSkin_TestSkin_shader", /* label */
  0, /* _end_canary */
};
#endif /* SOKOL_GLES3 */
#if defined(SOKOL_D3D11)
/*
    cbuffer Bones : register(b0)
    {
        float4 _28_bones[192] : packoffset(c0);
    };
    
    cbuffer VertexUniform : register(b1)
    {
        float3 _217_color : packoffset(c0);
        float4 _217_texScaleOffset : packoffset(c1);
        row_major float4x4 _217_viewProj : packoffset(c2);
    };
    
    
    static float4 gl_Position;
    static uint4 indices;
    static float4 weights;
    static float3 position;
    static float3 normal;
    static float3 v_position;
    static float3 v_normal;
    static float3 v_color;
    static float2 v_uv;
    static float2 uv;
    static float4 tangent;
    
    struct SPIRV_Cross_Input
    {
        float3 position : TEXCOORD0;
        float2 uv : TEXCOORD1;
        float3 normal : TEXCOORD2;
        float4 tangent : TEXCOORD3;
        uint4 indices : TEXCOORD4;
        float4 weights : TEXCOORD5;
    };
    
    struct SPIRV_Cross_Output
    {
        float3 v_position : TEXCOORD0;
        float3 v_normal : TEXCOORD1;
        float3 v_color : TEXCOORD2;
        float2 v_uv : TEXCOORD3;
        float4 gl_Position : SV_Position;
    };
    
    #line 41 ""
    void vert_main()
    {
    #line 41 ""
        int4 _19 = int4(indices) * int4(3, 3, 3, 3);
        int _33 = _19.x;
        int _66 = _19.y;
        int _97 = _19.z;
        int _128 = _19.w;
        float4 _136 = (((_28_bones[_33] * weights.x) + (_28_bones[_66] * weights.y)) + (_28_bones[_97] * weights.z)) + (_28_bones[_128] * weights.w);
        float4 _146 = (((_28_bones[_33 + 1] * weights.x) + (_28_bones[_66 + 1] * weights.y)) + (_28_bones[_97 + 1] * weights.z)) + (_28_bones[_128 + 1] * weights.w);
        float4 _156 = (((_28_bones[_33 + 2] * weights.x) + (_28_bones[_66 + 2] * weights.y)) + (_28_bones[_97 + 2] * weights.z)) + (_28_bones[_128 + 2] * weights.w);
        float4 _168 = float4(position, 1.0f);
        float _169 = dot(_136, _168);
        float _176 = dot(_146, _168);
        float _183 = dot(_156, _168);
        float4 _193 = float4(normal, 0.0f);
    #line 66 ""
        gl_Position = mul(float4(_169, _176, _183, 1.0f), _217_viewProj);
        v_position = float3(_169, _176, _183);
        v_normal = normalize(float3(dot(_136, _193), dot(_146, _193), dot(_156, _193)));
    #line 69 ""
        v_color = _217_color;
    #line 70 ""
        v_uv = (uv * _217_texScaleOffset.xy) + _217_texScaleOffset.zw;
    }
    
    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        indices = stage_input.indices;
        weights = stage_input.weights;
        position = stage_input.position;
        normal = stage_input.normal;
        uv = stage_input.uv;
        tangent = stage_input.tangent;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.v_position = v_position;
        stage_output.v_normal = v_normal;
        stage_output.v_color = v_color;
        stage_output.v_uv = v_uv;
        return stage_output;
    }
*/
static const uint8_t TestSkin_vs_bytecode_hlsl5[2540] = {
    0x44,0x58,0x42,0x43,0xe9,0x66,0xa8,0x8b,0xa3,0x50,0xc3,0x70,0xbb,0x11,0xa0,0xf6,
    0xcd,0xe6,0x91,0x66,0x01,0x00,0x00,0x00,0xec,0x09,0x00,0x00,0x05,0x00,0x00,0x00,
    0x34,0x00,0x00,0x00,0xa8,0x02,0x00,0x00,0x54,0x03,0x00,0x00,0xf4,0x03,0x00,0x00,
    0x50,0x09,0x00,0x00,0x52,0x44,0x45,0x46,0x6c,0x02,0x00,0x00,0x02,0x00,0x00,0x00,
    0x90,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x3c,0x00,0x00,0x00,0x00,0x05,0xfe,0xff,
    0x10,0x81,0x00,0x00,0x44,0x02,0x00,0x00,0x52,0x44,0x31,0x31,0x3c,0x00,0x00,0x00,
    0x18,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x28,0x00,0x00,0x00,0x24,0x00,0x00,0x00,
    0x0c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x82,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x42,0x6f,0x6e,0x65,0x73,0x00,0x56,0x65,
    0x72,0x74,0x65,0x78,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x00,0x7c,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0xc0,0x00,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x82,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x20,0x01,0x00,0x00,
    0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xe8,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x0c,0x00,0x00,0x02,0x00,0x00,0x00,0xfc,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0x5f,0x32,0x38,0x5f,0x62,0x6f,0x6e,0x65,0x73,0x00,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x00,0xab,0xab,0xab,0x01,0x00,0x03,0x00,0x01,0x00,0x04,0x00,
    0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf2,0x00,0x00,0x00,0x98,0x01,0x00,0x00,
    0x00,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0xac,0x01,0x00,0x00,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0xd0,0x01,0x00,0x00,0x10,0x00,0x00,0x00,0x10,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0xe4,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x08,0x02,0x00,0x00,
    0x20,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x20,0x02,0x00,0x00,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0x5f,0x32,0x31,0x37,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x00,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x00,0xab,0xab,0x01,0x00,0x03,0x00,0x01,0x00,0x03,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xa3,0x01,0x00,0x00,0x5f,0x32,0x31,0x37,
    0x5f,0x74,0x65,0x78,0x53,0x63,0x61,0x6c,0x65,0x4f,0x66,0x66,0x73,0x65,0x74,0x00,
    0x01,0x00,0x03,0x00,0x01,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0xf2,0x00,0x00,0x00,0x5f,0x32,0x31,0x37,0x5f,0x76,0x69,0x65,0x77,0x50,0x72,0x6f,
    0x6a,0x00,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x00,0xab,0x02,0x00,0x03,0x00,
    0x04,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x16,0x02,0x00,0x00,
    0x4d,0x69,0x63,0x72,0x6f,0x73,0x6f,0x66,0x74,0x20,0x28,0x52,0x29,0x20,0x48,0x4c,
    0x53,0x4c,0x20,0x53,0x68,0x61,0x64,0x65,0x72,0x20,0x43,0x6f,0x6d,0x70,0x69,0x6c,
    0x65,0x72,0x20,0x31,0x30,0x2e,0x31,0x00,0x49,0x53,0x47,0x4e,0xa4,0x00,0x00,0x00,
    0x06,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x98,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x07,0x00,0x00,
    0x98,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x03,0x03,0x00,0x00,0x98,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x07,0x07,0x00,0x00,
    0x98,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0x98,0x00,0x00,0x00,0x04,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x0f,0x0f,0x00,0x00,
    0x98,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x05,0x00,0x00,0x00,0x0f,0x0f,0x00,0x00,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,
    0x00,0xab,0xab,0xab,0x4f,0x53,0x47,0x4e,0x98,0x00,0x00,0x00,0x05,0x00,0x00,0x00,
    0x08,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x08,0x00,0x00,0x80,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x07,0x08,0x00,0x00,0x80,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x07,0x08,0x00,0x00,0x80,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x03,0x0c,0x00,0x00,0x89,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0x54,0x45,0x58,0x43,
    0x4f,0x4f,0x52,0x44,0x00,0x53,0x56,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x00,0xab,0xab,0xab,0x53,0x48,0x45,0x58,0x54,0x05,0x00,0x00,0x50,0x00,0x01,0x00,
    0x55,0x01,0x00,0x00,0x6a,0x08,0x00,0x01,0x59,0x08,0x00,0x04,0x46,0x8e,0x20,0x00,
    0x00,0x00,0x00,0x00,0xc0,0x00,0x00,0x00,0x59,0x00,0x00,0x04,0x46,0x8e,0x20,0x00,
    0x01,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x5f,0x00,0x00,0x03,0x72,0x10,0x10,0x00,
    0x00,0x00,0x00,0x00,0x5f,0x00,0x00,0x03,0x32,0x10,0x10,0x00,0x01,0x00,0x00,0x00,
    0x5f,0x00,0x00,0x03,0x72,0x10,0x10,0x00,0x02,0x00,0x00,0x00,0x5f,0x00,0x00,0x03,
    0xf2,0x10,0x10,0x00,0x04,0x00,0x00,0x00,0x5f,0x00,0x00,0x03,0xf2,0x10,0x10,0x00,
    0x05,0x00,0x00,0x00,0x65,0x00,0x00,0x03,0x72,0x20,0x10,0x00,0x00,0x00,0x00,0x00,
    0x65,0x00,0x00,0x03,0x72,0x20,0x10,0x00,0x01,0x00,0x00,0x00,0x65,0x00,0x00,0x03,
    0x72,0x20,0x10,0x00,0x02,0x00,0x00,0x00,0x65,0x00,0x00,0x03,0x32,0x20,0x10,0x00,
    0x03,0x00,0x00,0x00,0x67,0x00,0x00,0x04,0xf2,0x20,0x10,0x00,0x04,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x68,0x00,0x00,0x02,0x05,0x00,0x00,0x00,0x26,0x00,0x00,0x0b,
    0x00,0xd0,0x00,0x00,0xf2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x1e,0x10,0x00,
    0x04,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x38,0x00,0x00,0x09,0xf2,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x56,0x15,0x10,0x00,0x05,0x00,0x00,0x00,0x46,0x8e,0x20,0x04,
    0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x0b,
    0xf2,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x8e,0x20,0x04,0x00,0x00,0x00,0x00,
    0x0a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x06,0x10,0x10,0x00,0x05,0x00,0x00,0x00,
    0x46,0x0e,0x10,0x00,0x01,0x00,0x00,0x00,0x32,0x00,0x00,0x0b,0xf2,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x46,0x8e,0x20,0x04,0x00,0x00,0x00,0x00,0x2a,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0xa6,0x1a,0x10,0x00,0x05,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,
    0x01,0x00,0x00,0x00,0x32,0x00,0x00,0x0b,0xf2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x04,0x00,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0xf6,0x1f,0x10,0x00,0x05,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x01,0x00,0x00,0x00,
    0x36,0x00,0x00,0x05,0x72,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x12,0x10,0x00,
    0x00,0x00,0x00,0x00,0x36,0x00,0x00,0x05,0x82,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x00,0x00,0x80,0x3f,0x11,0x00,0x00,0x07,0x12,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,
    0x01,0x00,0x00,0x00,0x10,0x00,0x00,0x07,0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x12,0x10,0x00,0x02,0x00,0x00,0x00,
    0x23,0x00,0x00,0x0f,0xf2,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x46,0x1e,0x10,0x00,
    0x04,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x01,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x38,0x00,0x00,0x09,
    0xf2,0x00,0x10,0x00,0x04,0x00,0x00,0x00,0x56,0x15,0x10,0x00,0x05,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x04,0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,
    0x32,0x00,0x00,0x0b,0xf2,0x00,0x10,0x00,0x04,0x00,0x00,0x00,0x46,0x8e,0x20,0x04,
    0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x06,0x10,0x10,0x00,
    0x05,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x04,0x00,0x00,0x00,0x32,0x00,0x00,0x0b,
    0xf2,0x00,0x10,0x00,0x04,0x00,0x00,0x00,0x46,0x8e,0x20,0x04,0x00,0x00,0x00,0x00,
    0x2a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0xa6,0x1a,0x10,0x00,0x05,0x00,0x00,0x00,
    0x46,0x0e,0x10,0x00,0x04,0x00,0x00,0x00,0x32,0x00,0x00,0x0b,0xf2,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0x46,0x8e,0x20,0x04,0x00,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0xf6,0x1f,0x10,0x00,0x05,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,
    0x04,0x00,0x00,0x00,0x11,0x00,0x00,0x07,0x22,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x46,0x0e,0x10,0x00,0x03,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x01,0x00,0x00,0x00,
    0x10,0x00,0x00,0x07,0x22,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x03,0x00,0x00,0x00,0x46,0x12,0x10,0x00,0x02,0x00,0x00,0x00,0x23,0x00,0x00,0x0f,
    0xf2,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x46,0x1e,0x10,0x00,0x04,0x00,0x00,0x00,
    0x02,0x40,0x00,0x00,0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x02,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x38,0x00,0x00,0x09,0xf2,0x00,0x10,0x00,
    0x04,0x00,0x00,0x00,0x56,0x15,0x10,0x00,0x05,0x00,0x00,0x00,0x46,0x8e,0x20,0x04,
    0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x32,0x00,0x00,0x0b,
    0xf2,0x00,0x10,0x00,0x04,0x00,0x00,0x00,0x46,0x8e,0x20,0x04,0x00,0x00,0x00,0x00,
    0x0a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x06,0x10,0x10,0x00,0x05,0x00,0x00,0x00,
    0x46,0x0e,0x10,0x00,0x04,0x00,0x00,0x00,0x32,0x00,0x00,0x0b,0xf2,0x00,0x10,0x00,
    0x04,0x00,0x00,0x00,0x46,0x8e,0x20,0x04,0x00,0x00,0x00,0x00,0x2a,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0xa6,0x1a,0x10,0x00,0x05,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,
    0x04,0x00,0x00,0x00,0x32,0x00,0x00,0x0b,0xf2,0x00,0x10,0x00,0x03,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x04,0x00,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,
    0xf6,0x1f,0x10,0x00,0x05,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x04,0x00,0x00,0x00,
    0x11,0x00,0x00,0x07,0x42,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,
    0x03,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x01,0x00,0x00,0x00,0x10,0x00,0x00,0x07,
    0x42,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x03,0x00,0x00,0x00,
    0x46,0x12,0x10,0x00,0x02,0x00,0x00,0x00,0x36,0x00,0x00,0x05,0x72,0x20,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x02,0x00,0x00,0x00,0x38,0x00,0x00,0x08,
    0xf2,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x56,0x05,0x10,0x00,0x02,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x00,0x01,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,
    0xf2,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x06,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x00,0x01,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,
    0x01,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,0xf2,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0xa6,0x0a,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x8e,0x20,0x00,0x01,0x00,0x00,0x00,
    0x04,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x08,
    0xf2,0x20,0x10,0x00,0x04,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x01,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x00,0x01,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x10,0x00,0x00,0x07,
    0x82,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,0x44,0x00,0x00,0x05,0x82,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x07,
    0x72,0x20,0x10,0x00,0x01,0x00,0x00,0x00,0xf6,0x0f,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,0x36,0x00,0x00,0x06,0x72,0x20,0x10,0x00,
    0x02,0x00,0x00,0x00,0x46,0x82,0x20,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x32,0x00,0x00,0x0b,0x32,0x20,0x10,0x00,0x03,0x00,0x00,0x00,0x46,0x10,0x10,0x00,
    0x01,0x00,0x00,0x00,0x46,0x80,0x20,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0xe6,0x8a,0x20,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x3e,0x00,0x00,0x01,
    0x53,0x54,0x41,0x54,0x94,0x00,0x00,0x00,0x22,0x00,0x00,0x00,0x05,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x1a,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};
/*
    cbuffer Pixel : register(b0)
    {
        float _38_numLightsF : packoffset(c0);
        float4 _38_lightData[64] : packoffset(c1);
    };
    
    Texture2DArray<float4> shadowGrid : register(t0);
    SamplerState _shadowGrid_sampler : register(s0);
    
    static float3 v_position;
    static float3 v_normal;
    static float4 o_color;
    static float3 v_color;
    static float2 v_uv;
    
    struct SPIRV_Cross_Input
    {
        float3 v_position : TEXCOORD0;
        float3 v_normal : TEXCOORD1;
        float3 v_color : TEXCOORD2;
        float2 v_uv : TEXCOORD3;
    };
    
    struct SPIRV_Cross_Output
    {
        float4 o_color : SV_Target0;
    };
    
    #line 42 ""
    float3 evalLight(float3 P, float3 N, int base)
    {
    #line 42 ""
    #line 43 ""
    #line 44 ""
    #line 45 ""
        float3 _73 = _38_lightData[base].xyz - P;
        float _77 = dot(_73, _73);
        float _87 = _38_lightData[base].w * _38_lightData[base].w;
        float3 result;
        if (_77 < _87)
        {
            float3 _108 = (_73 * _38_lightData[base + 2].xyz) + _38_lightData[base + 3].xyz;
            float _114 = _108.y * 8.0f;
            float _120 = clamp(floor(_114), 0.0f, 7.0f);
    #line 68 ""
            float _140 = _108.x;
    #line 76 ""
            result = ((lerp(shadowGrid.SampleLevel(_shadowGrid_sampler, float3(_140, _108.z, _120), 0.0f).x, shadowGrid.SampleLevel(_shadowGrid_sampler, float3(_140, _108.z, min(_120 + 1.0f, 7.0f)), 0.0f).x, _114 - _120).xxx * dot(N, _73 / sqrt(_77).xxx)) * ((1.0f / (0.100000001490116119384765625f + _77)) - (1.0f / (0.100000001490116119384765625f + _87)))) * _38_lightData[base + 1].xyz;
        }
        else
        {
    #line 79 ""
            result = 0.0f.xxx;
        }
    #line 82 ""
        return result;
    }
    
    #line 89 ""
    float linearToSrgb(inout float x)
    {
    #line 89 ""
        x = clamp(x, 0.0f, 1.0f);
    #line 90 ""
        if (x <= 0.00031308000325225293636322021484375f)
        {
    #line 91 ""
            return 12.9200000762939453125f * x;
        }
        else
        {
    #line 93 ""
            return (1.05499994754791259765625f * pow(x, 0.4166666567325592041015625f)) - 0.054999999701976776123046875f;
        }
    }
    
    #line 98 ""
    float3 linearToSrgb(float3 v)
    {
    #line 98 ""
        float param = v.x;
        float _210 = linearToSrgb(param);
        float param_1 = v.y;
        float _214 = linearToSrgb(param_1);
        float param_2 = v.z;
        float _219 = linearToSrgb(param_2);
        return float3(_210, _214, _219);
    }
    
    #line 103 ""
    float3 tonemap(float3 v)
    {
    #line 103 ""
        float3 param = v / (1.0f.xxx + v);
        return linearToSrgb(param);
    }
    
    #line 109 ""
    void frag_main()
    {
    #line 109 ""
    #line 110 ""
    #line 111 ""
        float3 result = 0.0f.xxx;
    #line 112 ""
    #line 113 ""
        for (int base = 0; base < (int(_38_numLightsF) * 4); base += 4)
        {
            float3 param = v_position;
            float3 param_1 = normalize(v_normal);
            int param_2 = base;
            result += evalLight(param, param_1, param_2);
        }
    #line 123 ""
        float3 param_3 = result;
        o_color = float4(tonemap(param_3), 1.0f);
    }
    
    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        v_position = stage_input.v_position;
        v_normal = stage_input.v_normal;
        v_color = stage_input.v_color;
        v_uv = stage_input.v_uv;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.o_color = o_color;
        return stage_output;
    }
*/
static const uint8_t TestSkin_fs_bytecode_hlsl5[2640] = {
    0x44,0x58,0x42,0x43,0x82,0x01,0x90,0xa5,0xc2,0xfa,0x86,0x28,0x29,0xd0,0x01,0x86,
    0x58,0x2b,0xa4,0x0e,0x01,0x00,0x00,0x00,0x50,0x0a,0x00,0x00,0x05,0x00,0x00,0x00,
    0x34,0x00,0x00,0x00,0x08,0x02,0x00,0x00,0x84,0x02,0x00,0x00,0xb8,0x02,0x00,0x00,
    0xb4,0x09,0x00,0x00,0x52,0x44,0x45,0x46,0xcc,0x01,0x00,0x00,0x01,0x00,0x00,0x00,
    0xc4,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x3c,0x00,0x00,0x00,0x00,0x05,0xff,0xff,
    0x10,0x81,0x00,0x00,0xa4,0x01,0x00,0x00,0x52,0x44,0x31,0x31,0x3c,0x00,0x00,0x00,
    0x18,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x28,0x00,0x00,0x00,0x24,0x00,0x00,0x00,
    0x0c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x9c,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0xb0,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x05,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x0d,0x00,0x00,0x00,0xbb,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x47,
    0x72,0x69,0x64,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x00,0x73,0x68,0x61,0x64,
    0x6f,0x77,0x47,0x72,0x69,0x64,0x00,0x50,0x69,0x78,0x65,0x6c,0x00,0xab,0xab,0xab,
    0xbb,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0xdc,0x00,0x00,0x00,0x10,0x04,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2c,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
    0x04,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x44,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
    0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,
    0x68,0x01,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x02,0x00,0x00,0x00,
    0x80,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,
    0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x5f,0x33,0x38,0x5f,0x6e,0x75,0x6d,0x4c,
    0x69,0x67,0x68,0x74,0x73,0x46,0x00,0x66,0x6c,0x6f,0x61,0x74,0x00,0xab,0xab,0xab,
    0x00,0x00,0x03,0x00,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x3b,0x01,0x00,0x00,0x5f,0x33,0x38,0x5f,0x6c,0x69,0x67,0x68,0x74,0x44,0x61,0x74,
    0x61,0x00,0x66,0x6c,0x6f,0x61,0x74,0x34,0x00,0xab,0xab,0xab,0x01,0x00,0x03,0x00,
    0x01,0x00,0x04,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x76,0x01,0x00,0x00,
    0x4d,0x69,0x63,0x72,0x6f,0x73,0x6f,0x66,0x74,0x20,0x28,0x52,0x29,0x20,0x48,0x4c,
    0x53,0x4c,0x20,0x53,0x68,0x61,0x64,0x65,0x72,0x20,0x43,0x6f,0x6d,0x70,0x69,0x6c,
    0x65,0x72,0x20,0x31,0x30,0x2e,0x31,0x00,0x49,0x53,0x47,0x4e,0x74,0x00,0x00,0x00,
    0x04,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x68,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x07,0x00,0x00,
    0x68,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x07,0x07,0x00,0x00,0x68,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x07,0x00,0x00,0x00,
    0x68,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,
    0x00,0xab,0xab,0xab,0x4f,0x53,0x47,0x4e,0x2c,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x08,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0x53,0x56,0x5f,0x54,
    0x61,0x72,0x67,0x65,0x74,0x00,0xab,0xab,0x53,0x48,0x45,0x58,0xf4,0x06,0x00,0x00,
    0x50,0x00,0x00,0x00,0xbd,0x01,0x00,0x00,0x6a,0x08,0x00,0x01,0x59,0x08,0x00,0x04,
    0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x41,0x00,0x00,0x00,0x5a,0x00,0x00,0x03,
    0x00,0x60,0x10,0x00,0x00,0x00,0x00,0x00,0x58,0x40,0x00,0x04,0x00,0x70,0x10,0x00,
    0x00,0x00,0x00,0x00,0x55,0x55,0x00,0x00,0x62,0x10,0x00,0x03,0x72,0x10,0x10,0x00,
    0x00,0x00,0x00,0x00,0x62,0x10,0x00,0x03,0x72,0x10,0x10,0x00,0x01,0x00,0x00,0x00,
    0x65,0x00,0x00,0x03,0xf2,0x20,0x10,0x00,0x00,0x00,0x00,0x00,0x68,0x00,0x00,0x02,
    0x06,0x00,0x00,0x00,0x1b,0x00,0x00,0x06,0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x0a,0x80,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x29,0x00,0x00,0x07,
    0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x02,0x00,0x00,0x00,0x10,0x00,0x00,0x07,0x22,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x12,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x12,0x10,0x00,
    0x01,0x00,0x00,0x00,0x44,0x00,0x00,0x05,0x22,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x1a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x07,0xe2,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x56,0x05,0x10,0x00,0x00,0x00,0x00,0x00,0x06,0x19,0x10,0x00,
    0x01,0x00,0x00,0x00,0x36,0x00,0x00,0x08,0xf2,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x02,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x01,0x21,0x00,0x00,0x07,0x12,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x03,0x00,0x04,0x03,0x0a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x00,0x00,0x00,0x0b,0x72,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x12,0x10,0x80,
    0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x82,0x20,0x06,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x10,0x00,0x00,0x07,
    0x82,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x02,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x02,0x00,0x00,0x00,0x38,0x00,0x00,0x0d,0x12,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0x3a,0x80,0x20,0x06,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x3a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x3a,0x80,0x20,0x06,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x31,0x00,0x00,0x07,
    0x12,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x0a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x1f,0x00,0x04,0x03,0x0a,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0x1e,0x00,0x00,0x0a,0x72,0x00,0x10,0x00,0x03,0x00,0x00,0x00,
    0xf6,0x0f,0x10,0x00,0x01,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x02,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x0f,
    0x72,0x00,0x10,0x00,0x04,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x02,0x00,0x00,0x00,
    0x46,0x82,0x20,0x06,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0x46,0x82,0x20,0x06,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x1a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x38,0x00,0x00,0x07,0x12,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x04,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0x00,0x00,0x00,0x41,0x41,0x00,0x00,0x05,0x12,0x00,0x10,0x00,0x03,0x00,0x00,0x00,
    0x0a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x34,0x00,0x00,0x07,0x12,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0x00,0x00,0x00,0x00,0x33,0x00,0x00,0x07,0x82,0x00,0x10,0x00,0x04,0x00,0x00,0x00,
    0x0a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0xe0,0x40,
    0x48,0x00,0x00,0x8d,0x02,0x02,0x00,0x80,0x43,0x55,0x15,0x00,0x12,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0x86,0x03,0x10,0x00,0x04,0x00,0x00,0x00,0x46,0x7e,0x10,0x00,
    0x00,0x00,0x00,0x00,0x00,0x60,0x10,0x00,0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x22,0x00,0x10,0x00,0x03,0x00,0x00,0x00,
    0x3a,0x00,0x10,0x00,0x04,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x80,0x3f,
    0x33,0x00,0x00,0x07,0x42,0x00,0x10,0x00,0x05,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0xe0,0x40,0x36,0x00,0x00,0x05,
    0x32,0x00,0x10,0x00,0x05,0x00,0x00,0x00,0x86,0x00,0x10,0x00,0x04,0x00,0x00,0x00,
    0x48,0x00,0x00,0x8d,0x02,0x02,0x00,0x80,0x43,0x55,0x15,0x00,0x22,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x05,0x00,0x00,0x00,0x16,0x7e,0x10,0x00,
    0x00,0x00,0x00,0x00,0x00,0x60,0x10,0x00,0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,0x82,0x00,0x10,0x00,0x03,0x00,0x00,0x00,
    0x1a,0x00,0x10,0x00,0x04,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x41,
    0x3a,0x00,0x10,0x80,0x41,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x08,
    0x22,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x0a,0x00,0x10,0x80,0x41,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x32,0x00,0x00,0x09,
    0x12,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,
    0x1a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,
    0x4b,0x00,0x00,0x05,0x22,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x0e,0x00,0x00,0x07,0x72,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x02,0x00,0x00,0x00,0x56,0x05,0x10,0x00,0x03,0x00,0x00,0x00,
    0x10,0x00,0x00,0x07,0x12,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x96,0x07,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x02,0x00,0x00,0x00,0x38,0x00,0x00,0x07,
    0x12,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x0a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x22,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0xcd,0xcc,0xcc,0x3d,0x0e,0x00,0x00,0x0a,0x22,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x02,0x40,0x00,0x00,0x00,0x00,0x80,0x3f,0x00,0x00,0x80,0x3f,0x00,0x00,0x80,0x3f,
    0x00,0x00,0x80,0x3f,0x1a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x32,0x00,0x00,0x0f,
    0x42,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x3a,0x80,0x20,0x06,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x3a,0x80,0x20,0x06,
    0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0xcd,0xcc,0xcc,0x3d,0x0e,0x00,0x00,0x0a,0x42,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x80,0x3f,0x00,0x00,0x80,0x3f,
    0x00,0x00,0x80,0x3f,0x00,0x00,0x80,0x3f,0x2a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x00,0x00,0x00,0x08,0x22,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x2a,0x00,0x10,0x80,
    0x41,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x38,0x00,0x00,0x07,0x12,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x38,0x00,0x00,0x0a,
    0x72,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x06,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x46,0x82,0x20,0x06,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x2a,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0x12,0x00,0x00,0x01,0x36,0x00,0x00,0x08,0x72,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x01,0x00,0x00,0x00,0x07,
    0x72,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x01,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x02,0x00,0x00,0x00,0x1e,0x00,0x00,0x07,0x82,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0x04,0x00,0x00,0x00,0x16,0x00,0x00,0x01,0x00,0x00,0x00,0x0a,0x72,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x01,0x00,0x00,0x00,0x02,0x40,0x00,0x00,
    0x00,0x00,0x80,0x3f,0x00,0x00,0x80,0x3f,0x00,0x00,0x80,0x3f,0x00,0x00,0x00,0x00,
    0x0e,0x20,0x00,0x07,0x72,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x01,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,0x1d,0x00,0x00,0x0a,
    0x72,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0xe3,0x24,0xa4,0x39,
    0xe3,0x24,0xa4,0x39,0xe3,0x24,0xa4,0x39,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x0a,0x72,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x52,0xb8,0x4e,0x41,
    0x52,0xb8,0x4e,0x41,0x52,0xb8,0x4e,0x41,0x00,0x00,0x00,0x00,0x2f,0x00,0x00,0x05,
    0x72,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,
    0x38,0x00,0x00,0x0a,0x72,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x55,0x55,0xd5,0x3e,0x55,0x55,0xd5,0x3e,
    0x55,0x55,0xd5,0x3e,0x00,0x00,0x00,0x00,0x19,0x00,0x00,0x05,0x72,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x0f,
    0x72,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,
    0x02,0x40,0x00,0x00,0x3d,0x0a,0x87,0x3f,0x3d,0x0a,0x87,0x3f,0x3d,0x0a,0x87,0x3f,
    0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0xae,0x47,0x61,0xbd,0xae,0x47,0x61,0xbd,
    0xae,0x47,0x61,0xbd,0x00,0x00,0x00,0x00,0x37,0x00,0x00,0x09,0x72,0x20,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x02,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,0x36,0x00,0x00,0x05,
    0x82,0x20,0x10,0x00,0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x80,0x3f,
    0x3e,0x00,0x00,0x01,0x53,0x54,0x41,0x54,0x94,0x00,0x00,0x00,0x38,0x00,0x00,0x00,
    0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x25,0x00,0x00,0x00,
    0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

};
static const sg_shader_desc TestSkin_TestSkin_shader_desc_hlsl5 = {
  0, /* _start_canary */
  { /*attrs*/{"position","TEXCOORD",0},{"uv","TEXCOORD",1},{"normal","TEXCOORD",2},{"tangent","TEXCOORD",3},{"indices","TEXCOORD",4},{"weights","TEXCOORD",5},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}, },
  { /* vs */
    0, /* source */
    TestSkin_vs_bytecode_hlsl5, /* bytecode */
    2540, /* bytecode_size */
    "main", /* entry */
    { /* uniform blocks */
      {
        3072, /* size */
        { /* uniforms */{"Bones",SG_UNIFORMTYPE_FLOAT4,192},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        96, /* size */
        { /* uniforms */{"VertexUniform",SG_UNIFORMTYPE_FLOAT4,6},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  { /* fs */
    0, /* source */
    TestSkin_fs_bytecode_hlsl5, /* bytecode */
    2640, /* bytecode_size */
    "main", /* entry */
    { /* uniform blocks */
      {
        1040, /* size */
        { /* uniforms */{"Pixel",SG_UNIFORMTYPE_FLOAT4,65},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {"shadowGrid",SG_IMAGETYPE_ARRAY},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  "TestSkin_TestSkin_shader", /* label */
  0, /* _end_canary */
};
#endif /* SOKOL_D3D11 */
#if defined(SOKOL_METAL)
/*
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct Bones
    {
        float4 bones[192];
    };
    
    struct VertexUniform
    {
        float3 color;
        float4 texScaleOffset;
        float4x4 viewProj;
    };
    
    struct main0_out
    {
        float3 v_position [[user(locn0)]];
        float3 v_normal [[user(locn1)]];
        float3 v_color [[user(locn2)]];
        float2 v_uv [[user(locn3)]];
        float4 gl_Position [[position]];
    };
    
    struct main0_in
    {
        float3 position [[attribute(0)]];
        float2 uv [[attribute(1)]];
        float3 normal [[attribute(2)]];
        uint4 indices [[attribute(4)]];
        float4 weights [[attribute(5)]];
    };
    
    #line 41 ""
    vertex main0_out main0(main0_in in [[stage_in]], constant Bones& _28 [[buffer(0)]], constant VertexUniform& _217 [[buffer(1)]])
    {
        main0_out out = {};
    #line 41 ""
        int4 _19 = int4(in.indices) * int4(3);
        int _33 = _19.x;
        int _66 = _19.y;
        int _97 = _19.z;
        int _128 = _19.w;
        float4 _136 = (((_28.bones[_33] * in.weights.x) + (_28.bones[_66] * in.weights.y)) + (_28.bones[_97] * in.weights.z)) + (_28.bones[_128] * in.weights.w);
        float4 _146 = (((_28.bones[_33 + 1] * in.weights.x) + (_28.bones[_66 + 1] * in.weights.y)) + (_28.bones[_97 + 1] * in.weights.z)) + (_28.bones[_128 + 1] * in.weights.w);
        float4 _156 = (((_28.bones[_33 + 2] * in.weights.x) + (_28.bones[_66 + 2] * in.weights.y)) + (_28.bones[_97 + 2] * in.weights.z)) + (_28.bones[_128 + 2] * in.weights.w);
        float4 _168 = float4(in.position, 1.0);
        float _169 = dot(_136, _168);
        float _176 = dot(_146, _168);
        float _183 = dot(_156, _168);
        float4 _193 = float4(in.normal, 0.0);
    #line 66 ""
        out.gl_Position = _217.viewProj * float4(_169, _176, _183, 1.0);
        out.v_position = float3(_169, _176, _183);
        out.v_normal = normalize(float3(dot(_136, _193), dot(_146, _193), dot(_156, _193)));
    #line 69 ""
        out.v_color = _217.color;
    #line 70 ""
        out.v_uv = (in.uv * _217.texScaleOffset.xy) + _217.texScaleOffset.zw;
        return out;
    }
    
*/
static const char TestSkin_vs_source_metal_macos[1980] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x42,
    0x6f,0x6e,0x65,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x31,0x39,0x32,0x5d,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x55,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x74,0x65,0x78,0x53,0x63,0x61,0x6c,0x65,0x4f,0x66,
    0x66,0x73,0x65,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x78,0x34,0x20,0x76,0x69,0x65,0x77,0x50,0x72,0x6f,0x6a,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,
    0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,
    0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,
    0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,
    0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x32,0x29,
    0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x76,
    0x5f,0x75,0x76,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x33,
    0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,
    0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,
    0x20,0x75,0x76,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,
    0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,
    0x75,0x74,0x65,0x28,0x32,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,
    0x6e,0x74,0x34,0x20,0x69,0x6e,0x64,0x69,0x63,0x65,0x73,0x20,0x5b,0x5b,0x61,0x74,
    0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x34,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x77,0x65,0x69,0x67,0x68,0x74,0x73,
    0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x35,0x29,0x5d,
    0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x34,0x31,0x20,
    0x22,0x22,0x0a,0x76,0x65,0x72,0x74,0x65,0x78,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,
    0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x42,0x6f,0x6e,
    0x65,0x73,0x26,0x20,0x5f,0x32,0x38,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,
    0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,
    0x56,0x65,0x72,0x74,0x65,0x78,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x26,0x20,0x5f,
    0x32,0x31,0x37,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x31,0x29,0x5d,
    0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,
    0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x23,0x6c,0x69,
    0x6e,0x65,0x20,0x34,0x31,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,
    0x34,0x20,0x5f,0x31,0x39,0x20,0x3d,0x20,0x69,0x6e,0x74,0x34,0x28,0x69,0x6e,0x2e,
    0x69,0x6e,0x64,0x69,0x63,0x65,0x73,0x29,0x20,0x2a,0x20,0x69,0x6e,0x74,0x34,0x28,
    0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x33,0x33,0x20,
    0x3d,0x20,0x5f,0x31,0x39,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,
    0x20,0x5f,0x36,0x36,0x20,0x3d,0x20,0x5f,0x31,0x39,0x2e,0x79,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x39,0x37,0x20,0x3d,0x20,0x5f,0x31,0x39,0x2e,
    0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x32,0x38,0x20,
    0x3d,0x20,0x5f,0x31,0x39,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x5f,0x31,0x33,0x36,0x20,0x3d,0x20,0x28,0x28,0x28,0x5f,0x32,
    0x38,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x33,0x33,0x5d,0x20,0x2a,0x20,0x69,
    0x6e,0x2e,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x78,0x29,0x20,0x2b,0x20,0x28,
    0x5f,0x32,0x38,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x36,0x36,0x5d,0x20,0x2a,
    0x20,0x69,0x6e,0x2e,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x79,0x29,0x29,0x20,
    0x2b,0x20,0x28,0x5f,0x32,0x38,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x39,0x37,
    0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x7a,
    0x29,0x29,0x20,0x2b,0x20,0x28,0x5f,0x32,0x38,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,
    0x5f,0x31,0x32,0x38,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x77,0x65,0x69,0x67,0x68,
    0x74,0x73,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x5f,0x31,0x34,0x36,0x20,0x3d,0x20,0x28,0x28,0x28,0x5f,0x32,0x38,0x2e,
    0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x33,0x33,0x20,0x2b,0x20,0x31,0x5d,0x20,0x2a,
    0x20,0x69,0x6e,0x2e,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x78,0x29,0x20,0x2b,
    0x20,0x28,0x5f,0x32,0x38,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x36,0x36,0x20,
    0x2b,0x20,0x31,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x77,0x65,0x69,0x67,0x68,0x74,
    0x73,0x2e,0x79,0x29,0x29,0x20,0x2b,0x20,0x28,0x5f,0x32,0x38,0x2e,0x62,0x6f,0x6e,
    0x65,0x73,0x5b,0x5f,0x39,0x37,0x20,0x2b,0x20,0x31,0x5d,0x20,0x2a,0x20,0x69,0x6e,
    0x2e,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x7a,0x29,0x29,0x20,0x2b,0x20,0x28,
    0x5f,0x32,0x38,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x31,0x32,0x38,0x20,0x2b,
    0x20,0x31,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x77,0x65,0x69,0x67,0x68,0x74,0x73,
    0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x5f,0x31,0x35,0x36,0x20,0x3d,0x20,0x28,0x28,0x28,0x5f,0x32,0x38,0x2e,0x62,0x6f,
    0x6e,0x65,0x73,0x5b,0x5f,0x33,0x33,0x20,0x2b,0x20,0x32,0x5d,0x20,0x2a,0x20,0x69,
    0x6e,0x2e,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x78,0x29,0x20,0x2b,0x20,0x28,
    0x5f,0x32,0x38,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x36,0x36,0x20,0x2b,0x20,
    0x32,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,
    0x79,0x29,0x29,0x20,0x2b,0x20,0x28,0x5f,0x32,0x38,0x2e,0x62,0x6f,0x6e,0x65,0x73,
    0x5b,0x5f,0x39,0x37,0x20,0x2b,0x20,0x32,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x77,
    0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x7a,0x29,0x29,0x20,0x2b,0x20,0x28,0x5f,0x32,
    0x38,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x31,0x32,0x38,0x20,0x2b,0x20,0x32,
    0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x77,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x31,
    0x36,0x38,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x36,0x39,0x20,0x3d,0x20,
    0x64,0x6f,0x74,0x28,0x5f,0x31,0x33,0x36,0x2c,0x20,0x5f,0x31,0x36,0x38,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x37,0x36,0x20,
    0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x34,0x36,0x2c,0x20,0x5f,0x31,0x36,0x38,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x38,
    0x33,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x35,0x36,0x2c,0x20,0x5f,0x31,
    0x36,0x38,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x5f,0x31,0x39,0x33,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,
    0x2e,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x23,
    0x6c,0x69,0x6e,0x65,0x20,0x36,0x36,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,
    0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x5f,0x32,0x31,0x37,0x2e,0x76,0x69,0x65,0x77,0x50,0x72,0x6f,0x6a,0x20,0x2a,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x5f,0x31,0x36,0x39,0x2c,0x20,0x5f,0x31,
    0x37,0x36,0x2c,0x20,0x5f,0x31,0x38,0x33,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x5f,0x31,0x36,0x39,
    0x2c,0x20,0x5f,0x31,0x37,0x36,0x2c,0x20,0x5f,0x31,0x38,0x33,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,
    0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x28,0x64,0x6f,0x74,0x28,0x5f,0x31,0x33,0x36,0x2c,0x20,0x5f,0x31,0x39,
    0x33,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x34,0x36,0x2c,0x20,0x5f,0x31,
    0x39,0x33,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x35,0x36,0x2c,0x20,0x5f,
    0x31,0x39,0x33,0x29,0x29,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x36,0x39,
    0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x5f,0x32,0x31,0x37,0x2e,0x63,0x6f,0x6c,0x6f,0x72,
    0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x37,0x30,0x20,0x22,0x22,0x0a,0x20,0x20,
    0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,0x5f,0x75,0x76,0x20,0x3d,0x20,0x28,0x69,0x6e,
    0x2e,0x75,0x76,0x20,0x2a,0x20,0x5f,0x32,0x31,0x37,0x2e,0x74,0x65,0x78,0x53,0x63,
    0x61,0x6c,0x65,0x4f,0x66,0x66,0x73,0x65,0x74,0x2e,0x78,0x79,0x29,0x20,0x2b,0x20,
    0x5f,0x32,0x31,0x37,0x2e,0x74,0x65,0x78,0x53,0x63,0x61,0x6c,0x65,0x4f,0x66,0x66,
    0x73,0x65,0x74,0x2e,0x7a,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #pragma clang diagnostic ignored "-Wmissing-prototypes"
    
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct Pixel
    {
        float numLightsF;
        float4 lightData[64];
    };
    
    struct main0_out
    {
        float4 o_color [[color(0)]];
    };
    
    struct main0_in
    {
        float3 v_position [[user(locn0)]];
        float3 v_normal [[user(locn1)]];
    };
    
    #line 42 ""
    static inline __attribute__((always_inline))
    float3 evalLight(thread const float3& P, thread const float3& N, thread const int& base, constant Pixel& v_38, thread texture2d_array<float> shadowGrid, thread const sampler shadowGridSmplr)
    {
    #line 42 ""
    #line 43 ""
    #line 44 ""
    #line 45 ""
        float3 _73 = v_38.lightData[base].xyz - P;
        float _77 = dot(_73, _73);
        float _87 = v_38.lightData[base].w * v_38.lightData[base].w;
        float3 result;
        if (_77 < _87)
        {
            float3 _108 = (_73 * v_38.lightData[base + 2].xyz) + v_38.lightData[base + 3].xyz;
            float _114 = _108.y * 8.0;
            float _120 = fast::clamp(floor(_114), 0.0, 7.0);
    #line 68 ""
            float _140 = _108.x;
            float3 _142 = float3(_140, _108.z, _120);
            float3 _153 = float3(_140, _108.z, fast::min(_120 + 1.0, 7.0));
    #line 76 ""
            result = ((float3(mix(shadowGrid.sample(shadowGridSmplr, _142.xy, uint(round(_142.z)), level(0.0)).x, shadowGrid.sample(shadowGridSmplr, _153.xy, uint(round(_153.z)), level(0.0)).x, _114 - _120)) * dot(N, _73 / float3(sqrt(_77)))) * ((1.0 / (0.100000001490116119384765625 + _77)) - (1.0 / (0.100000001490116119384765625 + _87)))) * v_38.lightData[base + 1].xyz;
        }
        else
        {
    #line 79 ""
            result = float3(0.0);
        }
    #line 82 ""
        return result;
    }
    
    #line 89 ""
    static inline __attribute__((always_inline))
    float linearToSrgb(thread float& x)
    {
    #line 89 ""
        x = fast::clamp(x, 0.0, 1.0);
    #line 90 ""
        if (x <= 0.00031308000325225293636322021484375)
        {
    #line 91 ""
            return 12.9200000762939453125 * x;
        }
        else
        {
    #line 93 ""
            return (1.05499994754791259765625 * pow(x, 0.4166666567325592041015625)) - 0.054999999701976776123046875;
        }
    }
    
    #line 98 ""
    static inline __attribute__((always_inline))
    float3 linearToSrgb(thread const float3& v)
    {
    #line 98 ""
        float param = v.x;
        float _210 = linearToSrgb(param);
        float param_1 = v.y;
        float _214 = linearToSrgb(param_1);
        float param_2 = v.z;
        float _219 = linearToSrgb(param_2);
        return float3(_210, _214, _219);
    }
    
    #line 103 ""
    static inline __attribute__((always_inline))
    float3 tonemap(thread const float3& v)
    {
    #line 103 ""
        float3 param = v / (float3(1.0) + v);
        return linearToSrgb(param);
    }
    
    #line 109 ""
    fragment main0_out main0(main0_in in [[stage_in]], constant Pixel& v_38 [[buffer(0)]], texture2d_array<float> shadowGrid [[texture(0)]], sampler shadowGridSmplr [[sampler(0)]])
    {
        main0_out out = {};
    #line 109 ""
    #line 110 ""
    #line 111 ""
        float3 result = float3(0.0);
    #line 112 ""
    #line 113 ""
        for (int base = 0; base < (int(v_38.numLightsF) * 4); base += 4)
        {
            float3 param = in.v_position;
            float3 param_1 = normalize(in.v_normal);
            int param_2 = base;
            result += evalLight(param, param_1, param_2, v_38, shadowGrid, shadowGridSmplr);
        }
    #line 123 ""
        float3 param_3 = result;
        out.o_color = float4(tonemap(param_3), 1.0);
        return out;
    }
    
*/
static const char TestSkin_fs_source_metal_macos[3333] = {
    0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,
    0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,
    0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x2d,0x70,0x72,0x6f,0x74,
    0x6f,0x74,0x79,0x70,0x65,0x73,0x22,0x0a,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,
    0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,
    0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,
    0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,
    0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x50,0x69,0x78,0x65,0x6c,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6e,0x75,0x6d,0x4c,0x69,0x67,
    0x68,0x74,0x73,0x46,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x44,0x61,0x74,0x61,0x5b,0x36,0x34,0x5d,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,
    0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x6f,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,0x63,0x6f,0x6c,0x6f,
    0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,
    0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,
    0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,
    0x6c,0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x23,0x6c,
    0x69,0x6e,0x65,0x20,0x34,0x32,0x20,0x22,0x22,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,
    0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,
    0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,
    0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x65,0x76,
    0x61,0x6c,0x4c,0x69,0x67,0x68,0x74,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x50,0x2c,0x20,
    0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x26,0x20,0x4e,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x69,0x6e,0x74,0x26,0x20,0x62,0x61,0x73,0x65,0x2c,0x20,
    0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x50,0x69,0x78,0x65,0x6c,0x26,0x20,
    0x76,0x5f,0x33,0x38,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x32,0x64,0x5f,0x61,0x72,0x72,0x61,0x79,0x3c,0x66,0x6c,0x6f,
    0x61,0x74,0x3e,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x47,0x72,0x69,0x64,0x2c,0x20,
    0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x47,0x72,0x69,0x64,0x53,
    0x6d,0x70,0x6c,0x72,0x29,0x0a,0x7b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x34,0x32,
    0x20,0x22,0x22,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x34,0x33,0x20,0x22,0x22,0x0a,
    0x23,0x6c,0x69,0x6e,0x65,0x20,0x34,0x34,0x20,0x22,0x22,0x0a,0x23,0x6c,0x69,0x6e,
    0x65,0x20,0x34,0x35,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x5f,0x37,0x33,0x20,0x3d,0x20,0x76,0x5f,0x33,0x38,0x2e,0x6c,0x69,
    0x67,0x68,0x74,0x44,0x61,0x74,0x61,0x5b,0x62,0x61,0x73,0x65,0x5d,0x2e,0x78,0x79,
    0x7a,0x20,0x2d,0x20,0x50,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x37,0x37,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,0x37,0x33,0x2c,0x20,
    0x5f,0x37,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x38,0x37,0x20,0x3d,0x20,0x76,0x5f,0x33,0x38,0x2e,0x6c,0x69,0x67,0x68,0x74,
    0x44,0x61,0x74,0x61,0x5b,0x62,0x61,0x73,0x65,0x5d,0x2e,0x77,0x20,0x2a,0x20,0x76,
    0x5f,0x33,0x38,0x2e,0x6c,0x69,0x67,0x68,0x74,0x44,0x61,0x74,0x61,0x5b,0x62,0x61,
    0x73,0x65,0x5d,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,
    0x20,0x28,0x5f,0x37,0x37,0x20,0x3c,0x20,0x5f,0x38,0x37,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x5f,0x31,0x30,0x38,0x20,0x3d,0x20,0x28,0x5f,0x37,0x33,0x20,0x2a,0x20,
    0x76,0x5f,0x33,0x38,0x2e,0x6c,0x69,0x67,0x68,0x74,0x44,0x61,0x74,0x61,0x5b,0x62,
    0x61,0x73,0x65,0x20,0x2b,0x20,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2b,0x20,
    0x76,0x5f,0x33,0x38,0x2e,0x6c,0x69,0x67,0x68,0x74,0x44,0x61,0x74,0x61,0x5b,0x62,
    0x61,0x73,0x65,0x20,0x2b,0x20,0x33,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,0x34,
    0x20,0x3d,0x20,0x5f,0x31,0x30,0x38,0x2e,0x79,0x20,0x2a,0x20,0x38,0x2e,0x30,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x31,0x32,0x30,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x63,0x6c,0x61,0x6d,
    0x70,0x28,0x66,0x6c,0x6f,0x6f,0x72,0x28,0x5f,0x31,0x31,0x34,0x29,0x2c,0x20,0x30,
    0x2e,0x30,0x2c,0x20,0x37,0x2e,0x30,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,
    0x36,0x38,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x31,0x34,0x30,0x20,0x3d,0x20,0x5f,0x31,0x30,0x38,0x2e,
    0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x5f,0x31,0x34,0x32,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,
    0x5f,0x31,0x34,0x30,0x2c,0x20,0x5f,0x31,0x30,0x38,0x2e,0x7a,0x2c,0x20,0x5f,0x31,
    0x32,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x5f,0x31,0x35,0x33,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x28,0x5f,0x31,0x34,0x30,0x2c,0x20,0x5f,0x31,0x30,0x38,0x2e,0x7a,0x2c,0x20,
    0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x69,0x6e,0x28,0x5f,0x31,0x32,0x30,0x20,0x2b,
    0x20,0x31,0x2e,0x30,0x2c,0x20,0x37,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x23,0x6c,0x69,
    0x6e,0x65,0x20,0x37,0x36,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,0x20,0x28,0x28,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x28,0x6d,0x69,0x78,0x28,0x73,0x68,0x61,0x64,0x6f,0x77,0x47,0x72,0x69,
    0x64,0x2e,0x73,0x61,0x6d,0x70,0x6c,0x65,0x28,0x73,0x68,0x61,0x64,0x6f,0x77,0x47,
    0x72,0x69,0x64,0x53,0x6d,0x70,0x6c,0x72,0x2c,0x20,0x5f,0x31,0x34,0x32,0x2e,0x78,
    0x79,0x2c,0x20,0x75,0x69,0x6e,0x74,0x28,0x72,0x6f,0x75,0x6e,0x64,0x28,0x5f,0x31,
    0x34,0x32,0x2e,0x7a,0x29,0x29,0x2c,0x20,0x6c,0x65,0x76,0x65,0x6c,0x28,0x30,0x2e,
    0x30,0x29,0x29,0x2e,0x78,0x2c,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x47,0x72,0x69,
    0x64,0x2e,0x73,0x61,0x6d,0x70,0x6c,0x65,0x28,0x73,0x68,0x61,0x64,0x6f,0x77,0x47,
    0x72,0x69,0x64,0x53,0x6d,0x70,0x6c,0x72,0x2c,0x20,0x5f,0x31,0x35,0x33,0x2e,0x78,
    0x79,0x2c,0x20,0x75,0x69,0x6e,0x74,0x28,0x72,0x6f,0x75,0x6e,0x64,0x28,0x5f,0x31,
    0x35,0x33,0x2e,0x7a,0x29,0x29,0x2c,0x20,0x6c,0x65,0x76,0x65,0x6c,0x28,0x30,0x2e,
    0x30,0x29,0x29,0x2e,0x78,0x2c,0x20,0x5f,0x31,0x31,0x34,0x20,0x2d,0x20,0x5f,0x31,
    0x32,0x30,0x29,0x29,0x20,0x2a,0x20,0x64,0x6f,0x74,0x28,0x4e,0x2c,0x20,0x5f,0x37,
    0x33,0x20,0x2f,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x73,0x71,0x72,0x74,0x28,
    0x5f,0x37,0x37,0x29,0x29,0x29,0x29,0x20,0x2a,0x20,0x28,0x28,0x31,0x2e,0x30,0x20,
    0x2f,0x20,0x28,0x30,0x2e,0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,
    0x30,0x31,0x31,0x36,0x31,0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,
    0x20,0x2b,0x20,0x5f,0x37,0x37,0x29,0x29,0x20,0x2d,0x20,0x28,0x31,0x2e,0x30,0x20,
    0x2f,0x20,0x28,0x30,0x2e,0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,
    0x30,0x31,0x31,0x36,0x31,0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,
    0x20,0x2b,0x20,0x5f,0x38,0x37,0x29,0x29,0x29,0x29,0x20,0x2a,0x20,0x76,0x5f,0x33,
    0x38,0x2e,0x6c,0x69,0x67,0x68,0x74,0x44,0x61,0x74,0x61,0x5b,0x62,0x61,0x73,0x65,
    0x20,0x2b,0x20,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x23,0x6c,0x69,0x6e,0x65,0x20,0x37,0x39,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x28,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x23,0x6c,0x69,0x6e,0x65,0x20,0x38,0x32,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x38,0x39,0x20,0x22,0x22,0x0a,0x73,0x74,
    0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,
    0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,
    0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x54,0x6f,0x53,0x72,0x67,0x62,0x28,0x74,0x68,
    0x72,0x65,0x61,0x64,0x20,0x66,0x6c,0x6f,0x61,0x74,0x26,0x20,0x78,0x29,0x0a,0x7b,
    0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x38,0x39,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,
    0x20,0x78,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x63,0x6c,0x61,0x6d,0x70,
    0x28,0x78,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x23,
    0x6c,0x69,0x6e,0x65,0x20,0x39,0x30,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x78,0x20,0x3c,0x3d,0x20,0x30,0x2e,0x30,0x30,0x30,0x33,0x31,0x33,
    0x30,0x38,0x30,0x30,0x30,0x33,0x32,0x35,0x32,0x32,0x35,0x32,0x39,0x33,0x36,0x33,
    0x36,0x33,0x32,0x32,0x30,0x32,0x31,0x34,0x38,0x34,0x33,0x37,0x35,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x39,0x31,0x20,0x22,0x22,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x31,0x32,0x2e,0x39,0x32,0x30,0x30,0x30,0x30,0x30,0x37,0x36,0x32,0x39,0x33,0x39,
    0x34,0x35,0x33,0x31,0x32,0x35,0x20,0x2a,0x20,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x39,0x33,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x31,0x2e,0x30,
    0x35,0x34,0x39,0x39,0x39,0x39,0x34,0x37,0x35,0x34,0x37,0x39,0x31,0x32,0x35,0x39,
    0x37,0x36,0x35,0x36,0x32,0x35,0x20,0x2a,0x20,0x70,0x6f,0x77,0x28,0x78,0x2c,0x20,
    0x30,0x2e,0x34,0x31,0x36,0x36,0x36,0x36,0x36,0x35,0x36,0x37,0x33,0x32,0x35,0x35,
    0x39,0x32,0x30,0x34,0x31,0x30,0x31,0x35,0x36,0x32,0x35,0x29,0x29,0x20,0x2d,0x20,
    0x30,0x2e,0x30,0x35,0x34,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x30,0x31,0x39,0x37,
    0x36,0x37,0x37,0x36,0x31,0x32,0x33,0x30,0x34,0x36,0x38,0x37,0x35,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x7d,0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x39,0x38,
    0x20,0x22,0x22,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,
    0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,
    0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,
    0x0a,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x54,0x6f,
    0x53,0x72,0x67,0x62,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,
    0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x76,0x29,0x0a,0x7b,0x0a,0x23,
    0x6c,0x69,0x6e,0x65,0x20,0x39,0x38,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x76,0x2e,0x78,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x31,0x30,
    0x20,0x3d,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x54,0x6f,0x53,0x72,0x67,0x62,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x76,0x2e,0x79,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x31,0x34,0x20,
    0x3d,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x54,0x6f,0x53,0x72,0x67,0x62,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x76,0x2e,0x7a,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x31,0x39,
    0x20,0x3d,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x54,0x6f,0x53,0x72,0x67,0x62,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x5f,0x32,0x31,0x30,
    0x2c,0x20,0x5f,0x32,0x31,0x34,0x2c,0x20,0x5f,0x32,0x31,0x39,0x29,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x30,0x33,0x20,0x22,0x22,0x0a,0x73,
    0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,
    0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,
    0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x74,0x6f,0x6e,0x65,0x6d,0x61,0x70,0x28,0x74,0x68,0x72,0x65,0x61,
    0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,
    0x76,0x29,0x0a,0x7b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x30,0x33,0x20,0x22,
    0x22,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x20,0x3d,0x20,0x76,0x20,0x2f,0x20,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x28,0x31,0x2e,0x30,0x29,0x20,0x2b,0x20,0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x54,0x6f,0x53,
    0x72,0x67,0x62,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x23,
    0x6c,0x69,0x6e,0x65,0x20,0x31,0x30,0x39,0x20,0x22,0x22,0x0a,0x66,0x72,0x61,0x67,
    0x6d,0x65,0x6e,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,
    0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x50,0x69,0x78,0x65,0x6c,0x26,0x20,0x76,
    0x5f,0x33,0x38,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,
    0x5d,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x64,0x5f,0x61,0x72,0x72,
    0x61,0x79,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x3e,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,
    0x47,0x72,0x69,0x64,0x20,0x5b,0x5b,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x30,
    0x29,0x5d,0x5d,0x2c,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x73,0x68,0x61,
    0x64,0x6f,0x77,0x47,0x72,0x69,0x64,0x53,0x6d,0x70,0x6c,0x72,0x20,0x5b,0x5b,0x73,
    0x61,0x6d,0x70,0x6c,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,
    0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x30,0x39,
    0x20,0x22,0x22,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x31,0x30,0x20,0x22,0x22,
    0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x31,0x31,0x20,0x22,0x22,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,
    0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x23,
    0x6c,0x69,0x6e,0x65,0x20,0x31,0x31,0x32,0x20,0x22,0x22,0x0a,0x23,0x6c,0x69,0x6e,
    0x65,0x20,0x31,0x31,0x33,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,
    0x20,0x28,0x69,0x6e,0x74,0x20,0x62,0x61,0x73,0x65,0x20,0x3d,0x20,0x30,0x3b,0x20,
    0x62,0x61,0x73,0x65,0x20,0x3c,0x20,0x28,0x69,0x6e,0x74,0x28,0x76,0x5f,0x33,0x38,
    0x2e,0x6e,0x75,0x6d,0x4c,0x69,0x67,0x68,0x74,0x73,0x46,0x29,0x20,0x2a,0x20,0x34,
    0x29,0x3b,0x20,0x62,0x61,0x73,0x65,0x20,0x2b,0x3d,0x20,0x34,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x69,0x6e,0x2e,0x76,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x69,0x6e,0x2e,
    0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,
    0x20,0x62,0x61,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,
    0x65,0x73,0x75,0x6c,0x74,0x20,0x2b,0x3d,0x20,0x65,0x76,0x61,0x6c,0x4c,0x69,0x67,
    0x68,0x74,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x76,0x5f,0x33,0x38,
    0x2c,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x47,0x72,0x69,0x64,0x2c,0x20,0x73,0x68,
    0x61,0x64,0x6f,0x77,0x47,0x72,0x69,0x64,0x53,0x6d,0x70,0x6c,0x72,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x32,0x33,0x20,
    0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x6f,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x74,0x6f,0x6e,0x65,0x6d,0x61,0x70,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x00,
};
static const sg_shader_desc TestSkin_TestSkin_shader_desc_metal_macos = {
  0, /* _start_canary */
  { /*attrs*/{"position","TEXCOORD",0},{"uv","TEXCOORD",1},{"normal","TEXCOORD",2},{"tangent","TEXCOORD",3},{"indices","TEXCOORD",4},{"weights","TEXCOORD",5},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}, },
  { /* vs */
    TestSkin_vs_source_metal_macos, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main0", /* entry */
    { /* uniform blocks */
      {
        3072, /* size */
        { /* uniforms */{"Bones",SG_UNIFORMTYPE_FLOAT4,192},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        96, /* size */
        { /* uniforms */{"VertexUniform",SG_UNIFORMTYPE_FLOAT4,6},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  { /* fs */
    TestSkin_fs_source_metal_macos, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main0", /* entry */
    { /* uniform blocks */
      {
        1040, /* size */
        { /* uniforms */{"Pixel",SG_UNIFORMTYPE_FLOAT4,65},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {"shadowGrid",SG_IMAGETYPE_ARRAY},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  "TestSkin_TestSkin_shader", /* label */
  0, /* _end_canary */
};
#endif /* SOKOL_METAL */
#if defined(SOKOL_METAL)
/*
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct Bones
    {
        float4 bones[192];
    };
    
    struct VertexUniform
    {
        float3 color;
        float4 texScaleOffset;
        float4x4 viewProj;
    };
    
    struct main0_out
    {
        float3 v_position [[user(locn0)]];
        float3 v_normal [[user(locn1)]];
        float3 v_color [[user(locn2)]];
        float2 v_uv [[user(locn3)]];
        float4 gl_Position [[position]];
    };
    
    struct main0_in
    {
        float3 position [[attribute(0)]];
        float2 uv [[attribute(1)]];
        float3 normal [[attribute(2)]];
        uint4 indices [[attribute(4)]];
        float4 weights [[attribute(5)]];
    };
    
    #line 41 ""
    vertex main0_out main0(main0_in in [[stage_in]], constant Bones& _28 [[buffer(0)]], constant VertexUniform& _217 [[buffer(1)]])
    {
        main0_out out = {};
    #line 41 ""
        int4 _19 = int4(in.indices) * int4(3);
        int _33 = _19.x;
        int _66 = _19.y;
        int _97 = _19.z;
        int _128 = _19.w;
        float4 _136 = (((_28.bones[_33] * in.weights.x) + (_28.bones[_66] * in.weights.y)) + (_28.bones[_97] * in.weights.z)) + (_28.bones[_128] * in.weights.w);
        float4 _146 = (((_28.bones[_33 + 1] * in.weights.x) + (_28.bones[_66 + 1] * in.weights.y)) + (_28.bones[_97 + 1] * in.weights.z)) + (_28.bones[_128 + 1] * in.weights.w);
        float4 _156 = (((_28.bones[_33 + 2] * in.weights.x) + (_28.bones[_66 + 2] * in.weights.y)) + (_28.bones[_97 + 2] * in.weights.z)) + (_28.bones[_128 + 2] * in.weights.w);
        float4 _168 = float4(in.position, 1.0);
        float _169 = dot(_136, _168);
        float _176 = dot(_146, _168);
        float _183 = dot(_156, _168);
        float4 _193 = float4(in.normal, 0.0);
    #line 66 ""
        out.gl_Position = _217.viewProj * float4(_169, _176, _183, 1.0);
        out.v_position = float3(_169, _176, _183);
        out.v_normal = normalize(float3(dot(_136, _193), dot(_146, _193), dot(_156, _193)));
    #line 69 ""
        out.v_color = _217.color;
    #line 70 ""
        out.v_uv = (in.uv * _217.texScaleOffset.xy) + _217.texScaleOffset.zw;
        return out;
    }
    
*/
static const char TestSkin_vs_source_metal_ios[1980] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x42,
    0x6f,0x6e,0x65,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x31,0x39,0x32,0x5d,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x55,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x74,0x65,0x78,0x53,0x63,0x61,0x6c,0x65,0x4f,0x66,
    0x66,0x73,0x65,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x78,0x34,0x20,0x76,0x69,0x65,0x77,0x50,0x72,0x6f,0x6a,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,
    0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,
    0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,
    0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,
    0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x32,0x29,
    0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x76,
    0x5f,0x75,0x76,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x33,
    0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,
    0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,
    0x20,0x75,0x76,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,
    0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,
    0x75,0x74,0x65,0x28,0x32,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,
    0x6e,0x74,0x34,0x20,0x69,0x6e,0x64,0x69,0x63,0x65,0x73,0x20,0x5b,0x5b,0x61,0x74,
    0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x34,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x77,0x65,0x69,0x67,0x68,0x74,0x73,
    0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x35,0x29,0x5d,
    0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x34,0x31,0x20,
    0x22,0x22,0x0a,0x76,0x65,0x72,0x74,0x65,0x78,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,
    0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x42,0x6f,0x6e,
    0x65,0x73,0x26,0x20,0x5f,0x32,0x38,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,
    0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,
    0x56,0x65,0x72,0x74,0x65,0x78,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x26,0x20,0x5f,
    0x32,0x31,0x37,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x31,0x29,0x5d,
    0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,
    0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x23,0x6c,0x69,
    0x6e,0x65,0x20,0x34,0x31,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,
    0x34,0x20,0x5f,0x31,0x39,0x20,0x3d,0x20,0x69,0x6e,0x74,0x34,0x28,0x69,0x6e,0x2e,
    0x69,0x6e,0x64,0x69,0x63,0x65,0x73,0x29,0x20,0x2a,0x20,0x69,0x6e,0x74,0x34,0x28,
    0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x33,0x33,0x20,
    0x3d,0x20,0x5f,0x31,0x39,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,
    0x20,0x5f,0x36,0x36,0x20,0x3d,0x20,0x5f,0x31,0x39,0x2e,0x79,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x39,0x37,0x20,0x3d,0x20,0x5f,0x31,0x39,0x2e,
    0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x32,0x38,0x20,
    0x3d,0x20,0x5f,0x31,0x39,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x5f,0x31,0x33,0x36,0x20,0x3d,0x20,0x28,0x28,0x28,0x5f,0x32,
    0x38,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x33,0x33,0x5d,0x20,0x2a,0x20,0x69,
    0x6e,0x2e,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x78,0x29,0x20,0x2b,0x20,0x28,
    0x5f,0x32,0x38,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x36,0x36,0x5d,0x20,0x2a,
    0x20,0x69,0x6e,0x2e,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x79,0x29,0x29,0x20,
    0x2b,0x20,0x28,0x5f,0x32,0x38,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x39,0x37,
    0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x7a,
    0x29,0x29,0x20,0x2b,0x20,0x28,0x5f,0x32,0x38,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,
    0x5f,0x31,0x32,0x38,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x77,0x65,0x69,0x67,0x68,
    0x74,0x73,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x5f,0x31,0x34,0x36,0x20,0x3d,0x20,0x28,0x28,0x28,0x5f,0x32,0x38,0x2e,
    0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x33,0x33,0x20,0x2b,0x20,0x31,0x5d,0x20,0x2a,
    0x20,0x69,0x6e,0x2e,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x78,0x29,0x20,0x2b,
    0x20,0x28,0x5f,0x32,0x38,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x36,0x36,0x20,
    0x2b,0x20,0x31,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x77,0x65,0x69,0x67,0x68,0x74,
    0x73,0x2e,0x79,0x29,0x29,0x20,0x2b,0x20,0x28,0x5f,0x32,0x38,0x2e,0x62,0x6f,0x6e,
    0x65,0x73,0x5b,0x5f,0x39,0x37,0x20,0x2b,0x20,0x31,0x5d,0x20,0x2a,0x20,0x69,0x6e,
    0x2e,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x7a,0x29,0x29,0x20,0x2b,0x20,0x28,
    0x5f,0x32,0x38,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x31,0x32,0x38,0x20,0x2b,
    0x20,0x31,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x77,0x65,0x69,0x67,0x68,0x74,0x73,
    0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x5f,0x31,0x35,0x36,0x20,0x3d,0x20,0x28,0x28,0x28,0x5f,0x32,0x38,0x2e,0x62,0x6f,
    0x6e,0x65,0x73,0x5b,0x5f,0x33,0x33,0x20,0x2b,0x20,0x32,0x5d,0x20,0x2a,0x20,0x69,
    0x6e,0x2e,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x78,0x29,0x20,0x2b,0x20,0x28,
    0x5f,0x32,0x38,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x36,0x36,0x20,0x2b,0x20,
    0x32,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,
    0x79,0x29,0x29,0x20,0x2b,0x20,0x28,0x5f,0x32,0x38,0x2e,0x62,0x6f,0x6e,0x65,0x73,
    0x5b,0x5f,0x39,0x37,0x20,0x2b,0x20,0x32,0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x77,
    0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x7a,0x29,0x29,0x20,0x2b,0x20,0x28,0x5f,0x32,
    0x38,0x2e,0x62,0x6f,0x6e,0x65,0x73,0x5b,0x5f,0x31,0x32,0x38,0x20,0x2b,0x20,0x32,
    0x5d,0x20,0x2a,0x20,0x69,0x6e,0x2e,0x77,0x65,0x69,0x67,0x68,0x74,0x73,0x2e,0x77,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x31,
    0x36,0x38,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x36,0x39,0x20,0x3d,0x20,
    0x64,0x6f,0x74,0x28,0x5f,0x31,0x33,0x36,0x2c,0x20,0x5f,0x31,0x36,0x38,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x37,0x36,0x20,
    0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x34,0x36,0x2c,0x20,0x5f,0x31,0x36,0x38,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x38,
    0x33,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x35,0x36,0x2c,0x20,0x5f,0x31,
    0x36,0x38,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x5f,0x31,0x39,0x33,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,
    0x2e,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x23,
    0x6c,0x69,0x6e,0x65,0x20,0x36,0x36,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,
    0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x5f,0x32,0x31,0x37,0x2e,0x76,0x69,0x65,0x77,0x50,0x72,0x6f,0x6a,0x20,0x2a,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x5f,0x31,0x36,0x39,0x2c,0x20,0x5f,0x31,
    0x37,0x36,0x2c,0x20,0x5f,0x31,0x38,0x33,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x5f,0x31,0x36,0x39,
    0x2c,0x20,0x5f,0x31,0x37,0x36,0x2c,0x20,0x5f,0x31,0x38,0x33,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,
    0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x28,0x64,0x6f,0x74,0x28,0x5f,0x31,0x33,0x36,0x2c,0x20,0x5f,0x31,0x39,
    0x33,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x34,0x36,0x2c,0x20,0x5f,0x31,
    0x39,0x33,0x29,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x35,0x36,0x2c,0x20,0x5f,
    0x31,0x39,0x33,0x29,0x29,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x36,0x39,
    0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x5f,0x32,0x31,0x37,0x2e,0x63,0x6f,0x6c,0x6f,0x72,
    0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x37,0x30,0x20,0x22,0x22,0x0a,0x20,0x20,
    0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,0x5f,0x75,0x76,0x20,0x3d,0x20,0x28,0x69,0x6e,
    0x2e,0x75,0x76,0x20,0x2a,0x20,0x5f,0x32,0x31,0x37,0x2e,0x74,0x65,0x78,0x53,0x63,
    0x61,0x6c,0x65,0x4f,0x66,0x66,0x73,0x65,0x74,0x2e,0x78,0x79,0x29,0x20,0x2b,0x20,
    0x5f,0x32,0x31,0x37,0x2e,0x74,0x65,0x78,0x53,0x63,0x61,0x6c,0x65,0x4f,0x66,0x66,
    0x73,0x65,0x74,0x2e,0x7a,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #pragma clang diagnostic ignored "-Wmissing-prototypes"
    
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct Pixel
    {
        float numLightsF;
        float4 lightData[64];
    };
    
    struct main0_out
    {
        float4 o_color [[color(0)]];
    };
    
    struct main0_in
    {
        float3 v_position [[user(locn0)]];
        float3 v_normal [[user(locn1)]];
    };
    
    #line 42 ""
    static inline __attribute__((always_inline))
    float3 evalLight(thread const float3& P, thread const float3& N, thread const int& base, constant Pixel& v_38, thread texture2d_array<float> shadowGrid, thread const sampler shadowGridSmplr)
    {
    #line 42 ""
    #line 43 ""
    #line 44 ""
    #line 45 ""
        float3 _73 = v_38.lightData[base].xyz - P;
        float _77 = dot(_73, _73);
        float _87 = v_38.lightData[base].w * v_38.lightData[base].w;
        float3 result;
        if (_77 < _87)
        {
            float3 _108 = (_73 * v_38.lightData[base + 2].xyz) + v_38.lightData[base + 3].xyz;
            float _114 = _108.y * 8.0;
            float _120 = fast::clamp(floor(_114), 0.0, 7.0);
    #line 68 ""
            float _140 = _108.x;
            float3 _142 = float3(_140, _108.z, _120);
            float3 _153 = float3(_140, _108.z, fast::min(_120 + 1.0, 7.0));
    #line 76 ""
            result = ((float3(mix(shadowGrid.sample(shadowGridSmplr, _142.xy, uint(round(_142.z)), level(0.0)).x, shadowGrid.sample(shadowGridSmplr, _153.xy, uint(round(_153.z)), level(0.0)).x, _114 - _120)) * dot(N, _73 / float3(sqrt(_77)))) * ((1.0 / (0.100000001490116119384765625 + _77)) - (1.0 / (0.100000001490116119384765625 + _87)))) * v_38.lightData[base + 1].xyz;
        }
        else
        {
    #line 79 ""
            result = float3(0.0);
        }
    #line 82 ""
        return result;
    }
    
    #line 89 ""
    static inline __attribute__((always_inline))
    float linearToSrgb(thread float& x)
    {
    #line 89 ""
        x = fast::clamp(x, 0.0, 1.0);
    #line 90 ""
        if (x <= 0.00031308000325225293636322021484375)
        {
    #line 91 ""
            return 12.9200000762939453125 * x;
        }
        else
        {
    #line 93 ""
            return (1.05499994754791259765625 * pow(x, 0.4166666567325592041015625)) - 0.054999999701976776123046875;
        }
    }
    
    #line 98 ""
    static inline __attribute__((always_inline))
    float3 linearToSrgb(thread const float3& v)
    {
    #line 98 ""
        float param = v.x;
        float _210 = linearToSrgb(param);
        float param_1 = v.y;
        float _214 = linearToSrgb(param_1);
        float param_2 = v.z;
        float _219 = linearToSrgb(param_2);
        return float3(_210, _214, _219);
    }
    
    #line 103 ""
    static inline __attribute__((always_inline))
    float3 tonemap(thread const float3& v)
    {
    #line 103 ""
        float3 param = v / (float3(1.0) + v);
        return linearToSrgb(param);
    }
    
    #line 109 ""
    fragment main0_out main0(main0_in in [[stage_in]], constant Pixel& v_38 [[buffer(0)]], texture2d_array<float> shadowGrid [[texture(0)]], sampler shadowGridSmplr [[sampler(0)]])
    {
        main0_out out = {};
    #line 109 ""
    #line 110 ""
    #line 111 ""
        float3 result = float3(0.0);
    #line 112 ""
    #line 113 ""
        for (int base = 0; base < (int(v_38.numLightsF) * 4); base += 4)
        {
            float3 param = in.v_position;
            float3 param_1 = normalize(in.v_normal);
            int param_2 = base;
            result += evalLight(param, param_1, param_2, v_38, shadowGrid, shadowGridSmplr);
        }
    #line 123 ""
        float3 param_3 = result;
        out.o_color = float4(tonemap(param_3), 1.0);
        return out;
    }
    
*/
static const char TestSkin_fs_source_metal_ios[3333] = {
    0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,
    0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,
    0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x2d,0x70,0x72,0x6f,0x74,
    0x6f,0x74,0x79,0x70,0x65,0x73,0x22,0x0a,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,
    0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,
    0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,
    0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,
    0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x50,0x69,0x78,0x65,0x6c,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6e,0x75,0x6d,0x4c,0x69,0x67,
    0x68,0x74,0x73,0x46,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x44,0x61,0x74,0x61,0x5b,0x36,0x34,0x5d,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,
    0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x6f,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,0x63,0x6f,0x6c,0x6f,
    0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,
    0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,
    0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,
    0x6c,0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x23,0x6c,
    0x69,0x6e,0x65,0x20,0x34,0x32,0x20,0x22,0x22,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,
    0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,
    0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,
    0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x65,0x76,
    0x61,0x6c,0x4c,0x69,0x67,0x68,0x74,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x50,0x2c,0x20,
    0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x26,0x20,0x4e,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x69,0x6e,0x74,0x26,0x20,0x62,0x61,0x73,0x65,0x2c,0x20,
    0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x50,0x69,0x78,0x65,0x6c,0x26,0x20,
    0x76,0x5f,0x33,0x38,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x32,0x64,0x5f,0x61,0x72,0x72,0x61,0x79,0x3c,0x66,0x6c,0x6f,
    0x61,0x74,0x3e,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x47,0x72,0x69,0x64,0x2c,0x20,
    0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x47,0x72,0x69,0x64,0x53,
    0x6d,0x70,0x6c,0x72,0x29,0x0a,0x7b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x34,0x32,
    0x20,0x22,0x22,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x34,0x33,0x20,0x22,0x22,0x0a,
    0x23,0x6c,0x69,0x6e,0x65,0x20,0x34,0x34,0x20,0x22,0x22,0x0a,0x23,0x6c,0x69,0x6e,
    0x65,0x20,0x34,0x35,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x5f,0x37,0x33,0x20,0x3d,0x20,0x76,0x5f,0x33,0x38,0x2e,0x6c,0x69,
    0x67,0x68,0x74,0x44,0x61,0x74,0x61,0x5b,0x62,0x61,0x73,0x65,0x5d,0x2e,0x78,0x79,
    0x7a,0x20,0x2d,0x20,0x50,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x37,0x37,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,0x37,0x33,0x2c,0x20,
    0x5f,0x37,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x38,0x37,0x20,0x3d,0x20,0x76,0x5f,0x33,0x38,0x2e,0x6c,0x69,0x67,0x68,0x74,
    0x44,0x61,0x74,0x61,0x5b,0x62,0x61,0x73,0x65,0x5d,0x2e,0x77,0x20,0x2a,0x20,0x76,
    0x5f,0x33,0x38,0x2e,0x6c,0x69,0x67,0x68,0x74,0x44,0x61,0x74,0x61,0x5b,0x62,0x61,
    0x73,0x65,0x5d,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,
    0x20,0x28,0x5f,0x37,0x37,0x20,0x3c,0x20,0x5f,0x38,0x37,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x5f,0x31,0x30,0x38,0x20,0x3d,0x20,0x28,0x5f,0x37,0x33,0x20,0x2a,0x20,
    0x76,0x5f,0x33,0x38,0x2e,0x6c,0x69,0x67,0x68,0x74,0x44,0x61,0x74,0x61,0x5b,0x62,
    0x61,0x73,0x65,0x20,0x2b,0x20,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2b,0x20,
    0x76,0x5f,0x33,0x38,0x2e,0x6c,0x69,0x67,0x68,0x74,0x44,0x61,0x74,0x61,0x5b,0x62,
    0x61,0x73,0x65,0x20,0x2b,0x20,0x33,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,0x34,
    0x20,0x3d,0x20,0x5f,0x31,0x30,0x38,0x2e,0x79,0x20,0x2a,0x20,0x38,0x2e,0x30,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x31,0x32,0x30,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x63,0x6c,0x61,0x6d,
    0x70,0x28,0x66,0x6c,0x6f,0x6f,0x72,0x28,0x5f,0x31,0x31,0x34,0x29,0x2c,0x20,0x30,
    0x2e,0x30,0x2c,0x20,0x37,0x2e,0x30,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,
    0x36,0x38,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x31,0x34,0x30,0x20,0x3d,0x20,0x5f,0x31,0x30,0x38,0x2e,
    0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x5f,0x31,0x34,0x32,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,
    0x5f,0x31,0x34,0x30,0x2c,0x20,0x5f,0x31,0x30,0x38,0x2e,0x7a,0x2c,0x20,0x5f,0x31,
    0x32,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x5f,0x31,0x35,0x33,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x28,0x5f,0x31,0x34,0x30,0x2c,0x20,0x5f,0x31,0x30,0x38,0x2e,0x7a,0x2c,0x20,
    0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x69,0x6e,0x28,0x5f,0x31,0x32,0x30,0x20,0x2b,
    0x20,0x31,0x2e,0x30,0x2c,0x20,0x37,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x23,0x6c,0x69,
    0x6e,0x65,0x20,0x37,0x36,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,0x20,0x28,0x28,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x28,0x6d,0x69,0x78,0x28,0x73,0x68,0x61,0x64,0x6f,0x77,0x47,0x72,0x69,
    0x64,0x2e,0x73,0x61,0x6d,0x70,0x6c,0x65,0x28,0x73,0x68,0x61,0x64,0x6f,0x77,0x47,
    0x72,0x69,0x64,0x53,0x6d,0x70,0x6c,0x72,0x2c,0x20,0x5f,0x31,0x34,0x32,0x2e,0x78,
    0x79,0x2c,0x20,0x75,0x69,0x6e,0x74,0x28,0x72,0x6f,0x75,0x6e,0x64,0x28,0x5f,0x31,
    0x34,0x32,0x2e,0x7a,0x29,0x29,0x2c,0x20,0x6c,0x65,0x76,0x65,0x6c,0x28,0x30,0x2e,
    0x30,0x29,0x29,0x2e,0x78,0x2c,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x47,0x72,0x69,
    0x64,0x2e,0x73,0x61,0x6d,0x70,0x6c,0x65,0x28,0x73,0x68,0x61,0x64,0x6f,0x77,0x47,
    0x72,0x69,0x64,0x53,0x6d,0x70,0x6c,0x72,0x2c,0x20,0x5f,0x31,0x35,0x33,0x2e,0x78,
    0x79,0x2c,0x20,0x75,0x69,0x6e,0x74,0x28,0x72,0x6f,0x75,0x6e,0x64,0x28,0x5f,0x31,
    0x35,0x33,0x2e,0x7a,0x29,0x29,0x2c,0x20,0x6c,0x65,0x76,0x65,0x6c,0x28,0x30,0x2e,
    0x30,0x29,0x29,0x2e,0x78,0x2c,0x20,0x5f,0x31,0x31,0x34,0x20,0x2d,0x20,0x5f,0x31,
    0x32,0x30,0x29,0x29,0x20,0x2a,0x20,0x64,0x6f,0x74,0x28,0x4e,0x2c,0x20,0x5f,0x37,
    0x33,0x20,0x2f,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x73,0x71,0x72,0x74,0x28,
    0x5f,0x37,0x37,0x29,0x29,0x29,0x29,0x20,0x2a,0x20,0x28,0x28,0x31,0x2e,0x30,0x20,
    0x2f,0x20,0x28,0x30,0x2e,0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,
    0x30,0x31,0x31,0x36,0x31,0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,
    0x20,0x2b,0x20,0x5f,0x37,0x37,0x29,0x29,0x20,0x2d,0x20,0x28,0x31,0x2e,0x30,0x20,
    0x2f,0x20,0x28,0x30,0x2e,0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,
    0x30,0x31,0x31,0x36,0x31,0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,
    0x20,0x2b,0x20,0x5f,0x38,0x37,0x29,0x29,0x29,0x29,0x20,0x2a,0x20,0x76,0x5f,0x33,
    0x38,0x2e,0x6c,0x69,0x67,0x68,0x74,0x44,0x61,0x74,0x61,0x5b,0x62,0x61,0x73,0x65,
    0x20,0x2b,0x20,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x23,0x6c,0x69,0x6e,0x65,0x20,0x37,0x39,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x28,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x23,0x6c,0x69,0x6e,0x65,0x20,0x38,0x32,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x38,0x39,0x20,0x22,0x22,0x0a,0x73,0x74,
    0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,
    0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,
    0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x54,0x6f,0x53,0x72,0x67,0x62,0x28,0x74,0x68,
    0x72,0x65,0x61,0x64,0x20,0x66,0x6c,0x6f,0x61,0x74,0x26,0x20,0x78,0x29,0x0a,0x7b,
    0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x38,0x39,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,
    0x20,0x78,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x63,0x6c,0x61,0x6d,0x70,
    0x28,0x78,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x23,
    0x6c,0x69,0x6e,0x65,0x20,0x39,0x30,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x78,0x20,0x3c,0x3d,0x20,0x30,0x2e,0x30,0x30,0x30,0x33,0x31,0x33,
    0x30,0x38,0x30,0x30,0x30,0x33,0x32,0x35,0x32,0x32,0x35,0x32,0x39,0x33,0x36,0x33,
    0x36,0x33,0x32,0x32,0x30,0x32,0x31,0x34,0x38,0x34,0x33,0x37,0x35,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x39,0x31,0x20,0x22,0x22,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x31,0x32,0x2e,0x39,0x32,0x30,0x30,0x30,0x30,0x30,0x37,0x36,0x32,0x39,0x33,0x39,
    0x34,0x35,0x33,0x31,0x32,0x35,0x20,0x2a,0x20,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x39,0x33,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x31,0x2e,0x30,
    0x35,0x34,0x39,0x39,0x39,0x39,0x34,0x37,0x35,0x34,0x37,0x39,0x31,0x32,0x35,0x39,
    0x37,0x36,0x35,0x36,0x32,0x35,0x20,0x2a,0x20,0x70,0x6f,0x77,0x28,0x78,0x2c,0x20,
    0x30,0x2e,0x34,0x31,0x36,0x36,0x36,0x36,0x36,0x35,0x36,0x37,0x33,0x32,0x35,0x35,
    0x39,0x32,0x30,0x34,0x31,0x30,0x31,0x35,0x36,0x32,0x35,0x29,0x29,0x20,0x2d,0x20,
    0x30,0x2e,0x30,0x35,0x34,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x30,0x31,0x39,0x37,
    0x36,0x37,0x37,0x36,0x31,0x32,0x33,0x30,0x34,0x36,0x38,0x37,0x35,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x7d,0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x39,0x38,
    0x20,0x22,0x22,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,
    0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,
    0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,
    0x0a,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x54,0x6f,
    0x53,0x72,0x67,0x62,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,
    0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x76,0x29,0x0a,0x7b,0x0a,0x23,
    0x6c,0x69,0x6e,0x65,0x20,0x39,0x38,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x76,0x2e,0x78,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x31,0x30,
    0x20,0x3d,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x54,0x6f,0x53,0x72,0x67,0x62,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x76,0x2e,0x79,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x31,0x34,0x20,
    0x3d,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x54,0x6f,0x53,0x72,0x67,0x62,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x76,0x2e,0x7a,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x31,0x39,
    0x20,0x3d,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x54,0x6f,0x53,0x72,0x67,0x62,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x5f,0x32,0x31,0x30,
    0x2c,0x20,0x5f,0x32,0x31,0x34,0x2c,0x20,0x5f,0x32,0x31,0x39,0x29,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x30,0x33,0x20,0x22,0x22,0x0a,0x73,
    0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,
    0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,
    0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x74,0x6f,0x6e,0x65,0x6d,0x61,0x70,0x28,0x74,0x68,0x72,0x65,0x61,
    0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,
    0x76,0x29,0x0a,0x7b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x30,0x33,0x20,0x22,
    0x22,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x20,0x3d,0x20,0x76,0x20,0x2f,0x20,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x28,0x31,0x2e,0x30,0x29,0x20,0x2b,0x20,0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x54,0x6f,0x53,
    0x72,0x67,0x62,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x23,
    0x6c,0x69,0x6e,0x65,0x20,0x31,0x30,0x39,0x20,0x22,0x22,0x0a,0x66,0x72,0x61,0x67,
    0x6d,0x65,0x6e,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,
    0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x50,0x69,0x78,0x65,0x6c,0x26,0x20,0x76,
    0x5f,0x33,0x38,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,
    0x5d,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x64,0x5f,0x61,0x72,0x72,
    0x61,0x79,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x3e,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,
    0x47,0x72,0x69,0x64,0x20,0x5b,0x5b,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x30,
    0x29,0x5d,0x5d,0x2c,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x73,0x68,0x61,
    0x64,0x6f,0x77,0x47,0x72,0x69,0x64,0x53,0x6d,0x70,0x6c,0x72,0x20,0x5b,0x5b,0x73,
    0x61,0x6d,0x70,0x6c,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,
    0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x30,0x39,
    0x20,0x22,0x22,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x31,0x30,0x20,0x22,0x22,
    0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x31,0x31,0x20,0x22,0x22,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,
    0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x23,
    0x6c,0x69,0x6e,0x65,0x20,0x31,0x31,0x32,0x20,0x22,0x22,0x0a,0x23,0x6c,0x69,0x6e,
    0x65,0x20,0x31,0x31,0x33,0x20,0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,
    0x20,0x28,0x69,0x6e,0x74,0x20,0x62,0x61,0x73,0x65,0x20,0x3d,0x20,0x30,0x3b,0x20,
    0x62,0x61,0x73,0x65,0x20,0x3c,0x20,0x28,0x69,0x6e,0x74,0x28,0x76,0x5f,0x33,0x38,
    0x2e,0x6e,0x75,0x6d,0x4c,0x69,0x67,0x68,0x74,0x73,0x46,0x29,0x20,0x2a,0x20,0x34,
    0x29,0x3b,0x20,0x62,0x61,0x73,0x65,0x20,0x2b,0x3d,0x20,0x34,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x69,0x6e,0x2e,0x76,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x69,0x6e,0x2e,
    0x76,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,
    0x20,0x62,0x61,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,
    0x65,0x73,0x75,0x6c,0x74,0x20,0x2b,0x3d,0x20,0x65,0x76,0x61,0x6c,0x4c,0x69,0x67,
    0x68,0x74,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x76,0x5f,0x33,0x38,
    0x2c,0x20,0x73,0x68,0x61,0x64,0x6f,0x77,0x47,0x72,0x69,0x64,0x2c,0x20,0x73,0x68,
    0x61,0x64,0x6f,0x77,0x47,0x72,0x69,0x64,0x53,0x6d,0x70,0x6c,0x72,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x32,0x33,0x20,
    0x22,0x22,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x6f,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x74,0x6f,0x6e,0x65,0x6d,0x61,0x70,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x00,
};
static const sg_shader_desc TestSkin_TestSkin_shader_desc_metal_ios = {
  0, /* _start_canary */
  { /*attrs*/{"position","TEXCOORD",0},{"uv","TEXCOORD",1},{"normal","TEXCOORD",2},{"tangent","TEXCOORD",3},{"indices","TEXCOORD",4},{"weights","TEXCOORD",5},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}, },
  { /* vs */
    TestSkin_vs_source_metal_ios, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main0", /* entry */
    { /* uniform blocks */
      {
        3072, /* size */
        { /* uniforms */{"Bones",SG_UNIFORMTYPE_FLOAT4,192},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        96, /* size */
        { /* uniforms */{"VertexUniform",SG_UNIFORMTYPE_FLOAT4,6},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  { /* fs */
    TestSkin_fs_source_metal_ios, /* source */
    0,  /* bytecode */
    0,  /* bytecode_size */
    "main0", /* entry */
    { /* uniform blocks */
      {
        1040, /* size */
        { /* uniforms */{"Pixel",SG_UNIFORMTYPE_FLOAT4,65},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
      {
        0, /* size */
        { /* uniforms */{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0},{0,SG_UNIFORMTYPE_INVALID,0}, },
      },
    },
    { /* images */ {"shadowGrid",SG_IMAGETYPE_ARRAY},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT},{0,_SG_IMAGETYPE_DEFAULT}, },
  },
  "TestSkin_TestSkin_shader", /* label */
  0, /* _end_canary */
};
#endif /* SOKOL_METAL */
const sg_shader_desc* TestSkin_TestSkin_shader_desc(void) {
    #if defined(SOKOL_GLCORE33)
    if (sg_query_backend() == SG_BACKEND_GLCORE33) {
        return &TestSkin_TestSkin_shader_desc_glsl330;
    }
    #endif /* SOKOL_GLCORE33 */
    #if defined(SOKOL_GLES3)
    if (sg_query_backend() == SG_BACKEND_GLES3) {
        return &TestSkin_TestSkin_shader_desc_glsl300es;
    }
    #endif /* SOKOL_GLES3 */
    #if defined(SOKOL_D3D11)
    if (sg_query_backend() == SG_BACKEND_D3D11) {
        return &TestSkin_TestSkin_shader_desc_hlsl5;
    }
    #endif /* SOKOL_D3D11 */
    #if defined(SOKOL_METAL)
    if (sg_query_backend() == SG_BACKEND_METAL_MACOS) {
        return &TestSkin_TestSkin_shader_desc_metal_macos;
    }
    #endif /* SOKOL_METAL */
    #if defined(SOKOL_METAL)
    if (sg_query_backend() == SG_BACKEND_METAL_IOS) {
        return &TestSkin_TestSkin_shader_desc_metal_ios;
    }
    #endif /* SOKOL_METAL */
    return 0; /* can't happen */
}
#endif /* SOKOL_SHDC_IMPL */
